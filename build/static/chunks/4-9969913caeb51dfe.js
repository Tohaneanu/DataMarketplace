(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4],{18166:function(e,t,n){"use strict";n.d(t,{H:function(){return s}});var r=n(77124);function s(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},60224:function(e,t,n){"use strict";n.d(t,{bk:function(){return a},fC:function(){return i}});var r=n(77124),s=n(18166);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,s.H)(t,"abs");let i=new Float32Array(r.D5U.sizeFromShape(t.shape));return i=a(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,t.dtype)}}},32779:function(e,t,n){"use strict";n.d(t,{EH:function(){return i},IH:function(){return u},j4:function(){return l}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e+t)),o=(0,a.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,a.j)(r.mm_,i,o),l={kernelName:r.mm_,backendName:"cpu",kernelFunc:u}},58607:function(e,t,n){"use strict";n.d(t,{W:function(){return s},i:function(){return a}});var r=n(77124);function s(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=r.D5U.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[r]:1)}return o}function a(e,t,n,s=!1){const a=e.shape[0],i=e.shape[1],o=(0,r.f3b)([a,n],t.dtype);for(let r=0;r<a;r++)for(let a=0;a<i;a++){const i=e.get(r,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?o.set(1,r,i):t.size>0?o.set(o.get(r,i)+t.get(r,a),r,i):o.set(o.get(r,i)+1,r,i))}return o}},5003:function(e,t,n){"use strict";n.d(t,{T0:function(){return u},nv:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e&t)),o=(0,a.j)(r.hCO,i),u={kernelName:r.hCO,backendName:"cpu",kernelFunc:o}},29258:function(e,t,n){"use strict";n.d(t,{Mq:function(){return h},pj:function(){return c},sJ:function(){return l}});var r=n(77124),s=n(33533),a=n(24391),i=n(26961),o=n(41775),u=n(82186);function l(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=r.D5U.toTypedArray([0],n),[i,o]=(0,s.b)(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function c(e){const{inputs:t,backend:n,attrs:s}=e,{x:h}=t,{dtype:d}=s;if("complex64"===d){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,a.l)(n,h.shape,h.dtype),t=c({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),r=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===h.dtype){const e=(0,u.k)({inputs:{input:h},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:d}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.hasEncodingLoss(h.dtype,d)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:d}}const p=n.data.get(h.dataId).values,[f,m,g]=l(p,h.shape,h.dtype,d);return n.makeTensorInfo(f,m,g)}const h={kernelName:r.RFZ,backendName:"cpu",kernelFunc:c}},34769:function(e,t,n){"use strict";n.d(t,{__:function(){return i},y2:function(){return u}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.ceil(e))),o=(0,a.O)(r.gJX,i),u={kernelName:r.gJX,backendName:"cpu",kernelFunc:o}},26961:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}n.d(t,{P:function(){return r},z:function(){return s}});const s={kernelName:n(77124).Zz9,backendName:"cpu",kernelFunc:r}},48926:function(e,t,n){"use strict";n.d(t,{j:function(){return s}});var r=n(77124);function s(e,t,n,s){const a=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?r.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[r+t]=i[o++]}s+=e.shape[1]}))}return a}},7679:function(e,t,n){"use strict";n.d(t,{Dg:function(){return o},Kx:function(){return u},tW:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e===t?1:0)),o=(0,a.j)(r.hdR,i,null,"bool"),u={kernelName:r.hdR,backendName:"cpu",kernelFunc:o}},31211:function(e,t,n){"use strict";n.d(t,{Qq:function(){return o},Ro:function(){return i},SX:function(){return u}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.exp(e))),o=(0,a.O)(r.NEP,i,"float32"),u={kernelName:r.NEP,backendName:"cpu",kernelFunc:o}},30969:function(e,t,n){"use strict";n.d(t,{OF:function(){return i},Vu:function(){return u}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.expm1(e))),o=(0,a.O)(r.Y0y,i),u={kernelName:r.Y0y,backendName:"cpu",kernelFunc:o}},76574:function(e,t,n){"use strict";n.d(t,{Ao:function(){return u},r6:function(){return i}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.floor(e))),o=(0,a.O)(r.OR,i),u={kernelName:r.OR,backendName:"cpu",kernelFunc:o}},44892:function(e,t,n){"use strict";n.d(t,{EE:function(){return u},JP:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>Math.floor(e/t))),o=(0,a.j)(r.jeX,i,null,"int32"),u={kernelName:r.jeX,backendName:"cpu",kernelFunc:o}},31820:function(e,t,n){"use strict";n.d(t,{m:function(){return s}});var r=n(77124);function s(e,t,n,s,a,i,o,u,l){const c=(0,r.f3b)([s,i],n);for(let r=0;r<s;r++){const n=[];let s=0;for(let t=0;t<a;t++){const i=e[r*a+t];s+=i*o[t],n.push(i)}if(s<0||s>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<i;e++)c.values[r*i+e]=t.get(...t.indexToLoc(s*i+e))}return c}},54468:function(e,t,n){"use strict";n.d(t,{i:function(){return s}});var r=n(77124);function s(e,t,n){const s=(0,r.f3b)(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}},36272:function(e,t,n){"use strict";n.d(t,{Ce:function(){return u},o:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e>t?1:0)),o=(0,a.j)(r.iZT,i,null,"bool"),u={kernelName:r.iZT,backendName:"cpu",kernelFunc:o}},26259:function(e,t,n){"use strict";n.d(t,{HL:function(){return i},V:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e>=t?1:0)),o=(0,a.j)(r.Acj,i,null,"bool"),u={kernelName:r.Acj,backendName:"cpu",kernelFunc:o}},41775:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{I:function(){return s},y:function(){return r}});const s={kernelName:n(77124).iJz,backendName:"cpu",kernelFunc:r}},88405:function(e,t,n){"use strict";n.d(t,{rO:function(){return i},zh:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e<t?1:0)),o=(0,a.j)(r.vtC,i,null,"bool"),u={kernelName:r.vtC,backendName:"cpu",kernelFunc:o}},40635:function(e,t,n){"use strict";n.d(t,{lx:function(){return i},m3:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e<=t?1:0)),o=(0,a.j)(r.CAk,i,null,"bool"),u={kernelName:r.CAk,backendName:"cpu",kernelFunc:o}},61325:function(e,t,n){"use strict";n.d(t,{b:function(){return s}});var r=n(77124);function s(e,t,n){const s=(t-e)/(n-1),a=r.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}},55223:function(e,t,n){"use strict";n.d(t,{vX:function(){return i},xM:function(){return u}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.log(e))),o=(0,a.O)(r.ZbH,i),u={kernelName:r.ZbH,backendName:"cpu",kernelFunc:o}},55126:function(e,t,n){"use strict";n.d(t,{B:function(){return s}});var r=n(77124);function s(e,t,n,s){const a=r.D5U.getTypedArrayFromDType(s,r.D5U.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}},71717:function(e,t,n){"use strict";n.d(t,{eJ:function(){return u},wS:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>Math.max(e,t))),o=(0,a.j)(r.BMI,i),u={kernelName:r.BMI,backendName:"cpu",kernelFunc:o}},612:function(e,t,n){"use strict";n.d(t,{u0:function(){return u},vP:function(){return i}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>Math.min(e,t))),o=(0,a.j)(r.q8u,i),u={kernelName:r.q8u,backendName:"cpu",kernelFunc:o}},65491:function(e,t,n){"use strict";n.d(t,{$3:function(){return i},Jp:function(){return u},f$:function(){return l}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e*t)),o=(0,a.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,a.j)(r.wYn,i,o),l={kernelName:r.wYn,backendName:"cpu",kernelFunc:u}},70854:function(e,t,n){"use strict";n.d(t,{AF:function(){return o},uC:function(){return i}});var r=n(77124),s=n(18166),a=n(65491);function i(e,t,n){const s=r.D5U.createScalarValue(-1,n);return(0,a.$3)([],t,s,e,n)}const o={kernelName:r.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,s.H)(r,"neg");const a=n.data.get(r.dataId).values,[o,u]=i(a,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},98584:function(e,t,n){"use strict";n.d(t,{Gj:function(){return i},nP:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e!==t?1:0)),o=(0,a.j)(r.yQU,i,null,"bool"),u={kernelName:r.yQU,backendName:"cpu",kernelFunc:o}},29560:function(e,t,n){"use strict";n.d(t,{Iz:function(){return o},Qg:function(){return i}});var r=n(77124),s=n(18166),a=n(44802);function i(e,t,n,s){const[a,i]=r.Wap.computeOutAndReduceShapes(e,s),o=(0,r.x8V)(t,"int32"),u=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(a),o),l=r.D5U.sizeFromShape(i);for(let r=0;r<u.length;++r){const e=r*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:a,outDtype:o}}const o={kernelName:r.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,s.H)(u,"prod");const h=u.shape.length,d=r.D5U.parseAxisParam(l,u.shape),p=r.Wap.getAxesPermutation(d,h);let f=d,m=u;const g=[];null!=p&&(m=(0,a.p)({inputs:{x:u},backend:n,attrs:{perm:p}}),g.push(m),f=r.Wap.getInnerMostAxes(f.length,h));const b=n.data.get(m.dataId).values,{outVals:x,outShape:y,outDtype:k}=i(m.shape,m.dtype,b,f);let v=y;return c&&(v=r.Wap.expandShapeToKeepDim(y,d)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,k,x)}}},59885:function(e,t,n){"use strict";n.d(t,{c:function(){return o}});var r=n(77124);function s(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const e=t[l+1];for(let t=1;t<u+1;++t)o[l].push(t*e)}for(let l=0;l<e.length;++l){let r=e[l],i=e[l]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-s[r];for(let n=r;n<i;++n)o[a].push(s[n+1]+t)}r=s[r],i=s[i]}i!==r&&(s.push([r,i]),a+=i-r)}return{outSplits:o,valueSlices:s,numValues:a}}function a(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function i(e,t,n,s,i){const o=t.slice();o[0]=i;const u=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(o)),l=e.length;return function(e,t,n,r,s,i){const o=a(t,2)[1],u=a(i,2)[1];let l=0;for(const a of n)for(let t=a[0];t<a[1];++t){for(let n=0;n<r;++n)s[l*u+n]=e[t*o+n];++l}}(e,t,s,0===l?0:l/t[0],u,o),[u,o]}function o(e,t,n,a,o,u,l,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const a=r.D5U.indexToLoc(s,t.length,r.D5U.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(u,l,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const h=a[0],{outSplits:d,valueSlices:p,numValues:f}=s(u,l,e,h),m=function(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,a=r.D5U.getArrayFromDType("int32",s);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(d),g=i(n,a,o,p,f);return[m,g[0],g[1]]}},36486:function(e,t,n){"use strict";n.d(t,{S:function(){return a}});var r=n(77124);const s=2147483647;function a(e,t,n,a,i,o,u){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(u.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,c=0===i.length,h=0===u.length,d=[];l||d.push(t[0]),c||d.push(i[0]),h||d.push(u[0]);for(let r=1;r<d.length;++r)if(d[r]!==d[r-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===d.length?1:d[0],f=r.D5U.getArrayFromDType("int32",p+1);f[0]=0;for(let r=0;r<p;++r){const t=l?e[0]:e[r],n=c?a[0]:a[r],i=h?o[0]:o[r];if(0===i)throw new Error("Requires delta != 0");let u;if(i>0&&n<t||i<0&&n>t)u=0;else if(u=Math.ceil(Math.abs((n-t)/i)),u>s)throw new Error("Requires ((limit - start) / delta) <= 2147483647");f[r+1]=f[r]+u}const m=f[p],g=r.D5U.getArrayFromDType(n,m);let b=0;for(let r=0;r<p;++r){const t=f[r+1]-f[r];let n=l?e[0]:e[r];const s=h?o[0]:o[r];for(let e=0;e<t;++e)g[b++]=n,n+=s}return[f,g]}},8306:function(e,t,n){"use strict";n.d(t,{p:function(){return u}});var r=n(77124),s=r.Wap.RowPartitionType;class a{constructor(e,t,n,s,a,i,o,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=r.Wap.getRowPartitionTypesHelper(c),this.raggedRank=r.Wap.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case s.VALUE_ROWIDS:return a.getMaxWidthValueRowID(t);case s.ROW_SPLITS:return a.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return o(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;r.Wap.validateDefaultValueShape(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=r.Wap.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),a=[];let i=0;for(let r=0;r<s;++r,i+=t)a.push(i);for(let r=s;r<e;++r)a.push(-1);return r.D5U.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case s.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${s[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case s.FIRST_DIM_SIZE:return e[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const s=o(t,!1),a=r.D5U.getArrayFromDType(this.valuesDType,r.D5U.sizeFromShape(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,a,s)}return[s,a]}setOutput(e,t,n,s){if(0===n.length)return;const a=this.values,o=n;let u=s.slice();u=u.slice(e+1);const l=r.D5U.sizeFromShape(u),c=t.length;let h=this.defaultValue;if(h.length!==l&&1!==h.length){const e=this.defaultValueShape;(0,r.lub)((()=>{const t=(0,r.XLQ)(h,e),n=(0,r.UFq)(t,u);h=n.dataSync()}))}let d=0,p=0,f=0;for(let r=0;r<=c;++r){let e=r<c?t[r]:-1;if(e!==f){if(p<f){const e=a.subarray(d*l);i(o.subarray(p*l),e,(f-p)*l)}if(r>=c){const t=n.length;e=Math.floor(t/l)}if(e>f)if(1===this.defaultValue.length)o.subarray(f*l,e*l).fill(this.defaultValue[0]),f=e;else for(;e>f;){i(o.slice(f*l),h,l),++f}e<0?(d=r+1,p=f):(d=r,p=f,f=p+1)}else++f}}}function i(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function o(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function u(e,t,n,r,s,i,o,u,l,c){return new a(e,t,n,r,s,i,o,u,l,c).compute()}},99230:function(e,t,n){"use strict";n.d(t,{b:function(){return s}});var r=n(77124);function s(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.D5U.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}},82186:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}n.d(t,{O:function(){return s},k:function(){return r}});const s={kernelName:n(77124).xJR,backendName:"cpu",kernelFunc:r}},7742:function(e,t,n){"use strict";n.d(t,{FY:function(){return u},zd:function(){return i}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>1/Math.sqrt(e))),o=(0,a.O)(r.bV0,i),u={kernelName:r.bV0,backendName:"cpu",kernelFunc:o}},60001:function(e,t,n){"use strict";n.d(t,{N:function(){return s}});var r=n(77124);function s(e,t,n,s,a,i,o,u,l,c){const h=[s/a,a],d=e.values,p=t.values;if(0===s)return(0,r.f3b)(n,t.dtype);const f=l instanceof r.YDk?l:(0,r.f3b)(h,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let r=0;r<i;r++){const e=[];let i=0;for(let t=0;t<o;t++){const n=d[r*o+t];e.push(n),i+=n*u[t]}if(i<0||i>=s/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[i*a+n]+=p[r*a+n]:f.values[i*a+n]=0===t.rank?p[0]:p[r*a+n]}return f}},40108:function(e,t,n){"use strict";n.d(t,{BP:function(){return u},VY:function(){return i},XD:function(){return o}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>1/(1+Math.exp(-e)))),o=(0,a.A)(r.a5O,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.a5O,backendName:"cpu",kernelFunc:o}},82578:function(e,t,n){"use strict";n.d(t,{C6:function(){return o},rT:function(){return a},tP:function(){return i}});var r=n(77124),s=n(18166);function a(e,t,n,s,a){const i=r.kuN.isSliceContinous(s,t,n),o=r.D5U.sizeFromShape(n),u=r.D5U.computeStrides(s);if(i){const n=r.kuN.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===a?r.Wap.fromUint8ToStringArray(e):e,c=(0,r.f3b)(s,a,l),h=(0,r.f3b)(n,a);for(let r=0;r<h.size;++r){const e=h.indexToLoc(r),n=e.map(((e,n)=>e+t[n]));h.set(c.get(...n),...e)}return"string"===a?r.Wap.fromStringArrayToUint8(h.values):h.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,s.H)(o,"slice");const[c,h]=r.kuN.parseSliceParams(o,u,l);r.kuN.assertParamsValid(o,c,h);const d=a(n.data.get(o.dataId).values,c,h,o.shape,o.dtype);return n.makeTensorInfo(h,o.dtype,d)}const o={kernelName:r.p2w,backendName:"cpu",kernelFunc:i}},42123:function(e,t,n){"use strict";n.d(t,{c:function(){return s}});var r=n(77124);function s(e,t,n,s,a,i,o){const u=t[0],l=i[0],c=new Array(l),h=new Array(u),d=t[1];if(0===l){if(0!==u)throw new Error(r.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.D5U.getArrayFromDType(n,0),[0,d],r.D5U.getArrayFromDType(a,0),c,h]}let p=!0,f=0;const m=new Array(l).fill(0);for(let b=0;b<u;++b){const t=e[b*d];if(t<0)throw new Error(r.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(b,t));if(t>=l)throw new Error(r.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(b,t,l));++m[t],p=p&&t>=f,f=t}let g=!0;for(let r=0;r<l;++r){const e=0===m[r];c[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&p){const t=e,n=s;for(let e=0;e<u;++e)h[e]=e;return[t,[u,d],n,c,h]}{const t=m[l-1],i=r.D5U.getArrayFromDType(n,t*d),p=r.D5U.getArrayFromDType(a,t),f=new Array(l).fill(0);for(let n=0;n<u;++n){const t=e[n*d],r=f[t],a=(0===t?0:m[t-1])+r;f[t]++;for(let s=0;s<d;++s)i[a*d+s]=e[n*d+s];p[a]=s[n],h[n]=a}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];i[t*d+0]=e;for(let e=1;e<d;++e)i[t*d+e]=0;p[t]=o}}return[i,[t,d],p,c,h]}}},3849:function(e,t,n){"use strict";n.d(t,{U:function(){return s}});var r=n(77124);function s(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=t[0],u=a.length,l=[];let c=1,h=-1;for(let g=0;g<u;++g){const e=a[g];if(-1===e){if(-1!==h)throw new Error(r.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,g));h=g,l.push(1)}else{if(e<0)throw new Error(r.Wap.getSparseReshapeNegativeOutputDimErrorMessage(g,e));c*=e,l.push(e)}}if(-1!==h){if(c<=0)throw new Error(r.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(r.Wap.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[h]=e}if(r.D5U.sizeFromShape(l)!==i)throw new Error(r.Wap.getSparseReshapeInputOutputMismatchErrorMessage(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=r.D5U.getArrayFromDType(n,o*u);for(let r=0;r<o;++r){let t=0;for(let n=0;n<d;++n)t+=e[r*d+n]*p[n];for(let e=0;e<u;++e)m[r*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,u],l]}},13989:function(e,t,n){"use strict";n.d(t,{V:function(){return s}});var r=n(77124);function s(e,t,n,s,a,i=!1,o=0){const u=s.length,l=[t[0],e.length/t[0]],c=l[1],h=u>0?a[u-1]+1:0;if(h<0)throw new Error(r.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=r.D5U.getArrayFromDType(n,p);if(0===u)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(r.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,x=a[m];for(;;){let t=0;if(g<u){if(t=a[g],x===t){++g;continue}if(x>=t)throw new Error(r.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=h)throw new Error(r.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,h));x>b&&f.fill(o,b*c,x*c);for(let n=m;n<g;++n){const t=s[n];if(t<0||t>=l[0])throw new Error(r.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],l[0]));for(let n=0;n<c;n++)f[x*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)f[x*c+e]/=g-m;if(m=g,++g,b=x+1,x=t,g>u)break}return b<h&&f.fill(o,b*c,h*c),[f,d]}},10440:function(e,t,n){"use strict";n.d(t,{cz:function(){return u},zT:function(){return i}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)((e=>Math.sqrt(e))),o=(0,a.A)(r.FKq,(e=>Math.sqrt(e))),u={kernelName:r.FKq,backendName:"cpu",kernelFunc:o}},40212:function(e,t,n){"use strict";n.d(t,{Hz:function(){return i},MS:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,a.j)(r._tC,i),u={kernelName:r._tC,backendName:"cpu",kernelFunc:o}},27693:function(e,t,n){"use strict";n.d(t,{P:function(){return i},j:function(){return u}});var r=n(77124),s=n(18029),a=n(76738);const i=(0,s.a)(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),o=(0,a.O)(r.e0R,i),u={kernelName:r.e0R,backendName:"cpu",kernelFunc:o}},62210:function(e,t,n){"use strict";n.d(t,{t:function(){return s}});var r=n(77124);function s(e,t,n,s){const a=(0,r.f3b)(e,t.dtype);for(let r=0;r<a.size;r++){const e=a.indexToLoc(r),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+s[t];a.set(t.get(...i),...e)}return a}},66841:function(e,t,n){"use strict";n.d(t,{A:function(){return a}});var r=n(77124);class s{constructor(e,t,n,s,a,i){this.separator=r.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=r.D5U.encodeString(n),this.rightPad=r.D5U.encodeString(s),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=s-1,i=r.D5U.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)i[t]=0;return[e,i]}i[0]=0;for(let r=1;r<=a;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[a]);for(let r=0;r<a;++r){const n=t[r];let s=i[r];if(this.nGramWidths.forEach((a=>{const i=t[r+1]-t[r],u=this.getNumNGrams(i,a);this.createNGrams(e,n,o,s,u,a),s+=u})),this.preserveShort&&s===i[r]){const a=t[r+1]-t[r];if(0===a)continue;const i=a+2*this.padWidth,u=1;this.createNGrams(e,n,o,s,u,i)}}return[o,i]}}function a(e,t,n,r,a,i,o,u){return new s(n,r,a,i,o,u).compute(e,t)}},38639:function(e,t,n){"use strict";n.d(t,{Q:function(){return a}});var r=n(77124);function s(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function a(e,t,n){const a=e.length,i=[];let o=0,u=0;const l=new Array(a);for(let r=0;r<a;++r){const a=i.length;s(e[r],t,n,i);const c=i.length-a;l[r]=c,o+=c,u=Math.max(u,c)}const c=r.D5U.getArrayFromDType("int32",2*o),h=new Array(o),d=[a,u];let p=0;for(let r=0;r<a;++r)for(let e=0;e<l[r];++e)c[2*p]=r,c[2*p+1]=e,h[p]=i[p],++p;return[c,h,d]}},26626:function(e,t,n){"use strict";n.d(t,{h:function(){return s}});var r=n(77124);function s(e,t){const n=r.D5U.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=r.D5U.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}},71649:function(e,t,n){"use strict";n.d(t,{GR:function(){return l},VY:function(){return i},lu:function(){return u}});var r=n(77124),s=n(33533),a=n(46205);const i=(0,s.b)(((e,t)=>e-t)),o=(0,a.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,a.j)(r.Tr8,i,o),l={kernelName:r.Tr8,backendName:"cpu",kernelFunc:u}},27723:function(e,t,n){"use strict";n.d(t,{R:function(){return s}});var r=n(77124);function s(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=(0,r.f3b)(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);s.values[r]=e.values[a]}return s}},69556:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(77124);const s=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function a(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,s=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(s-r/2);a(e,t,Math.max(n,Math.floor(t-s*u/r+l)),Math.min(i,Math.floor(t+(r-s)*u/r+l)))}const o=e[t];let u=n,l=i;for(r.D5U.swap(e,n,t),s(e[i],o)>0&&r.D5U.swap(e,n,i);u<l;){for(r.D5U.swap(e,u,l),u++,l--;s(e[u],o)<0;)u+=1;for(;s(e[l],o)>0;)l-=1}0===s(e[n],o)?r.D5U.swap(e,n,l):(l+=1,r.D5U.swap(e,l,i)),l<=t&&(n=l+1),t<=l&&(i=l-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[l,c]=[e.length/u,u],h=r.D5U.getTypedArrayFromDType(n,l*i),d=r.D5U.getTypedArrayFromDType("int32",l*i);for(let r=0;r<l;r++){const t=r*c,n=e.subarray(t,t+c);let u=new Array(n.length);n.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(a(u,i),u=u.slice(0,i)),o&&u.sort(s);const l=r*i,p=h.subarray(l,l+i),f=d.subarray(l,l+i);for(let e=0;e<i;e++)p[e]=u[e].value,f[e]=u[e].index}const p=t.slice();return p[p.length-1]=i,[(0,r.f3b)(p,n,h),(0,r.f3b)(p,"int32",d)]}},44802:function(e,t,n){"use strict";n.d(t,{b:function(){return o},p:function(){return i}});var r=n(77124),s=n(18166),a=n(77107);function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;(0,s.H)(i,"transpose");const u=i.shape.length,l=new Array(u);for(let s=0;s<l.length;s++)l[s]=i.shape[o[s]];const c=r.data.get(i.dataId).values,h=(0,a.H)(c,i.shape,i.dtype,o,l);return{dataId:r.write(h,l,i.dtype),shape:l,dtype:i.dtype}}const o={kernelName:r.G3Y,backendName:"cpu",kernelFunc:i}},77107:function(e,t,n){"use strict";n.d(t,{H:function(){return s}});var r=n(77124);function s(e,t,n,s,a){const i=t.length,o=r.D5U.sizeFromShape(t),u=r.D5U.computeStrides(t),l=r.D5U.computeStrides(a),c=r.D5U.getTypedArrayFromDType(n,r.D5U.sizeFromShape(a));for(let h=0;h<o;++h){const t=r.D5U.indexToLoc(h,i,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];c[r.D5U.locToIndex(n,i,l)]=e[h]}return c}},75638:function(e,t,n){"use strict";n.d(t,{S:function(){return s}});var r=n(77124);function s(e,t,n,s){const a=r.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<a;r++)i[0]*=n[r];i[1]=n[a];for(let r=a+1;r<n.length;r++)i[2]*=n[r];const o=new Map,u=new Int32Array(n[a]),l=new r.YDk(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let r=0;r<n[a];r++){let t;if(h)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,r,n));t=e.join(",")}const n=o.get(t);if(null!=n)u[r]=n;else{const e=o.size;o.set(t,e),u[r]=e,c.push(r)}}const d=i.slice();d[1]=o.size;const p=new r.YDk(d,s);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:u}}},33533:function(e,t,n){"use strict";n.d(t,{b:function(){return s}});var r=n(77124);function s(e){return(t,n,s,a,i)=>{const o=r.Wap.assertAndGetBroadcastShape(t,n),u=o.length,l=r.D5U.computeStrides(o),c=r.D5U.sizeFromShape(o),h=r.D5U.getTypedArrayFromDType(i,c),d=t.length,p=n.length,f=r.D5U.computeStrides(t),m=r.D5U.computeStrides(n),g=r.Wap.getBroadcastDims(t,o),b=r.Wap.getBroadcastDims(n,o);if(g.length+b.length===0)for(let r=0;r<h.length;++r)h[r]=e(s[r%s.length],a[r%a.length]);else for(let x=0;x<h.length;++x){const t=r.D5U.indexToLoc(x,u,l),n=t.slice(-d);g.forEach((e=>n[e]=0));const i=r.D5U.locToIndex(n,d,f),o=t.slice(-p);b.forEach((e=>o[e]=0));const c=r.D5U.locToIndex(o,p,m);h[x]=e(s[i],a[c])}return[h,o]}}},46205:function(e,t,n){"use strict";n.d(t,{H:function(){return u},j:function(){return o}});var r=n(77124),s=n(18166),a=n(29258),i=n(26961);function o(e,t,n,o){return null==n?({inputs:n,backend:a})=>{const{a:i,b:u}=n,l=a;(0,s.H)([i,u],e);const c=l.data.get(i.dataId).values,h=l.data.get(u.dataId).values,d="string"===i.dtype?r.Wap.fromUint8ToStringArray(c):c,p="string"===i.dtype?r.Wap.fromUint8ToStringArray(h):h,f=o||i.dtype,[m,g]=t(i.shape,u.shape,d,p,f);return l.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a:s,b:u}=e,l=r;if("complex64"===s.dtype||"complex64"===u.dtype){const e=(0,a.pj)({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,c=l.data.get(r.dataId).values,h=l.data.get(o.dataId).values,d=(0,a.pj)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(d.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,g=l.data.get(f.dataId).values,b=l.data.get(m.dataId).values,[x,y,k]=n(s.shape,u.shape,c,h,g,b),v=l.makeTensorInfo(k,"float32",x),w=l.makeTensorInfo(k,"float32",y),I=(0,i.P)({inputs:{real:v,imag:w},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(w),I}{const e=l.data.get(s.dataId).values,n=l.data.get(u.dataId).values,r=o||s.dtype,[a,i]=t(s.shape,u.shape,e,n,r);return l.makeTensorInfo(i,r,a)}}}function u(e){return(t,n,s,a,i,o)=>{const u=r.Wap.assertAndGetBroadcastShape(t,n),l=r.D5U.sizeFromShape(u),c=u.length,h=r.D5U.computeStrides(u),d=r.D5U.getTypedArrayFromDType("float32",l),p=r.D5U.getTypedArrayFromDType("float32",l),f=r.Wap.getBroadcastDims(t,u),m=r.Wap.getBroadcastDims(n,u),g=r.Wap.mergeRealAndImagArrays(s,a),b=r.Wap.mergeRealAndImagArrays(i,o),x=t.length,y=r.D5U.computeStrides(t),k=n.length,v=r.D5U.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<d.length;r++){const t=r%g.length,n=r%b.length,s=e(g[2*t],g[2*t+1],b[2*n],b[2*n+1]);d[r]=s.real,p[r]=s.imag}else for(let w=0;w<d.length;w++){const t=r.D5U.indexToLoc(w,c,h),n=t.slice(-x);f.forEach((e=>n[e]=0));const s=r.D5U.locToIndex(n,x,y),a=t.slice(-k);m.forEach((e=>a[e]=0));const i=r.D5U.locToIndex(a,k,v),o=e(g[2*s],g[2*s+1],b[2*i],b[2*i+1]);d[w]=o.real,p[w]=o.imag}return[d,p,u]}}},18029:function(e,t,n){"use strict";n.d(t,{a:function(){return s}});var r=n(77124);function s(e){return(t,n,s)=>{const a=r.D5U.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}},76738:function(e,t,n){"use strict";n.d(t,{A:function(){return i},O:function(){return o}});var r=n(77124),s=n(18166),a=n(18029);function i(e,t,n){return o(e,(0,a.a)(t),n)}function o(e,t,n){return({inputs:a,attrs:i,backend:o})=>{const{x:u}=a;(0,s.H)(u,e);const l=o,c=l.data.get(u.dataId).values;let h;if("string"===u.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");h=r.Wap.fromUint8ToStringArray(c)}else h=c;const d=n||u.dtype,p=t(h,d,i);return l.makeTensorInfo(u.shape,d,p)}}},24391:function(e,t,n){"use strict";n.d(t,{l:function(){return a}});var r=n(77124),s=n(26961);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),r=a(e,t,"float32");return(0,s.P)({inputs:{real:n,imag:r},backend:e})}const i=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},90740:function(e,t,n){"use strict";n.d(t,{jl:function(){return o},nd:function(){return i}});var r=n(77124);const s={},a={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){s[e]=t}function o(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,r.OBj)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,r.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(a.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",a)||n.getContext("experimental-webgl",a);return n.getContext("webgl2",a)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],o(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}},92860:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(29610),s=n(16697),a=n(38110),i=n(18378);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.m1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?a.Kn(["r","c","d"],e):a.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}},23207:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(29610),s=n(16697),a=n(38110),i=n(18378);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.m1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?a.Kn(["r","c","d"],e):a.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}},4443:function(e,t,n){"use strict";n.d(t,{q:function(){return i}});var r=n(29610),s=n(38110),a=n(18378);class i{constructor(e){this.variableNames=["A"],this.outTexUsage=a.v2.DOWNLOAD;const t=(0,r.A)();this.outputShape=e,this.userCode=`\n      ${s.ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}},14230:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(29610),s=n(38110),a=n(18378);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=a.v2.DOWNLOAD;const t=(0,r.A)();this.outputShape=e,this.userCode=`\n      ${s.ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}},1888:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(29610),s=n(16697),a=n(38110);const i={R:0,G:1,B:2,A:3};class o{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);let u="result";t&&(u="floor(result * 255. + 0.5)");let l="";for(let r=0;r<n.length;r++){const e=n[r];l+=`\n          if(offset == ${r}) {\n            result = values[${i[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?a.nc():a.ku(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${o.texture2D}(A, uv);\n          ${l}\n        }\n        ${o.output} = vec4(${u}, 0., 0., 0.);\n      }\n    `}}},89105:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var r=n(29610),s=n(16697),a=n(38110);class i{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);let i="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let t=0;t<=1;t++){const s=2*r+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${r};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?a.nc():a.ku(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${i}\n\n          ${n.output} = ${o};\n        }\n    `}}},93381:function(e,t,n){"use strict";var r=n(77124),s=n(91906);const a=(0,r.OBj)();a.registerFlag("HAS_WEBGL",(()=>a.getNumber("WEBGL_VERSION")>0)),a.registerFlag("WEBGL_VERSION",(()=>(0,s.uH)(2)?2:(0,s.uH)(1)?1:0)),a.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),a.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===a.get("WEBGL_VERSION"))),a.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),a.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),a.registerFlag("WEBGL_PACK",(()=>a.getBool("HAS_WEBGL"))),a.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_CLIP",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_REDUCE",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_LAZILY_UNPACK",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_CONV_IM2COL",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>(0,s.lo)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>(0,s.KP)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=a.getNumber("WEBGL_VERSION");return 0===e?0:(0,s.nr)(e)})),a.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>a.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.isMobile())),a.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>(0,s.wb)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!a.getBool("WEBGL_FORCE_F16_TEXTURES")&&a.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),a.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>(0,s.BH)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>(0,s.Qd)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>a.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),a.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),a.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),a.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),a.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),a.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),a.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),a.registerFlag("WEBGL_EXP_CONV",(()=>!1)),a.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>a.getBool("IS_TEST"))),a.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),a.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),a.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),a.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1))},29610:function(e,t,n){"use strict";n.d(t,{A:function(){return s}});var r=n(77124);function s(){let e,t,n,s,a,i,o,u,l,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",i="outputColor",o="out vec4 outputColor;",u=(0,r.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}},95489:function(e,t,n){"use strict";n.d(t,{A:function(){return u}});var r=n(77124),s=n(90740),a=n(4328),i=n(18378),o=n(91906);class u{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,r.OBj)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,(0,s.nd)(t,e)):this.gl=(0,s.jl)(t),e=this.gl,2===(0,r.OBj)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>o.O7(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>o.O7(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>o.O7(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>o.O7(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>o.O7(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>o.O7(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>o.O7(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>o.O7(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const u="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=o.HH(this.gl,e),o.y_(this.gl,t))this.textureHalfFloatExtension=o.HH(this.gl,t);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),o.y_(this.gl,u))this.colorBufferHalfFloatExtension=o.HH(this.gl,u);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",o.y_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!o.y_(this.gl,u))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(u)}this.vertexBuffer=a.Y3(this.gl),this.indexBuffer=a.Hb(this.gl),this.framebuffer=o.d8(this.gl),this.textureConfig=i.Sq(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;o.O7(e,(()=>e.finish())),o.O7(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),o.O7(e,(()=>e.deleteFramebuffer(this.framebuffer))),o.O7(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),o.O7(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),o.O7(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),a.T2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),a.iN(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),a.BQ(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),a.Qr(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),a.Uk(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),a.Cs(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),a.cU(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(o.ax(this.gl,this.framebuffer),this.outputTexture=null),o.O7(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>a.HC(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return a.AD(this.gl,e,t,n,r,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return a.ez(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=a.A8(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>a.P1(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=a.Jj(t));const n=o.HO(t);o.O7(t,(()=>t.attachShader(n,this.vertexShader))),o.O7(t,(()=>t.attachShader(n,e))),o.aj(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&o.vu(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;o.O7(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),a.Hc(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(o.O7(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&o.vu(this.gl,this.program),o.O7(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?o.XE(this.gl,e,t):o.Hg(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),o.O7(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),o.B(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=i.qe(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&o.vu(this.gl,this.program),o.cu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}o.O7(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),o.O7(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=o.HH(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,r.OBj)().platform&&(n=(0,r.OBj)().platform.setTimeoutCustom.bind((0,r.OBj)().platform)),r.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),o.JG(this.gl,e,this.framebuffer),this.debug&&o.cu(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(o.JG(this.gl,this.outputTexture,this.framebuffer),this.debug&&o.cu(this.gl)):o.ax(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;o.JG(r,e,this.framebuffer),this.debug&&o.cu(r),this.outputTexture=e,o.O7(r,(()=>r.viewport(0,0,t,n))),o.O7(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),o.O7(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}},16697:function(e,t,n){"use strict";n.d(t,{C9:function(){return h},IJ:function(){return i},Yv:function(){return o},_s:function(){return l},mi:function(){return c}});var r=n(77124),s=n(55156),a=n(91906);function i(e,t,n,i){const u=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),l=u.map((e=>e.shapeInfo)),c={logicalShape:i.shape,texShape:i.texData.texShape,isUniform:!1,isPacked:i.texData.isPacked,flatOffset:null},h=s.Vm(u,c,t),d=(0,a.xc)(e.gl,h),p=e.createProgram(d);return(0,r.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:h,webGLProgram:p,inShapeInfos:l,outShapeInfo:c,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(p),Object.assign({program:t,fragmentShader:d,source:h,webGLProgram:p,inShapeInfos:l,outShapeInfo:c},o(e,t,p)))}function o(e,t,n){const s=[],a=[];let i,o,u,l=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const h=!1;for(const r of t.variableNames){const a={name:r,uniform:e.getUniformLocation(n,r,h),offset:e.getUniformLocation(n,`offset${r}`,h)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,h),a.texShape=e.getUniformLocation(n,`${r}TexShape`,h)),s.push(a)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",h),u=e.getUniformLocation(n,"outShapeStrides",h),o=e.getUniformLocation(n,"outTexShape",h)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,h));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:o}}function u(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.D5U.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!r.D5U.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function l(e,t,n,a,i){t.program.enableShapeUniforms||(u(t.inShapeInfos,n),u([t.outShapeInfo],[a]));const o=a.texData.texture,l=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,l[0],l[1]):e.setOutputMatrixTexture(o.texture,l[0],l[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const a=n[u],{uniform:i,offset:o,shape:l,texShape:c}=t.variablesLocations[u];if(l){const{uniformShape:n}=s.Tt(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(l,new Int32Array(n));break;case 2:e.gl.uniform2iv(l,new Int32Array(n));break;case 3:e.gl.uniform3iv(l,new Int32Array(n));break;case 4:e.gl.uniform4iv(l,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=i)if(a.isUniform)if(r.D5U.sizeFromShape(a.shape)<2)e.gl.uniform1f(i,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,i,u)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.D5U.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&i)for(let r=0;r<t.program.customUniforms.length;++r){const n=t.program.customUniforms[r],s=t.customUniformLocations[r],a=i[r];if("float"===n.type)e.gl.uniform1fv(s,a);else if("vec2"===n.type)e.gl.uniform2fv(s,a);else if("vec3"===n.type)e.gl.uniform3fv(s,a);else if("vec4"===n.type)e.gl.uniform4fv(s,a);else if("int"===n.type)e.gl.uniform1iv(s,a);else if("ivec2"===n.type)e.gl.uniform2iv(s,a);else if("ivec3"===n.type)e.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,a)}}e.executeProgram()}function c(e,t,n){let a="";t.concat(n).forEach((t=>{const i=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:c}=s.Tt(e.packedInputs,t.shape,o);let h="",d="",p="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];h=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=r.D5U.computeStrides(l);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${l[0]>1}_${l[1]>1}`;const f=t.shape.length,m=2===l.length&&r.D5U.arraysEqual(t.shape,o),g=1===r.D5U.sizeFromShape(t.shape),b=r.Wap.getBroadcastDims(t.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&r.D5U.arraysEqual(o,n.texData.texShape),y=e.packedInputs||l.length>2?"":`${o[0]>1}_${o[1]>1}`;a+=`${f}_${x}_${u?c:""}_${l.length}_${g}_${b}_${m}_${h}_${d}_${p}_${y}_${i}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${i}`}}));const i=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+i+`${(0,r.OBj)().getNumber("WEBGL_VERSION")}`,o}function h(e){return(0,r.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}},4328:function(e,t,n){"use strict";n.d(t,{A8:function(){return S},AD:function(){return T},BQ:function(){return g},Cs:function(){return k},HC:function(){return N},Hb:function(){return l},Hc:function(){return v},Jj:function(){return o},NQ:function(){return m},P1:function(){return $},Qr:function(){return I},T2:function(){return d},Uk:function(){return w},Y3:function(){return u},cU:function(){return x},ez:function(){return C},gl:function(){return b},hf:function(){return y},iN:function(){return f},m8:function(){return p},q3:function(){return h}});var r=n(77124),s=n(29610),a=n(18378),i=n(91906);function o(e){const t=(0,s.A)(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return i.Jj(e,n)}function u(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return i.ED(e,t)}function l(e){const t=new Uint16Array([0,1,2,2,1,3]);return i.mZ(e,t)}function c(e,t,n,s,a,o){i.b6(t,n);const u=i.cU(e),l=e.TEXTURE_2D;return i.O7(e,(()=>e.bindTexture(l,u))),i.O7(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),i.O7(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),i.O7(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),i.O7(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,r.OBj)().getNumber("WEBGL_VERSION")?i.O7(e,(()=>e.texImage2D(l,0,s,t,n,0,a,o,null))):i.O7(e,(()=>e.texStorage2D(l,1,s,t,n))),i.O7(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:u,texShape:[n,t]}}function h(e){return e.internalFormatFloat}function d(e,t,n,r){const[s,i]=a.kk(t,n);return c(e,s,i,h(r),r.textureFormatFloat,e.FLOAT)}function p(e){return e.internalFormatHalfFloat}function f(e,t,n,r){const[s,i]=a.kk(t,n);return c(e,s,i,p(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function m(e){return e.downloadTextureFormat}function g(e,t,n,r){const[s,i]=a.kk(t,n);return c(e,s,i,m(r),e.RGBA,e.UNSIGNED_BYTE)}function b(e){return e.internalFormatPackedFloat}function x(e,t,n,r){const[s,i]=a.qe(t,n);return c(e,s,i,b(r),e.RGBA,e.FLOAT)}function y(e){return e.internalFormatPackedHalfFloat}function k(e,t,n,r){const[s,i]=a.qe(t,n);return c(e,s,i,y(r),e.RGBA,r.textureTypeHalfFloat)}function v(e,t,n){i.O7(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return i.sb(e,t,"clipSpacePos",n,3,20,0)&&i.sb(e,t,"uv",n,2,20,12)}function w(e,t,n,s,a,o){let u,l,c;i.O7(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(u=new Uint8Array(n*s*4),l=e.UNSIGNED_BYTE,c=e.RGBA):(u=new Float32Array(n*s*4),l=e.FLOAT,c=o.internalFormatPackedFloat),u.set(a),2===(0,r.OBj)().getNumber("WEBGL_VERSION")?i.O7(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,l,u))):i.O7(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,s,0,e.RGBA,l,u))),i.O7(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function I(e,t,n){i.O7(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,r.OBj)().getNumber("WEBGL_VERSION")?i.O7(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):i.O7(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,r.OBj)().getNumber("WEBGL_VERSION")?i.O7(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):i.O7(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),i.O7(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function S(e,t,n,r){const s=e.createBuffer();i.O7(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return i.O7(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),i.O7(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),i.O7(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function C(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function N(e,t,n,r){const[s,o]=a.kk(t,n),u=new Uint8Array(a.yb(t*n,4));return i.O7(e,(()=>e.readPixels(0,0,s,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,u))),new Float32Array(u.buffer)}function T(e,t,n,r,s,i,o,u){const l=e,c=new Float32Array(a.Se(i,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function $(e,t,n){const r=new Float32Array(t*n*4);return i.O7(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}},22023:function(e,t,n){"use strict";n.d(t,{cK:function(){return ee},qO:function(){return te},cx:function(){return ne},XM:function(){return re},cm:function(){return se},pk:function(){return ae},n7:function(){return ie},gv:function(){return oe},aX:function(){return ue},tx:function(){return le},MZ:function(){return ce},TD:function(){return he},m$:function(){return de},ji:function(){return fe},B_:function(){return pe},Rn:function(){return ge},kY:function(){return me},PQ:function(){return be},Sd:function(){return xe},$O:function(){return ye},nL:function(){return ke},r:function(){return ve},Th:function(){return we},Bo:function(){return Ie},cZ:function(){return Se},Tg:function(){return Ce},Qs:function(){return Ne},M8:function(){return Te},fy:function(){return $e},hO:function(){return Ee},St:function(){return Ae},Y1:function(){return De},UN:function(){return Re},CJ:function(){return Fe},nT:function(){return _e},X8:function(){return Oe},LS:function(){return Me},AR:function(){return Be},Bk:function(){return We},F1:function(){return Le},$u:function(){return Ue},$j:function(){return ze},A0:function(){return Pe},_9:function(){return Ve},kI:function(){return He},KX:function(){return Ge},oC:function(){return je},Fv:function(){return Xe},CV:function(){return qe}});var r={};n.r(r),n.d(r,{addImpl:function(){return a.EH},bincountImpl:function(){return i.W},bincountReduceImpl:function(){return i.i},bitwiseAndImpl:function(){return o.nv},castImpl:function(){return u.sJ},ceilImpl:function(){return l.__},concatImpl:function(){return c.j},equalImpl:function(){return h.tW},expImpl:function(){return d.Ro},expm1Impl:function(){return p.OF},floorDivImpl:function(){return m.JP},floorImpl:function(){return f.r6},gatherNdImpl:function(){return g.m},gatherV2Impl:function(){return b.i},greaterEqualImpl:function(){return y.HL},greaterImpl:function(){return x.o},lessEqualImpl:function(){return v.lx},lessImpl:function(){return k.rO},linSpaceImpl:function(){return w.b},logImpl:function(){return I.vX},maxImpl:function(){return S.B},maximumImpl:function(){return C.wS},minimumImpl:function(){return N.vP},multiplyImpl:function(){return T.$3},negImpl:function(){return $.uC},notEqualImpl:function(){return E.Gj},prodImpl:function(){return A.Qg},raggedGatherImpl:function(){return D.c},raggedRangeImpl:function(){return R.S},raggedTensorToTensorImpl:function(){return F.p},rangeImpl:function(){return _.b},rsqrtImpl:function(){return O.zd},scatterImpl:function(){return M.N},sigmoidImpl:function(){return B.VY},simpleAbsImpl:function(){return s.bk},sliceImpl:function(){return W.rT},sparseFillEmptyRowsImpl:function(){return L.c},sparseReshapeImpl:function(){return U.U},sparseSegmentReductionImpl:function(){return z.V},sqrtImpl:function(){return P.zT},squaredDifferenceImpl:function(){return V.Hz},staticRegexReplaceImpl:function(){return H.P},stridedSliceImpl:function(){return G.t},stringNGramsImpl:function(){return j.A},stringSplitImpl:function(){return X.Q},stringToHashBucketFastImpl:function(){return q.h},subImpl:function(){return K.VY},tileImpl:function(){return Q.R},topKImpl:function(){return Y.W},transposeImpl:function(){return Z.H},uniqueImpl:function(){return J.S}});var s=n(60224),a=n(32779),i=n(58607),o=n(5003),u=n(29258),l=n(34769),c=n(48926),h=n(7679),d=n(31211),p=n(30969),f=n(76574),m=n(44892),g=n(31820),b=n(54468),x=n(36272),y=n(26259),k=n(88405),v=n(40635),w=n(61325),I=n(55223),S=n(55126),C=n(71717),N=n(612),T=n(65491),$=n(70854),E=n(98584),A=n(29560),D=n(59885),R=n(36486),F=n(8306),_=n(99230),O=n(7742),M=n(60001),B=n(40108),W=n(82578),L=n(42123),U=n(3849),z=n(13989),P=n(10440),V=n(40212),H=n(27693),G=n(62210),j=n(66841),X=n(38639),q=n(26626),K=n(71649),Q=n(27723),Y=n(69556),Z=n(77107),J=n(75638);const{addImpl:ee,bincountImpl:te,bincountReduceImpl:ne,bitwiseAndImpl:re,castImpl:se,ceilImpl:ae,concatImpl:ie,equalImpl:oe,expImpl:ue,expm1Impl:le,floorImpl:ce,gatherNdImpl:he,gatherV2Impl:de,greaterImpl:pe,greaterEqualImpl:fe,lessImpl:me,lessEqualImpl:ge,linSpaceImpl:be,logImpl:xe,maxImpl:ye,maximumImpl:ke,minimumImpl:ve,multiplyImpl:we,negImpl:Ie,notEqualImpl:Se,prodImpl:Ce,raggedGatherImpl:Ne,raggedRangeImpl:Te,raggedTensorToTensorImpl:$e,rangeImpl:Ee,rsqrtImpl:Ae,scatterImpl:De,sigmoidImpl:Re,simpleAbsImpl:Fe,sliceImpl:_e,sparseFillEmptyRowsImpl:Oe,sparseReshapeImpl:Me,sparseSegmentReductionImpl:Be,sqrtImpl:We,staticRegexReplaceImpl:Le,stridedSliceImpl:Ue,stringNGramsImpl:ze,stringSplitImpl:Pe,stringToHashBucketFastImpl:Ve,subImpl:He,tileImpl:Ge,topKImpl:je,transposeImpl:Xe,uniqueImpl:qe}=r},55667:function(e,t,n){"use strict";n.d(t,{U:function(){return i}});var r=n(16697),s=n(21034),a=n(55156);class i{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=(0,s.Ky)("rc",this.rank),t=(0,a.kW)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}},21034:function(e,t,n){"use strict";function r(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function s(e,t){return 1===t?[e]:r(e,t)}function a(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}n.d(t,{Ky:function(){return s},Qc:function(){return a},k6:function(){return r}})},28831:function(e,t,n){"use strict";n.d(t,{v:function(){return a}});var r=n(16697),s=n(38110);class a{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}var a,i;this.userCode=`\n      ${a=t,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?s.al(["r","c","d"],"inputShape"):s.RW(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?s.nc():s.ku(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}},38110:function(e,t,n){"use strict";n.d(t,{Kn:function(){return a},RW:function(){return s},al:function(){return i},ku:function(){return o},nc:function(){return u},ye:function(){return l}});var r=n(77124);function s(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function a(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function i(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function o(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function u(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const l="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},18378:function(e,t,n){"use strict";n.d(t,{Se:function(){return h},Sq:function(){return d},V9:function(){return a},Yz:function(){return l},kk:function(){return o},m1:function(){return r},qe:function(){return c},v2:function(){return s},yb:function(){return u}});var r,s,a,i=n(77124);function o(e,t){return[t,e]}function u(e,t){return e*t}function l(e){const t=i.D5U.sizeFromShape(e),n=Math.ceil(t/4);return i.D5U.sizeToSquarishShape(n)}function c(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function h(e,t){const[n,r]=c(e,t);return n*r*4}function d(e,t){const n=e;let r,s,a,o,u,l,c,h,d,p;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,h=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(r||(r={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(s||(s={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(a||(a={}))},42490:function(e,t,n){"use strict";n.d(t,{I:function(){return i}});var r=n(77124),s=n(4328),a=n(18378);class i{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=u(t,n),s=l(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=o(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let c;return r===a.V9.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===a.V9.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===a.V9.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===a.V9.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===a.V9.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(c),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),c}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=u(n,s),i=l(t,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const c=o(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),h=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=c):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const d=this.usedTextures[i],p=d&&d.indexOf(e);if(null==p||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d[p]=d[d.length-1],d.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o(e,t,n,r,i){const o=function(e,t){switch(e){case a.V9.PACKED_2X2_FLOAT32:return(0,s.gl)(t);case a.V9.PACKED_2X2_FLOAT16:return(0,s.hf)(t);case a.V9.UNPACKED_FLOAT32:return(0,s.q3)(t);case a.V9.UNPACKED_FLOAT16:return(0,s.m8)(t);case a.V9.PACKED_4X1_UNSIGNED_BYTE:return(0,s.NQ)(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let u;if(i){const[t,n]=(0,a.qe)(e[0],e[1]);u=t*n}else{const[t,n]=(0,a.kk)(e[0],e[1]);u=t*n}const l=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,o);return u*l}function u(e,t){if(e===a.v2.UPLOAD)return a.V9.PACKED_2X2_FLOAT32;if(e===a.v2.RENDER||null==e)return function(e){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?a.V9.PACKED_2X2_FLOAT32:a.V9.UNPACKED_FLOAT32:e?a.V9.PACKED_2X2_FLOAT16:a.V9.UNPACKED_FLOAT16}(t);if(e===a.v2.DOWNLOAD||e===a.v2.PIXELS)return a.V9.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function l(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}},84518:function(e,t,n){"use strict";n.d(t,{Cv:function(){return u},D1:function(){return a},Et:function(){return o},RX:function(){return l},Tq:function(){return d},bl:function(){return h},eW:function(){return c},l:function(){return s},t$:function(){return i}});var r=n(16697);class s{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const a="if (isnan(x)) return x;",i="return x;",o="return abs(x);";const u="return (x >= 0.0) ? x : (exp(x) - 1.0);",l=a+"\n  return (x < 0.0) ? 0.0 : x;\n",c=a+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",h="return x;",d="return 1.0 / (1.0 + exp(-1.0 * x));"},29365:function(e,t,n){"use strict";n.d(t,{Cv:function(){return a},RX:function(){return i},Tq:function(){return u},cc:function(){return l},eW:function(){return o},t$:function(){return s}});var r=n(16697);const s="return x;",a="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",i="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",o="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",u="return 1.0 / (1.0 + exp(-1.0 * x));";class l{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}},84595:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(16697),s=n(21034),a=n(55156);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);const t=e.length,n=(0,s.Ky)("rc",t),i=(0,a.kW)(t),o=(0,s.Qc)(t,n),u=n.slice(-2),l=t<=1?"rc":`vec2(${u.join(",")})`;this.userCode=`\n      void main() {\n        ${i} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${l}));\n      }\n    `}}},91906:function(e,t,n){"use strict";n.d(t,{B:function(){return S},BH:function(){return H},Cp:function(){return A},ED:function(){return g},HH:function(){return u},HO:function(){return p},HS:function(){return X},Hg:function(){return I},JG:function(){return C},Jj:function(){return l},KP:function(){return L},O7:function(){return i},Qd:function(){return j},W8:function(){return D},XE:function(){return w},Yf:function(){return F},aj:function(){return f},ax:function(){return N},b6:function(){return y},cU:function(){return x},cu:function(){return T},d8:function(){return k},ih:function(){return R},lo:function(){return W},mZ:function(){return b},nr:function(){return U},oT:function(){return O},qF:function(){return o},sb:function(){return v},uH:function(){return P},vu:function(){return m},w4:function(){return d},wb:function(){return V},xc:function(){return c},y_:function(){return z}});var r=n(77124),s=n(90740),a=n(18378);function i(e,t){const n=t();return(0,r.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function o(e){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function u(e,t){return $(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function l(e,t){const n=$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(i(e,(()=>e.shaderSource(n,t))),i(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function c(e,t){const n=$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(i(e,(()=>e.shaderSource(n,t))),i(e,(()=>e.compileShader(n))),(0,r.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw d(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const h=/ERROR: [0-9]+:([0-9]+):/g;function d(e,t){const n=h.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>r.D5U.rightPad((t+1).toString(),i)+e));let u=0;for(let r=0;r<o.length;r++)u=Math.max(o[r].length,u);const l=o.slice(0,s-1),c=o.slice(s-1,s),d=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function p(e){return $(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function f(e,t){if(i(e,(()=>e.linkProgram(t))),!(0,r.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function m(e,t){if(i(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function g(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return i(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),i(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function b(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return i(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),i(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function x(e){return $(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function y(e,t){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function k(e){return $(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function v(e,t,n,r,s,a,o){const u=e.getAttribLocation(t,n);return-1!==u&&(i(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),i(e,(()=>e.vertexAttribPointer(u,s,e.FLOAT,!1,a,o))),i(e,(()=>e.enableVertexAttribArray(u))),!0)}function w(e,t,n){return $(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function I(e,t,n){return e.getUniformLocation(t,n)}function S(e,t,n,r){i(e,(()=>function(e,t,n){E(e,n),i(e,(()=>e.activeTexture(e.TEXTURE0+n))),i(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),i(e,(()=>e.uniform1i(n,r)))}function C(e,t,n){i(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),i(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function N(e,t){i(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),i(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function T(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,n){const r=i(e,(()=>t()));if(null==r)throw new Error(n);return r}function E(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function A(e,t=2){return r.D5U.sizeFromShape(e.slice(0,e.length-t))}function D(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function R(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[A(e),...D(e)]),t}function F(e,t=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,r.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,r.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.D5U.squeezeShape(e);e=t.newShape}let a=r.D5U.sizeFromShape(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=A(e);let n=2,s=2;e.length&&([n,s]=D(e)),a=t*(n/2)*(s/2),i=r.D5U.sizeToSquarishShape(a).map((e=>2*e))}else i=r.D5U.sizeToSquarishShape(a);return i}function _(e){return e%2===0}function O(e,t){if(e=e.slice(-2),t=t.slice(-2),r.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(_(n)&&_(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&_(e[0])&&_(t[0])}let M,B;function W(e){if(null==M){const t=(0,s.jl)(e);M=t.getParameter(t.MAX_TEXTURE_SIZE)}return M}function L(e){if(null==B){const t=(0,s.jl)(e);B=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,B)}function U(e){if(0===e)return 0;let t;const n=(0,s.jl)(e);return t=z(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:z(n,"EXT_disjoint_timer_query")?1:0,t}function z(e,t){return null!=e.getExtension(t)}function P(e){try{if(null!=(0,s.jl)(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function V(e){if(0===e)return!1;const t=(0,s.jl)(e);if(1===e){if(!z(t,"OES_texture_float"))return!1}else if(!z(t,"EXT_color_buffer_float"))return!1;return G(t)}function H(e){if(0===e)return!1;const t=(0,s.jl)(e);if(1!==e){if(z(t,"EXT_color_buffer_float"))return G(t);const e="EXT_color_buffer_half_float";if(z(t,e)){const n=t.getExtension(e);return function(e,t){const n=(0,a.Sq)(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const u=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),u}(t,n)}return!1}if(!z(t,"OES_texture_float"))return!1;if(!z(t,"WEBGL_color_buffer_float"))return!1;return G(t)}function G(e){const t=(0,a.Sq)(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function j(e){if(2!==e)return!1;return null!=(0,s.jl)(e).fenceSync}function X(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}},68713:function(e,t,n){"use strict";n.d(t,{JL:function(){return r},Zu:function(){return s}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},50196:function(e,t,n){"use strict";n.d(t,{BV:function(){return k},wv:function(){return y}});var r=n(68713),s=n(22885),a=n(55938),i=n(29121),o=n(26151),u=n(64706),l=n(23418),c=n(20569);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{d(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?c.oj(`${r}ms`,9):r.error,o=c.oj(e,25),u=t.rank,l=t.size,h=c.oj(t.shape.toString(),14);let d="";for(const c in s){const e=s[c];if(null!=e){const n=e.shape||t.shape,r=n.length;d+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${l}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(40974),m=n(80747);function g(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=k.runKernel(i.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return k.runKernel(i.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,o.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:h,attrs:d}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(l,h,t,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.HD(e[0])&&(s=e.map((e=>l.encodeString(e))));const a=r.write(s,t,n),i=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new f.es(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(s instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return k.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!c.cO(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,a.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new x(t)}return(0,s.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const k=y();function v(e,t){const n={a:e,b:t};return k.runKernel(i.mm_,n)}},22885:function(e,t,n){"use strict";n.d(t,{OB:function(){return o},iG:function(){return l},qA:function(){return a}});var r=n(20569);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},55938:function(e,t,n){"use strict";n.d(t,{D:function(){return a},R:function(){return i}});var r=n(83454);let s;function a(){if(null==s){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function i(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},4368:function(e,t,n){"use strict";n.d(t,{B9:function(){return c},Cn:function(){return h},SR:function(){return o},jq:function(){return d},lu:function(){return l},sq:function(){return u},y3:function(){return p}});var r=n(50196),s=n(22885),a=n(40974),i=n(80747);function o(){return r.BV}function u(){return r.BV.memory()}function l(e,t){return r.BV.tidy(e,t)}function c(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function h(e){return r.BV.keep(e)}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}function p(){return r.BV.backend}(0,a.FZ)((function(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},30633:function(e,t,n){"use strict";n.d(t,{cb:function(){return o},pn:function(){return i}});var r=n(50196),s=n(40974),a=n(20569);function i(e,t){a.hu(a.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),a.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const i=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),a.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);a.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=i&&i.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function o(e){return r.BV.customGrad(e)}},77124:function(e,t,n){"use strict";n.d(t,{SYM:function(){return Rt.SYM},VGw:function(){return Rt.VGw},SpW:function(){return Rt.SpW},mm_:function(){return Rt.mm_},Xze:function(){return Rt.Xze},oT6:function(){return Rt.oT6},IKK:function(){return Rt.IKK},sJF:function(){return Rt.sJF},aJk:function(){return Rt.aJk},M2y:function(){return Rt.M2y},qw7:function(){return Rt.qw7},jMg:function(){return Rt.jMg},QCc:function(){return Rt.QCc},Oyi:function(){return Rt.Oyi},JhU:function(){return Rt.JhU},_k9:function(){return Rt._k9},IMb:function(){return Rt.IMb},ROF:function(){return Rt.ROF},XLW:function(){return Rt.XLW},zws:function(){return Rt.zws},zvY:function(){return Rt.zvY},hCO:function(){return Rt.hCO},eEB:function(){return Rt.eEB},RFZ:function(){return Rt.RFZ},gJX:function(){return Rt.gJX},xnO:function(){return Rt.xnO},Zz9:function(){return Rt.Zz9},yj2:function(){return Rt.yj2},Eh3:function(){return Rt.Eh3},mhS:function(){return Rt.mhS},wUP:function(){return Rt.wUP},wm:function(){return Rt.wm},x12:function(){return Rt.x12},o2y:function(){return Rt.o2y},ik2:function(){return Rt.ik2},mc4:function(){return Rt.mc4},TR1:function(){return Rt.TR1},VcC:function(){return Rt.VcC},Byc:function(){return Rt.Byc},iHb:function(){return Rt.iHb},JLz:function(){return Ia.JL},QRR:function(){return Rt.QRR},T0n:function(){return Rt.T0n},cie:function(){return Rt.cie},sL$:function(){return Rt.sL$},y7R:function(){return Rt.y7R},$w:function(){return Rt.$w},p4S:function(){return Rt.p4S},Vn9:function(){return Rt.Vn9},ekb:function(){return Rt.ekb},hGc:function(){return Rt.hGc},$g6:function(){return Rt.$g6},SX0:function(){return Rt.SX0},HEU:function(){return Rt.HEU},hdR:function(){return Rt.hdR},Omj:function(){return Rt.Omj},NEP:function(){return Rt.NEP},YFo:function(){return Rt.YFo},Y0y:function(){return Rt.Y0y},vwp:function(){return Rt.vwp},deh:function(){return Rt.deh},Uyb:function(){return Rt.Uyb},OR:function(){return Rt.OR},jeX:function(){return Rt.jeX},eBW:function(){return Rt.eBW},sHE:function(){return Rt.sHE},_V0:function(){return Rt._V0},luS:function(){return Rt.luS},q1x:function(){return Rt.q1x},qi_:function(){return Rt.qi_},iZT:function(){return Rt.iZT},Acj:function(){return Rt.Acj},Qg5:function(){return Rt.Qg5},iJz:function(){return Rt.iJz},J_u:function(){return Rt.J_u},avt:function(){return Rt.avt},iWB:function(){return Rt.iWB},r7n:function(){return Rt.r7n},Zuw:function(){return Ia.Zu},eZ0:function(){return Rt.eZ0},Hhh:function(){return Rt.Hhh},J$2:function(){return Rt.J$2},vtC:function(){return Rt.vtC},CAk:function(){return Rt.CAk},e7N:function(){return Rt.e7N},ZbH:function(){return Rt.ZbH},kU:function(){return Rt.kU},PYm:function(){return Rt.PYm},VfG:function(){return Rt.VfG},MZg:function(){return Rt.MZg},YoZ:function(){return Rt.YoZ},mTV:function(){return Rt.mTV},OAf:function(){return Rt.OAf},OU7:function(){return Rt.OU7},OV7:function(){return Rt.OV7},vFR:function(){return Rt.vFR},BMI:function(){return Rt.BMI},q2K:function(){return Rt.q2K},c17:function(){return Rt.c17},q8u:function(){return Rt.q8u},jQs:function(){return Rt.jQs},Vbg:function(){return Rt.Vbg},NZg:function(){return Rt.NZg},wYn:function(){return Rt.wYn},kuV:function(){return Rt.kuV},uv1:function(){return Rt.uv1},cye:function(){return Rt.cye},W0H:function(){return Rt.W0H},yQU:function(){return Rt.yQU},we_:function(){return Rt.we_},qWM:function(){return Rt.qWM},gaJ:function(){return Ve},QiL:function(){return Rt.QiL},lyA:function(){return Rt.lyA},pe_:function(){return Rt.pe_},o0g:function(){return Rt.o0g},DlI:function(){return Rt.DlI},dDz:function(){return Rt.dDz},CQl:function(){return Rt.CQl},BiW:function(){return Rt.BiW},e6w:function(){return Rt.e6w},xJR:function(){return Rt.xJR},oHH:function(){return Rt.oHH},$HU:function(){return Rt.$HU},qkr:function(){return Rt.qkr},SbG:function(){return Rt.SbG},HZH:function(){return Rt.HZH},_Yw:function(){return Rt._Yw},zbQ:function(){return Rt.zbQ},dpD:function(){return Rt.dpD},Hmb:function(){return Rt.Hmb},mKl:function(){return Rt.mKl},b9H:function(){return Rt.b9H},e07:function(){return Rt.e07},bV0:function(){return Rt.bV0},xQA:function(){return Rt.xQA},nr8:function(){return Rt.nr8},PhF:function(){return Rt.PhF},oFR:function(){return Rt.oFR},a5O:function(){return Rt.a5O},i5y:function(){return Rt.i5y},RQH:function(){return Rt.RQH},wYB:function(){return Rt.wYB},p2w:function(){return Rt.p2w},Gcp:function(){return Rt.Gcp},MRv:function(){return Rt.MRv},TQc:function(){return Rt.TQc},O3z:function(){return Rt.O3z},nhH:function(){return Rt.nhH},w3H:function(){return Rt.w3H},ZjV:function(){return Rt.ZjV},D2d:function(){return Rt.D2d},L8s:function(){return Rt.L8s},FKq:function(){return Rt.FKq},bK0:function(){return Rt.bK0},_tC:function(){return Rt._tC},e0R:function(){return Rt.e0R},h8e:function(){return Rt.h8e},jQk:function(){return Rt.jQk},_JP:function(){return Rt._JP},s1s:function(){return Rt.s1s},XkS:function(){return Rt.XkS},Tr8:function(){return Rt.Tr8},GBy:function(){return Rt.GBy},sEM:function(){return Rt.sEM},MIZ:function(){return Rt.MIZ},esB:function(){return Ne.es},YDk:function(){return Ne.YD},SIB:function(){return Rt.SIB},n9L:function(){return Rt.n9L},cWu:function(){return Rt.cWu},wx7:function(){return Rt.wx7},G3Y:function(){return Rt.G3Y},kpP:function(){return Rt.kpP},ToN:function(){return Rt.ToN},Qvg:function(){return Rt.Qvg},RuY:function(){return Rt.RuY},usg:function(){return Rt.usg},WnP:function(){return Qe.W},IHx:function(){return Re.I},$6P:function(){return $t.$},YjB:function(){return Et.Y},NqF:function(){return At.N},wS1:function(){return Dt.w},uR5:function(){return Mt},y3$:function(){return De.y3},Wap:function(){return u},Dxk:function(){return Wt},JY5:function(){return Lt},p3b:function(){return Ut},UFq:function(){return zt.U},Jyw:function(){return It},f3b:function(){return Te},pju:function(){return $e.p},iUl:function(){return Pt.i},d9v:function(){return Ee.d},zoF:function(){return Vt.z},gME:function(){return Ht},Izb:function(){return Gt},MNy:function(){return jt},ZaL:function(){return Xt},PAt:function(){return qt.P},Tek:function(){return Kt.T},bc:function(){return Qt.b},pdZ:function(){return Yt},$QV:function(){return Jt},ppE:function(){return en},B10:function(){return tn.B},C2$:function(){return r},B90:function(){return De.B9},hiC:function(){return Fe.h},rvX:function(){return hr},pyx:function(){return nn.p},SRH:function(){return De.SR},OBj:function(){return m.OB},DgJ:function(){return rn.D},Qqt:function(){return sn.Q},dt4:function(){return an.d},iyy:function(){return un},hlL:function(){return Ge.h},GWj:function(){return ln.G},imm:function(){return i},Iqj:function(){return cn.I},pjt:function(){return hn.p},brS:function(){return dn.b},BHj:function(){return ls},io:function(){return a},CnY:function(){return De.Cn},GDt:function(){return l},hi7:function(){return pn.h},$r2:function(){return cs},cM7:function(){return fn.c},Krr:function(){return mn.K},CmS:function(){return gn.C},HvI:function(){return bn.H},OI3:function(){return xn.O},Fp7:function(){return yn.F},_sB:function(){return kn._},YQQ:function(){return vn},gWQ:function(){return Ye.g},J69:function(){return wn.J},sq6:function(){return De.sq},VV$:function(){return In.V},LTh:function(){return Sn.L},Gi7:function(){return Nn},dC7:function(){return _e.d},W76:function(){return Tn.W},glt:function(){return fs},Quu:function(){return $n.Q},lfX:function(){return En.l},iUs:function(){return An.i},JpU:function(){return Dn.J},vku:function(){return Rn.v},AL3:function(){return Fn.A},nGf:function(){return Bn},LGj:function(){return Wn},w6H:function(){return Ln},jqO:function(){return De.jq},wCN:function(){return ds.wC},UYe:function(){return Un.U},XLQ:function(){return Ot.X},GYS:function(){return zn.G},iD$:function(){return Le.i},U8D:function(){return Pn.U},U_I:function(){return Vn.U},m7h:function(){return s},XD2:function(){return Hn.X},tPi:function(){return Gn.t},jZU:function(){return jn},SmN:function(){return Xn},CnO:function(){return qn},p0P:function(){return Kn},kuN:function(){return St},XAC:function(){return Qn.X},Wvh:function(){return Yn.W},Vl2:function(){return Zn.V},_b3:function(){return Oe._},L9e:function(){return Jn.L},knu:function(){return er.k},luU:function(){return qe.l},Smz:function(){return tr.S},z4k:function(){return Tt.z4},AEp:function(){return nr.A},XeE:function(){return v},RRF:function(){return rr},odF:function(){return sr},piX:function(){return Ct},lub:function(){return De.lu},Gg6:function(){return on.G},p_j:function(){return hs},p4s:function(){return cr.p},Xu6:function(){return ar},HHK:function(){return ir.H},x8V:function(){return Tt.x8},D5U:function(){return S},VD$:function(){return or},jTM:function(){return Nt},arb:function(){return ur.a},lls:function(){return lr.l},P84:function(){return Be.P}});var r={};n.r(r),n.d(r,{isBrowser:function(){return f},isMobile:function(){return p},mockIsMobile:function(){return d}});var s={};n.r(s),n.d(s,{Serializable:function(){return Ue},SerializationMap:function(){return ze},registerClass:function(){return Pe}});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:function(){return C},browserFiles:function(){return it},browserHTTPRequest:function(){return mt},concatenateArrayBuffers:function(){return R},copyModel:function(){return xe},decodeWeights:function(){return $},encodeWeights:function(){return T},fromMemory:function(){return yt},fromMemorySync:function(){return kt},getLoadHandlers:function(){return H},getModelArtifactsForJSON:function(){return M},getModelArtifactsForJSONSync:function(){return O},getModelArtifactsInfoForJSON:function(){return B},getSaveHandlers:function(){return V},getWeightSpecs:function(){return W},http:function(){return ft},isHTTPScheme:function(){return dt},listModels:function(){return ge},loadWeights:function(){return lt},moveModel:function(){return ye},registerLoadRouter:function(){return P},registerSaveRouter:function(){return z},removeModel:function(){return be},weightsLoaderFactory:function(){return ct},withSaveHandler:function(){return vt},withSaveHandlerSync:function(){return wt}});var i={};n.r(i),n.d(i,{conv2d:function(){return Sr},depthwiseConv2d:function(){return Tr},matMul:function(){return $r}});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:function(){return ya},computeOutShape:function(){return xa},segOpComputeOptimalWindowSize:function(){return ba}});var u={};n.r(u),n.d(u,{ERF_A1:function(){return Ms},ERF_A2:function(){return Bs},ERF_A3:function(){return Ws},ERF_A4:function(){return Ls},ERF_A5:function(){return Us},ERF_P:function(){return Os},PARALLELIZE_THRESHOLD:function(){return ws},RowPartitionType:function(){return bs},SELU_SCALE:function(){return _s.$},SELU_SCALEALPHA:function(){return _s.y},applyActivation:function(){return wr},assertAndGetBroadcastShape:function(){return It.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return Cn.lB},assertParamsConsistent:function(){return ms},assignToTypedArray:function(){return Xs},axesAreInnerMostDims:function(){return Cn.YB},calculateShapes:function(){return Fs},checkEinsumDimSizes:function(){return ea},checkPadOnDimRoundingMode:function(){return Ft.m},combineLocations:function(){return Cn.Vh},combineRaggedTensorToTensorShapes:function(){return xs},complexWithEvenIndex:function(){return Hs},complexWithOddIndex:function(){return Gs},computeConv2DInfo:function(){return Ft.Ix},computeConv3DInfo:function(){return Ft.jw},computeDefaultPad:function(){return Ft.aO},computeDilation2DInfo:function(){return Ft.Rf},computeOptimalWindowSize:function(){return Is},computeOutAndReduceShapes:function(){return Cn.kz},computeOutShape:function(){return gs},computePool2DInfo:function(){return Ft.Xw},computePool3DInfo:function(){return Ft.pl},convertConv2DDataFormat:function(){return Ft.sl},decodeEinsumEquation:function(){return Zs},eitherStridesOrDilationsAreOne:function(){return Ft.jT},expandShapeToKeepDim:function(){return Cn.rv},exponent:function(){return Ks},exponents:function(){return qs},fromStringArrayToUint8:function(){return va},fromUint8ToStringArray:function(){return ka},getAxesPermutation:function(){return Cn.Q3},getBroadcastDims:function(){return It.getBroadcastDims},getComplexWithIndex:function(){return js},getEinsumComputePath:function(){return ta},getEinsumPermutation:function(){return Js},getFusedBiasGradient:function(){return vr},getFusedDyActivation:function(){return kr},getImageCenter:function(){return Ss},getInnerMostAxes:function(){return Cn.sY},getPermuted:function(){return Ns},getRaggedRank:function(){return ks},getReductionAxes:function(){return It.getReductionAxes},getReshaped:function(){return Cs},getReshapedPermuted:function(){return Ts},getRowPartitionTypesHelper:function(){return ys},getSliceBeginCoords:function(){return $s},getSliceSize:function(){return Es},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return aa},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return ia},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return oa},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return ca},getSparseReshapeInputOutputMismatchErrorMessage:function(){return da},getSparseReshapeInputOutputMultipleErrorMessage:function(){return ha},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return ua},getSparseReshapeNegativeOutputDimErrorMessage:function(){return la},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return ga},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return pa},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return fa},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return ma},getUndoAxesPermutation:function(){return Cn.LJ},isIdentityPermutation:function(){return na},log:function(){return zs.c},mergeRealAndImagArrays:function(){return Ps},prepareAndValidate:function(){return As},prepareSplitSize:function(){return sa},segment_util:function(){return o},shouldFuse:function(){return Ir},slice_util:function(){return St},splitRealAndImagArrays:function(){return Vs},stridesOrDilationsArePositive:function(){return Ft.U3},tupleValuesAreOne:function(){return Ft.I0},upcastType:function(){return Tt.x8},validateDefaultValueShape:function(){return vs},validateInput:function(){return Rs},validateUpdateShape:function(){return Ds},warn:function(){return zs.Z}});var l={};n.r(l),n.d(l,{GP:function(){return Br},qP:function(){return Wr},pA:function(){return Lr},ZA:function(){return wa}});var c=n(50196);let h;function d(e){h=e}function p(e){if(void 0!==h)return h;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var m=n(22885),g=n(83454);const b=(0,m.OB)();b.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>f())),b.registerFlag("IS_NODE",(()=>"undefined"!==typeof g&&"undefined"!==typeof g.versions&&"undefined"!==typeof g.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>b.getBool("DEBUG"))),b.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),b.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),b.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(61661),y=n(43740),k=n(57852);function v(e,t,n){const r=(0,y.C)(e,n);return(0,k.H)(e,t,r,n)}var w=n(20569);const I={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var S=n(23418);class C{static join(e){return new C(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>S.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+a-n.start,o=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,r,u-r);if(s.set(l,o),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}var N=n(48764).lW;async function T(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:E(await Promise.all(r)),specs:n}}function $(e,t){const n=new C(e),r={};let s,a=0;for(const i of t){const e=i.name,t=i.dtype,o=i.shape,u=(0,w.NA)(o);let l;if("quantization"in i){const r=i.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${i.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==t)throw new Error(`Weight ${i.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${t}.`)}const o=I[r.dtype],c=n.slice(a,a+u*o),h="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===t)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===s&&(s=L()),l=s(h)}else{if("int32"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*r.scale+r.min)}}a+=u*o}else if("string"===t){const e=(0,w.NA)(i.shape);l=[];for(let t=0;t<e;t++){const e=new Uint32Array(n.slice(a,a+4))[0];a+=4;const t=new Uint8Array(n.slice(a,a+e));l.push(t),a+=e}}else{const s=I[t],i=n.slice(a,a+u*s);if("float32"===t)l=new Float32Array(i);else if("int32"===t)l=new Int32Array(i);else if("bool"===t)l=new Uint8Array(i);else{if("complex64"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);{l=new Float32Array(i);const t=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],n[e]=l[2*e+1];const s=v(t,o,"float32"),a=v(n,o,"float32");r[e]=(0,x.P)(s,a),s.dispose(),a.dispose()}}a+=u*s}"complex64"!==t&&(r[e]=v(l,o,t))}return r}function E(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const A="undefined"!==typeof N&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function D(e){return A?N.byteLength(e,"utf8"):new Blob([e]).size}function R(e){return C.join(e)}function F(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function _(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function O(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function M(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),O(e,n,r)}function B(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:D(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:D(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new C(e.weightData).byteLength}}function W(e){const t=[];for(const n of e)t.push(...n.weights);return t}function L(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];a[i]=o}return new Float32Array(s)}}class U{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==U.instance&&(U.instance=new U),U.instance}static registerSaveRouter(e){U.getInstance().saveRouters.push(e)}static registerLoadRouter(e){U.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return U.getHandlers(e,"save")}static getLoadHandlers(e,t){return U.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?U.getInstance().loadRouters:U.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const z=e=>U.registerSaveRouter(e),P=e=>U.registerLoadRouter(e),V=e=>U.getSaveHandlers(e),H=(e,t)=>U.getLoadHandlers(e,t),G="tensorflowjs",j="models_store",X="model_info_store";function q(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function K(e){const t=e.result;t.createObjectStore(j,{keyPath:"modelPath"}),t.createObjectStore(X,{keyPath:"modelPath"})}class Q{constructor(e){if(this.indexedDB=q(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(G,1);r.onupgradeneeded=()=>K(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(j,"readonly"),r=t.objectStore(j).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=C.join(t.weightData);const r=B(t),i=s.transaction(X,"readwrite");let o,u,l=i.objectStore(X);try{o=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(a){return n(a)}o.onsuccess=()=>{u=s.transaction(j,"readwrite");const o=u.objectStore(j);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{l=i.objectStore(X);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Q.URL_SCHEME="indexeddb://";const Y=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Q.URL_SCHEME)?(t=e.slice(Q.URL_SCHEME.length),new Q(t)):null;var t};U.registerSaveRouter(Y),U.registerLoadRouter(Y);class Z{constructor(){this.indexedDB=q()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(G,1);n.onupgradeneeded=()=>K(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(X,"readonly"),a=s.objectStore(X).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Q.URL_SCHEME)?t.slice(Q.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(G,1);r.onupgradeneeded=()=>K(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(X,"readwrite"),i=a.objectStore(X),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(j,"readwrite");const r=u.objectStore(j).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const J="/",ee="tensorflowjs_models",te="info",ne="model_topology",re="weight_specs",se="weight_data",ae="model_metadata";function ie(e){return{info:[ee,e,te].join(J),topology:[ee,e,ne].join(J),weightSpecs:[ee,e,re].join(J),weightData:[ee,e,se].join(J),modelMetadata:[ee,e,ae].join(J)}}function oe(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ue(e){const t=e.split(J);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(J)}class le{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ie(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=B(e),a=C.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(A)return N.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw oe(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(A){const t=N.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}le.URL_SCHEME="localstorage://";const ce=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(le.URL_SCHEME)?(t=e.slice(le.URL_SCHEME.length),new le(t)):null;var t};U.registerSaveRouter(ce),U.registerLoadRouter(ce);class he{constructor(){(0,w.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,w.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ee+J,n=J+te;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ue(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=ie(e=(t=e).startsWith(le.URL_SCHEME)?t.slice(le.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return oe(n),r}}const de="://";class pe{constructor(){this.managers={}}static getInstance(){return null==pe.instance&&(pe.instance=new pe),pe.instance}static registerManager(e,t){(0,w.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(de)&&(e=e.slice(0,e.indexOf(de))),(0,w.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=pe.getInstance();(0,w.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=pe.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(pe.getInstance().managers)}}function fe(e){if(-1===e.indexOf(de))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pe.getSchemes().join(",")}`);return{scheme:e.split(de)[0],path:e.split(de)[1]}}async function me(e,t,n=!1){(0,w.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=U.getLoadHandlers(e);(0,w.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,w.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=U.getSaveHandlers(t);(0,w.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,w.hu)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=fe(e).scheme,u=fe(e).path,l=o===fe(e).scheme,c=await s.load();n&&l&&await pe.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await pe.getManager(o).removeModel(u),h.modelArtifactsInfo}async function ge(){const e=pe.getSchemes(),t={};for(const n of e){const e=await pe.getManager(n).listModels();for(const r in e){t[n+de+r]=e[r]}}return t}async function be(e){const t=fe(e);return pe.getManager(t.scheme).removeModel(t.path)}async function xe(e,t){return me(e,t,!1)}async function ye(e,t){return me(e,t,!0)}var ke=n(59742);class ve{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,m.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ke.j)(e)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new ve);try{pe.registerManager(le.URL_SCHEME,new he)}catch(Sa){}try{pe.registerManager(Q.URL_SCHEME,new Z)}catch(Sa){}}var we=n(83454);const Ie=()=>n(75410);let Se;class Ce{constructor(){this.util=n(48628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(e,t):(null==Se&&(Se=Ie()),Se(e,t))}now(){const e=we.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,m.OB)().get("IS_NODE")&&!(0,m.OB)().get("IS_BROWSER")&&(0,m.OB)().setPlatform("node",new Ce);var Ne=n(40974);function Te(e,t="float32",n){return t=t||"float32",w.Mu(e),new Ne.YD(e,t,n)}var $e=n(62271),Ee=n(8723);(0,c.wv)();const Ae={buffer:Te,cast:$e.p,clone:Ee.d,print:function(e,t=!1){console.log(e.toString(t))}};(0,Ne.Vp)(Ae);var De=n(4368),Re=n(56407),Fe=n(41274),_e=n(24841),Oe=n(13261),Me=n(50248),Be=n(6577),We=n(30633),Le=n(99494);class Ue{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ze{constructor(){this.classNameMap={}}static getMap(){return null==ze.instance&&(ze.instance=new ze),ze.instance}static register(e){ze.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Pe(e){(0,w.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,w.hu)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,w.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ze.register(e)}class Ve extends Ue{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,De.B9)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,We.pn)(e,t)}dispose(){null!=this.iterations_&&(0,De.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Le.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ve,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class He extends Ve{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,De.lu)((()=>{const e=(0,Re.I)((0,_e.d)(a,this.rho),(0,_e.d)((0,Me.h)(s),1-this.rho)),t=(0,_e.d)((0,Fe.h)((0,Oe._)((0,Re.I)(i,this.epsilon)),(0,Oe._)((0,Re.I)(a,this.epsilon))),s),n=(0,Re.I)((0,_e.d)(i,this.rho),(0,_e.d)((0,Me.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,Re.I)((0,_e.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,De.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,De.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Ge=n(14006);class je extends Ve{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,De.lu)((()=>(0,Ge.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,De.lu)((()=>{const e=(0,Re.I)(a,(0,Me.h)(s));a.assign(e);const t=(0,Re.I)((0,_e.d)((0,Fe.h)(s,(0,Oe._)((0,Re.I)(e,c.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,De.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Xe=n(33453),qe=n(70827);class Ke extends Ve{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,De.lu)((()=>{this.accBeta1=(0,Le.i)(t).variable(),this.accBeta2=(0,Le.i)(n).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,De.lu)((()=>{const n=(0,qe.l)(1,this.accBeta1),r=(0,qe.l)(1,this.accBeta2);t.forEach(((t,s)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,De.lu)((()=>(0,Be.P)(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,De.lu)((()=>(0,Be.P)(a).variable(false)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=(0,Re.I)((0,_e.d)(o,this.beta1),(0,_e.d)(i,1-this.beta1)),h=(0,Re.I)((0,_e.d)(u,this.beta2),(0,_e.d)((0,Me.h)(i),1-this.beta2)),d=(0,Fe.h)(l,n),p=(0,Fe.h)(h,r);o.assign(l),u.assign(h);const f=(0,Re.I)((0,_e.d)((0,Fe.h)(d,(0,Re.I)((0,Oe._)(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,_e.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,_e.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,De.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,De.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,De.lu)((()=>{this.accBeta1.assign((0,Xe.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Xe.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Qe=n(96235),Ye=n(80632);class Ze extends Ve{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,De.lu)((()=>{this.iteration=(0,Le.i)(0).variable(),this.accBeta1=(0,Le.i)(t).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,De.lu)((()=>{const n=(0,qe.l)(1,this.accBeta1),r=(0,Fe.h)(-this.learningRate,(0,Re.I)((0,_e.d)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,Be.P)(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,Be.P)(a).variable(false)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=(0,Re.I)((0,_e.d)(o,this.beta1),(0,_e.d)(i,1-this.beta1)),h=(0,_e.d)(u,this.beta2),d=(0,Qe.W)(i),p=(0,Ye.g)(h,d);o.assign(l),u.assign(p);const f=(0,Re.I)((0,_e.d)((0,Fe.h)(r,n),(0,Fe.h)(l,(0,Re.I)(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,Re.I)(this.iteration,1)),this.accBeta1.assign((0,_e.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,De.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,De.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Je extends Ve{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=c.BV.registeredVariables[t];(0,De.lu)((()=>{const e=(0,Re.I)((0,_e.d)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,De.Cn)((0,Le.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class et extends Je{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Le.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,De.lu)((()=>{let e;const t=(0,Re.I)((0,_e.d)(this.m,s),a);e=this.useNesterov?(0,Re.I)((0,_e.d)(this.c,(0,Re.I)(a,(0,_e.d)(t,this.m))),r):(0,Re.I)((0,_e.d)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,De.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class tt extends Ve{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=c.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,De.lu)((()=>(0,Be.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,De.lu)((()=>{const e=(0,Re.I)((0,_e.d)(i,this.decay),(0,_e.d)((0,Me.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,Re.I)((0,_e.d)(t,this.decay),(0,_e.d)(a,1-this.decay)),u=(0,Fe.h)((0,_e.d)(a,this.learningRate),(0,Oe._)((0,qe.l)(e,(0,Re.I)((0,Me.h)(s),this.epsilon)))),l=(0,Re.I)((0,_e.d)(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=(0,qe.l)(r,l);r.assign(c)}else{const e=(0,Re.I)((0,_e.d)(i,this.decay),(0,_e.d)((0,Me.h)(a),1-this.decay)),t=(0,Re.I)((0,_e.d)(o,this.momentum),(0,Fe.h)((0,_e.d)(a,this.learningRate),(0,Oe._)((0,Re.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,qe.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,De.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,De.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,De.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const nt=[He,je,Ke,Ze,et,tt,Je];function rt(e){return new Promise((e=>setTimeout(e))).then(e)}class st{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(st.URL_SCHEME)&&(e=e.slice(st.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=C.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=_(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await rt((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await rt((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:B(e)}}}}st.URL_SCHEME="downloads://";class at{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=M(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>F(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=F(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function it(e){return new at(e)}function ot(e,t,n,r){!function(e){(0,w.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,w.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,w.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,w.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ut(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await ot(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ot(s,t.onProgress,.5,1)}async function lt(e,t="",n,r){return ct((e=>ut(e,{requestInit:r})))(e,t,n)}function ct(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=I[u]*w.NA(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,r=new C(c.slice(d,d+n));a[e].forEach((e=>{const t=$(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}U.registerSaveRouter((e=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(st.URL_SCHEME)?function(e="model"){return new st(e)}(e.slice(st.URL_SCHEME.length)):null));class ht{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,w.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,w.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,w.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=_(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=C.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:B(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return M(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=W(e),i=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,await ut(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function dt(e){return null!=e.match(ht.URL_SCHEME_REGEX)}ht.URL_SCHEME_REGEX=/^https?:\/\//;const pt=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>dt(e))):dt(e),n)return ft(e,t)}return null};function ft(e,t){return new ht(e,t)}function mt(e,t){return ft(e,t)}U.registerSaveRouter(pt),U.registerLoadRouter(pt);class gt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class bt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class xt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function yt(e,t,n,r){const s=arguments;return new xt(kt(...s))}function kt(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new gt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function vt(e){return new bt(e)}function wt(e){return new bt(e)}var It=n(72200),St=n(37650),Ct=n(80747);const Nt="4.7.0";var Tt=n(71221),$t=n(90781),Et=n(92998),At=n(40047),Dt=n(15176),Rt=n(29121),Ft=n(2582),_t=n(2668),Ot=n(4968);const Mt=(0,_t.op)({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=(0,y._1)(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=(0,Ot.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),w.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),w.hu("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),w.hu("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,Ft.m)("avgPool3d",r,s);const l={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let d=c.BV.runKernel(Rt._k9,l,h);return d=(0,$e.p)(d,o.dtype),u?(0,Ot.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Bt=n(40094);const Wt=(0,_t.op)({batchNorm2d_:function(e,t,n,r,s,a){const i=(0,y._1)(e,"x","batchNorm"),o=(0,y._1)(t,"mean","batchNorm"),u=(0,y._1)(n,"variance","batchNorm");let l,c;return null!=s&&(l=(0,y._1)(s,"scale","batchNorm")),null!=r&&(c=(0,y._1)(r,"offset","batchNorm")),w.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),w.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),w.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&w.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&w.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,Bt.t)(i,o,u,c,l,a)}});const Lt=(0,_t.op)({batchNorm3d_:function(e,t,n,r,s,a){const i=(0,y._1)(e,"x","batchNorm"),o=(0,y._1)(t,"mean","batchNorm"),u=(0,y._1)(n,"variance","batchNorm");let l,c;return null!=s&&(l=(0,y._1)(s,"scale","batchNorm")),null!=r&&(c=(0,y._1)(r,"offset","batchNorm")),w.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),w.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),w.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&w.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&w.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,Bt.t)(i,o,u,c,l,a)}});const Ut=(0,_t.op)({batchNorm4d_:function(e,t,n,r,s,a){const i=(0,y._1)(e,"x","batchNorm"),o=(0,y._1)(t,"mean","batchNorm"),u=(0,y._1)(n,"variance","batchNorm");let l,c;return null!=s&&(l=(0,y._1)(s,"scale","batchNorm")),null!=r&&(c=(0,y._1)(r,"offset","batchNorm")),w.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),w.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),w.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&w.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&w.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,Bt.t)(i,o,u,c,l,a)}});var zt=n(68247),Pt=n(42279),Vt=n(46884);const Ht=(0,_t.op)({concat1d_:function(e){return(0,Vt.z)(e,0)}});const Gt=(0,_t.op)({concat2d_:function(e,t){return(0,Vt.z)(e,t)}});const jt=(0,_t.op)({concat3d_:function(e,t){return(0,Vt.z)(e,t)}});const Xt=(0,_t.op)({concat4d_:function(e,t){return(0,Vt.z)(e,t)}});var qt=n(11355),Kt=n(64794),Qt=n(71405);const Yt=(0,_t.op)({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=(0,y._1)(e,"x","conv3d"),o=(0,y._1)(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=(0,Ot.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),w.hu(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),w.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),w.hu(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),w.hu((0,Ft.jT)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),w.hu("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),w.hu((0,Ft.U3)(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),w.hu((0,Ft.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const h={x:u,filter:o},d={strides:n,pad:r,dataFormat:s,dilations:a},p=c.BV.runKernel(Rt.x12,h,d);return l?(0,Ot.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Zt=n(97594);const Jt=(0,_t.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,y._1)(e,"x","conv3dTranspose"),i=(0,y._1)(t,"filter","conv3dTranspose");return(0,Zt._)(n,a,i,r,s)}});const en=(0,_t.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,y._1)(e,"x","denseBincount"),a=(0,y._1)(t,"weights","denseBincount");w.hu("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),w.hu(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),w.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),w.hu(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return c.BV.runKernel(Rt.QRR,i,o)}});var tn=n(64718),nn=n(83233),rn=n(26477),sn=n(44842),an=n(81300),on=n(47501);const un=(0,_t.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Te([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=(0,Ot.X)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,on.G)((0,an.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,on.G)((0,an.d)((0,an.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,on.G)((0,an.d)((0,an.d)((0,an.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ln=n(26943),cn=n(24926),hn=n(20636),dn=n(17630),pn=n(99133),fn=n(82597),mn=n(17474),gn=n(31510),bn=n(2856),xn=n(28687),yn=n(83307),kn=n(21174);const vn=(0,_t.op)({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=(0,y._1)(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=(0,Ot.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),w.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),w.hu("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,Ft.m)("maxPool3d",r,s);const l={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=c.BV.runKernel(Rt.OAf,l,h);return u?(0,Ot.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var wn=n(75130),In=n(25735),Sn=n(24513),Cn=n(83591);const Nn=(0,_t.op)({moments_:function(e,t=null,n=!1){e=(0,y._1)(e,"x","moments");const r=(0,w.EC)(t,e.shape),s=(0,wn.J)(e,r,n);let a=s.shape;n||(a=(0,Cn.rv)(s.shape,r));const i=(0,Me.h)((0,qe.l)((0,$e.p)(e,"float32"),(0,Ot.X)(s,a)));return{mean:s,variance:(0,wn.J)(i,r,n)}}});var Tn=n(17370),$n=n(16500),En=n(76708),An=n(44917),Dn=n(7846),Rn=n(39682),Fn=n(98151),_n=n(36377);class On{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=_n.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Mn{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=_n.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Bn=(0,_t.op)({randomNormal_:function(e,t=0,n=1,r,s){if((0,w.Mu)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new On(t,n,r,!1,s),i=Te(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Wn=(0,_t.op)({randomUniform_:function(e,t=0,n=1,r="float32",s){(0,w.Mu)(e);const a=Te(e,r),i=new Mn(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});function Ln(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return c.BV.runKernel(Rt.e6w,{},s)}var Un=n(7409),zn=n(57486),Pn=n(55503),Vn=n(68678),Hn=n(30625),Gn=n(22676);const jn=(0,_t.op)({slice1d_:function(e,t,n){const r=(0,y._1)(e,"x","slice1d");return w.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,Gn.t)(r,[t],[n])}});const Xn=(0,_t.op)({slice2d_:function(e,t,n){const r=(0,y._1)(e,"x","slice2d");return w.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,Gn.t)(r,t,n)}});const qn=(0,_t.op)({slice3d_:function(e,t,n){const r=(0,y._1)(e,"x","slice3d");return w.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,Gn.t)(r,t,n)}});const Kn=(0,_t.op)({slice4d_:function(e,t,n){const r=(0,y._1)(e,"x","slice4d");return w.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,Gn.t)(r,t,n)}});var Qn=n(80682),Yn=n(3694),Zn=n(28644),Jn=n(79590),er=n(82991),tr=n(15475),nr=n(21869);function rr(e,t){(0,w.Cq)(e);const n=(0,y.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,k.H)(e,null,n,t)}function sr(e,t,n){if((0,w.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,y.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,k.H)(e,t,r,n)}const ar=(0,_t.op)({truncatedNormal_:function(e,t=0,n=1,r,s){if((0,w.Mu)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new On(t,n,r,!0,s),i=Te(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});var ir=n(24136);function or(e,t=!0,n,r){return c.BV.makeVariable(e,t,n,r)}var ur=n(95912),lr=n(59640),cr=n(89065);const hr=(0,_t.op)({dropout_:function(e,t,n,r){const s=(0,y._1)(e,"x","dropout");if(w.hu("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),w.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ne.es?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(w.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=(0,Fe.h)((0,ln.G)((0,Re.I)(Wn(a,0,1,"float32",r),i)),i);return(0,_e.d)(s,o)}});var dr=n(13710),pr=n(7020),fr=n(88447),mr=n(84415),gr=n(36013),br=n(39832),xr=n(83582),yr=n(71901);function kr(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,_e.d)(e,(0,yr.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function vr(e,t){let n=t;const r=It.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,tr.S)(n,r)),(0,Ot.X)(n,e.shape)}function wr(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,Un.U)(e);if("elu"===t)return(0,nn.p)(e);if("relu6"===t)return(0,xr.b)(e);if("prelu"===t)return(0,Fn.A)(e,n);if("leakyrelu"===t)return(0,pn.h)(e,r);if("sigmoid"===t)return(0,Hn.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const Ir=(e,t)=>!(e>0)||"linear"===t;const Sr=(0,_t.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(u=u||"linear",!1===Ir(c.BV.state.gradientDepth,u)){w.hu("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let c=(0,Kt.T)(e,t,n,r,s,a,i);return null!=o&&(c=(0,Re.I)(c,o)),wr(c,u,l,h)}const d=(0,y._1)(e,"x","conv2d","float32"),p=(0,y._1)(t,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=(0,Ot.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),w.hu(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),w.hu(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Ft.m("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];w.hu(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),w.hu(Ft.jT(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const b=Ft.Ix(f.shape,p.shape,n,a,r,i);let x,k;if(null!=o&&(x=(0,y._1)(o,"bias","fused conv2d"),[x]=(0,Ct.makeTypesMatch)(x,d),"NHWC"===s?It.assertAndGetBroadcastShape(b.outShape,x.shape):(w.hu(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),w.hu(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=l){const e=l.shape;if(w.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)w.hu(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{It.assertAndGetBroadcastShape(e,b.outShape)}catch(C){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(t)}k=(0,y._1)(l,"prelu weights","fused conv2d")}const v=(e,t)=>{w.hu("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,l,c]=t,h=kr(e,l,u);w.hu(Ft.I0(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[(0,br._)(o.shape,h,i,n,r),(0,gr.p)(o,h,i.shape,n,r)];if(null!=c){const e=vr(c,h);d.push(e)}return d},I={x:f,filter:p,bias:x,preluActivationWeights:k},S={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==o){const e=(0,We.cb)(((e,t,n)=>{let r=c.BV.runKernel(Rt._V0,I,S);return n([t,e,r]),m&&(r=(0,Ot.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=(0,We.cb)(((e,t,n,r)=>{let s=c.BV.runKernel(Rt._V0,I,S);return r([t,e,s,n]),m&&(s=(0,Ot.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,x)}}});var Cr=n(88098),Nr=n(54375);const Tr=(0,_t.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(!1===Ir(c.BV.state.gradientDepth,u)){let c=(0,tn.B)(e,t,n,r,s,a,i);return null!=o&&(c=(0,Re.I)(c,o)),wr(c,u,l,h)}const d=(0,y._1)(e,"x","depthwiseConv2d","float32"),p=(0,y._1)(t,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=(0,Ot.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),w.hu(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),w.hu(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),w.hu(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),w.hu(Ft.jT(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Ft.m("fused depthwiseConv2d",r,i);const g=Ft.Ix(f.shape,p.shape,n,a,r,i,!0);let b,x;null!=o&&(b=(0,y._1)(o,"bias","fused conv2d"),[b]=(0,Ct.makeTypesMatch)(b,d),It.assertAndGetBroadcastShape(g.outShape,b.shape)),null!=l&&(x=(0,y._1)(l,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{w.hu(Ft.I0(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=t,h=kr(e,l,u),d=(0,Nr.v)(o.shape,h,s,n,r,a,i),p=(0,Cr.z)(o,h,s.shape,n,r,a,i);if(null!=c){return[d,p,vr(b,h)]}return[d,p]},v={x:f,filter:p,bias:b,preluActivationWeights:x},I={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==o){const e=(0,We.cb)(((e,t,n)=>{let r=c.BV.runKernel(Rt.luS,v,I);return n([t,e,r]),m&&(r=(0,Ot.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}));return e(f,p)}{const e=(0,We.cb)(((e,t,n,r)=>{let s=c.BV.runKernel(Rt.luS,v,I);return r([t,e,s,n]),m&&(s=(0,Ot.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(f,p,b)}}});const $r=(0,_t.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Ir(c.BV.state.gradientDepth,a)){let u=(0,xn.O)(e,t,n,r);return null!=s&&(u=(0,Re.I)(u,s)),wr(u,a,i,o)}let u=(0,y._1)(e,"a","fused matMul"),l=(0,y._1)(t,"b","fused matMul");[u,l]=(0,Ct.makeTypesMatch)(u,l);const h=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),g=l.shape.slice(0,-2),b=w.NA(m),x=w.NA(g);w.hu(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=It.assertAndGetBroadcastShape(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),v=n?(0,Ot.X)(u,[b,h,p]):(0,Ot.X)(u,[b,p,h]),I=r?(0,Ot.X)(l,[x,f,d]):(0,Ot.X)(l,[x,d,f]);let S,C;null!=s&&(S=(0,y._1)(s,"bias","fused matMul"),[S]=(0,Ct.makeTypesMatch)(S,u),It.assertAndGetBroadcastShape(k,S.shape)),null!=i&&(C=(0,y._1)(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,l]=t,c=kr((0,Ot.X)(e,u.shape),u,a);let h,d;if(n||r?!n&&r?(h=(0,xn.O)(c,o,!1,!1),d=(0,xn.O)(c,i,!0,!1)):n&&!r?(h=(0,xn.O)(o,c,!1,!0),d=(0,xn.O)(i,c,!1,!1)):(h=(0,xn.O)(o,c,!0,!0),d=(0,xn.O)(c,i,!0,!0)):(h=(0,xn.O)(c,o,!1,!0),d=(0,xn.O)(i,c,!0,!1)),null!=s){return[h,d,vr(l,c)]}return[h,d]},T={a:v,b:I,bias:S,preluActivationWeights:C},$={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=(0,We.cb)(((e,t,n)=>{const r=c.BV.runKernel(Rt.usg,T,$);return n([e,t,r]),{value:(0,Ot.X)(r,k),gradFunc:N}}));return e(v,I)}{const e=(0,We.cb)(((e,t,n,r)=>{const s=c.BV.runKernel(Rt.usg,T,$);return r([e,t,s,n]),{value:(0,Ot.X)(s,k),gradFunc:N}}));return e(v,I,S)}}});const Er=(0,_t.op)({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=(0,y._1)(e,"image","cropAndResize"),o=(0,y._1)(t,"boxes","cropAndResize","float32"),u=(0,y._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];w.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),w.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),w.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),w.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),w.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),w.hu("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:i,boxes:o,boxInd:u},d={method:s,extrapolationValue:a,cropSize:r};return c.BV.runKernel(Rt.VcC,h,d)}});const Ar=(0,_t.op)({flipLeftRight_:function(e){const t=(0,y._1)(e,"image","flipLeftRight","float32");w.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return c.BV.runKernel(Rt.Uyb,n,{})}});const Dr=(0,_t.op)({grayscaleToRGB_:function(e){const t=(0,y._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];w.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),w.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,on.G)(t,s)}});const Rr=(0,_t.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,y._1)(e,"image","rotateWithOffset","float32");w.hu(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return c.BV.runKernel(Rt.b9H,a,i)}});function Fr(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),w.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),w.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),w.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),w.hu(1===t.rank,(()=>"scores must be a 1D tensor")),w.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),w.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const _r=(0,_t.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,y._1)(e,"boxes","nonMaxSuppression","float32"),i=(0,y._1)(t,"scores","nonMaxSuppression","float32"),o=Fr(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return c.BV.runKernel(Rt.uv1,{boxes:a,scores:i},u)}});function Or(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Mr)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Mr(e,t){return e>t?1:e<t?-1:0}function Br(e,t,n,r,s){return Ur(e,t,n,r,s,0)}function Wr(e,t,n,r,s,a){return Ur(e,t,n,r,s,0,!1,a,!0)}function Lr(e,t,n,r,s,a){return Ur(e,t,n,r,s,a,!0)}function Ur(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>s&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Vr);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let u=h.length-1;u>=i;--u){const n=zr(e,a,h[u]);if(n>=r){o=!0;break}if(t.score=t.score*Pr(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Or(l,t,Vr))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function zr(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,h),x=Math.min(u,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function Pr(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Vr(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Hr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,y._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,y._1)(t,"scores","nonMaxSuppressionAsync"),o=Fr(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Br(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),rr(h,"int32")};const Gr=(0,_t.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=(0,y._1)(e,"boxes","nonMaxSuppression"),o=(0,y._1)(t,"scores","nonMaxSuppression"),u=Fr(i,o,n,r,s,a),l={boxes:i,scores:o},h={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},d=c.BV.runKernel(Rt.W0H,l,h);return{selectedIndices:d[0],selectedScores:d[1]}}});const jr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=(0,y._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,y._1)(t,"scores","nonMaxSuppressionAsync"),u=Fr(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Lr(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rr(d,"int32"),selectedScores:rr(p)}};const Xr=(0,_t.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=(0,y._1)(e,"boxes","nonMaxSuppression"),o=(0,y._1)(t,"scores","nonMaxSuppression"),u=Fr(i,o,n,r,s,null),l={boxes:i,scores:o},h={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},d=c.BV.runKernel(Rt.cye,l,h);return{selectedIndices:d[0],validOutputs:d[1]}}});const qr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=(0,y._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,y._1)(t,"scores","nonMaxSuppressionAsync"),u=Fr(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Wr(d,p,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rr(f,"int32"),validOutputs:(0,Le.i)(m,"int32")}};var Kr=n(13305),Qr=n(95098);const Yr=(0,_t.op)({bincount_:function(e,t,n){const r=(0,y._1)(e,"x","bincount"),s=(0,y._1)(t,"weights","bincount");w.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),w.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),w.hu(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return c.BV.runKernel(Rt.zvY,a,i)}});var Zr=n(50624),Jr=n(97809);const es=(0,_t.op)({threshold_:function(e,t="binary",n=!1,r=.5){const s=(0,y._1)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=(0,_e.d)(rr([r]),255);if(w.hu(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),w.hu(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),w.hu("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),w.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,u]=(0,Zn.V)(s,[1,1,1],-1);const e=(0,_e.d)(i,.2989),t=(0,_e.d)(o,.587),n=(0,_e.d)(u,.114);l=(0,Re.I)((0,Re.I)(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,s,a,i,o,u=rr([-1]),l=rr([0]),c=rr([0]);for(let h=0;h<e.size-1;h++){n=(0,Gn.t)(e,0,h+1),r=(0,Gn.t)(e,h+1),i=(0,Fe.h)((0,tr.S)(n),t),o=(0,Fe.h)((0,tr.S)(r),t);const d=(0,tr.S)((0,_e.d)(n,Ln(0,n.size)));s=(0,Fe.h)(d,(0,tr.S)(n));const p=(0,Ge.h)(r.shape,n.size),f=(0,Re.I)(Ln(0,r.size),p),m=(0,_e.d)(r,f);a=(0,Fe.h)((0,tr.S)(m),(0,tr.S)(r));const g=(0,qe.l)(s,a),b=(0,qe.l)(s,a),x=(0,_e.d)(i,o);c=(0,_e.d)((0,_e.d)(x,g),b);const y=(0,hn.p)(c,l);l=(0,ur.a)(y,c,l),u=(0,ur.a)(y,rr([h]),u)}return u}(Yr((0,$e.p)((0,Jr.N)(l),"int32"),v([]),256),a)}const h=n?(0,Zr.z)(l,c):(0,hn.p)(l,c);return(0,$e.p)((0,_e.d)(h,255),"int32")}});const ts=(0,_t.op)({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=(0,y._1)(e,"image","transform","float32"),o=(0,y._1)(t,"transforms","transform","float32");w.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),w.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),w.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return c.BV.runKernel(Rt.wx7,u,l)}});var ns=n(86573);const rs=(0,_t.op)({bandPart_:function(e,t,n){const r=(0,y._1)(e,"a","bandPart");(0,w.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,u;"number"===typeof t?((0,w.hu)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,w.hu)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=(0,y._1)(t<0?a:t,"numLower","bandPart")):((0,w.hu)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=(0,ur.a)((0,ns.d)(t,0),a,(0,Sn.L)(t,a))),"number"===typeof n?((0,w.hu)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,w.hu)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=(0,y._1)(n<0?i:n,"numUpper","bandPart")):((0,w.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=(0,ur.a)((0,ns.d)(n,0),i,(0,Sn.L)(n,i)));const l=(0,Ot.X)(Ln(0,a,1,"int32"),[-1,1]),c=Ln(0,i,1,"int32"),h=(0,qe.l)(l,c),d=(0,bn.H)((0,Zr.z)(h,o),(0,dn.b)(h,(0,Tn.W)(u))),p=(0,lr.l)([a,i],r.dtype);return(0,Ot.X)((0,er.k)((0,ir.H)((0,Ot.X)(r,[-1,a,i])).map((e=>(0,ur.a)(d,e,p)))),s)}});var ss=n(3561);const as=(0,_t.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,w.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,w.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Zn.V)(e,e.shape[0],0).map((e=>(0,Jn.L)(e,[0])));(0,w.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(c.BV.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,_e.d)((0,tr.S)((0,_e.d)(n[t],e)),n[t]);e=(0,qe.l)(e,r)}return(0,Fe.h)(e,(0,ss.K)(e,"euclidean"))})));return t?(0,er.k)(n,0):n}});function is(e,t=!1){return c.BV.tidy((()=>{(0,w.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=un(n),a=(0,Ee.d)(e);const i=sr([[1]],[1,1]);let o=(0,Ee.d)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=c.BV.tidy((()=>{const t=(0,Gn.t)(a,[e,e],[n-e,1]),u=(0,ss.K)(t),l=(0,Gn.t)(a,[e,e],[1,1]),c=(0,ur.a)((0,hn.p)(l,0),sr([[-1]]),sr([[1]])),h=(0,qe.l)(l,(0,_e.d)(c,u)),d=(0,Fe.h)(t,h);o=1===d.shape[0]?(0,Ee.d)(i):(0,Vt.z)([i,(0,Gn.t)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=(0,Tn.W)((0,Fe.h)((0,xn.O)(c,h),u)),f=(0,Gn.t)(a,[e,0],[n-e,r]),m=(0,_e.d)(p,o),g=(0,cr.p)(o);if(0===e)a=(0,qe.l)(f,(0,xn.O)(m,(0,xn.O)(g,f)));else{const t=(0,qe.l)(f,(0,xn.O)(m,(0,xn.O)(g,f)));a=(0,Vt.z)([(0,Gn.t)(a,[0,0],[e,r]),t],0)}const b=(0,cr.p)(m),x=(0,Gn.t)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,qe.l)(x,(0,xn.O)((0,xn.O)(x,o),b));else{const t=(0,qe.l)(x,(0,xn.O)((0,xn.O)(x,o),b));s=(0,Vt.z)([(0,Gn.t)(s,[0,0],[n,e]),t],1)}return[o,a,s]})),(0,De.B9)([t,u,l])}return!t&&n>r&&(s=(0,Gn.t)(s,[0,0],[n,r]),a=(0,Gn.t)(a,[0,0],[r,r])),[s,a]}))}const os=(0,_t.op)({qr_:function(e,t=!1){if((0,w.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return is(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,ir.H)((0,Ot.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=is(e,t);s.push(n),a.push(r)}));return[(0,Ot.X)((0,er.k)(s,0),e.shape),(0,Ot.X)((0,er.k)(a,0),e.shape)]}}});var us;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(us||(us={}));n(15265);n(11391);pr.k,fr.S,dr.Q,mr.w;const ls={flipLeftRight:Ar,grayscaleToRGB:Dr,resizeNearestNeighbor:Qr.j,resizeBilinear:Kr.I,rotateWithOffset:Rr,cropAndResize:Er,nonMaxSuppression:_r,nonMaxSuppressionAsync:Hr,nonMaxSuppressionWithScore:Gr,nonMaxSuppressionWithScoreAsync:jr,nonMaxSuppressionPadded:Xr,nonMaxSuppressionPaddedAsync:qr,threshold:es,transform:ts},cs={bandPart:rs,gramSchmidt:as,qr:os};const hs=class{static sgd(e){return new Je(e)}static momentum(e,t,n=!1){return new et(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new tt(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Ke(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new He(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Ze(e,t,n,r,s)}static adagrad(e,t=.1){return new je(e,t)}};var ds=n(26151);const ps="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function fs(){return new Promise((e=>ps((()=>e()))))}function ms(e,t){const n=e[0].length;e.forEach(((e,t)=>{w.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),w.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)w.hu(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function gs(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var bs;function xs(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function ys(e){const t={FIRST_DIM_SIZE:bs.FIRST_DIM_SIZE,VALUE_ROWIDS:bs.VALUE_ROWIDS,ROW_LENGTHS:bs.ROW_LENGTHS,ROW_SPLITS:bs.ROW_SPLITS,ROW_LIMITS:bs.ROW_LIMITS,ROW_STARTS:bs.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function ks(e){return 0===e.length?0:e[0]===bs.FIRST_DIM_SIZE?e.length-1:e.length}function vs(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(bs||(bs={}));const ws=30;function Is(e){return e<=ws?e:(0,w.jP)(e,Math.floor(Math.sqrt(e)))}function Ss(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Cs(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Ns(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ts(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function $s(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Es(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function As(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,w.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,u=s.slice();u.pop();let l=1;for(let h=a;h<n;++h)l*=o[h],u.push(o[h]);const c=[...(0,w.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}function Ds(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function Rs(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ds(n,t,e)}function Fs(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let u=s;u<a;++u)i*=n[u];const o=s<1?1:s;return{sliceRank:s,numUpdates:(0,w.NA)(t.shape)/o,sliceSize:i,strides:[...(0,w.e3)(n.slice(0,s)),1],outputSize:(0,w.NA)(n)}}var _s=n(43179);const Os=.3275911,Ms=.254829592,Bs=-.284496736,Ws=1.421413741,Ls=-1.453152027,Us=1.061405429;var zs=n(64706);function Ps(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Vs(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Hs(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Gs(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function js(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Xs(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function qs(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Ks(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Qs="->",Ys=/->/g;function Zs(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ys,"").length)/Qs.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split(Qs);(0,w.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let e=0;e<a[h].length;++e)u[h].push(o.indexOf(a[h][e]))}const l=o.length,c=[];for(let h=s.length;h<l;++h)c.push(h);return{allDims:o,summedDims:c,idDims:u}}function Js(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function ea(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,w.hu)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function ta(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=ra(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function na(e){return e.every(((e,t)=>e===t))}function ra(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function sa(e,t,n=0){let r=[];if("number"===typeof t)(0,w.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,w.hu)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,w.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function aa(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function ia(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function oa(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ua(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function la(e,t){return`size ${e} must be non-negative, not ${t}`}function ca(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ha(e,t){return`Input to reshape is a SparseTensor with ${(0,w.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,w.NA)(t)}. inputShape=${e} outputShape= ${t}`}function da(e,t){return`Input to reshape is a tensor with ${(0,w.NA)(e)} dense values, but the requested shape has ${(0,w.NA)(t)}. inputShape=${e} outputShape=${t}`}function pa(){return"segment ids must be >= 0"}function fa(){return"segment ids are not increasing"}function ma(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ga(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ba(e,t){let n,r=!1;for(e<=ws?(n=e,r=!0):n=(0,w.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,w.jP)(e,n+1);return n}function xa(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function ya(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function ka(e){try{return e.map((e=>(0,S.decodeString)(e)))}catch(Sa){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Sa}`)}}function va(e){return e.map((e=>(0,S.encodeString)(e)))}function wa(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=Te(e,"int32"),s=Te([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),i=a*e.length;s.values.set(t,i)}return s.toTensor()}var Ia=n(68713);!function(){for(const e of nt)Pe(e)}()},29121:function(e,t,n){"use strict";n.d(t,{$HU:function(){return ft},$g6:function(){return te},$w:function(){return K},Acj:function(){return xe},BMI:function(){return We},BiW:function(){return ht},Byc:function(){return z},CAk:function(){return Te},CQl:function(){return ct},D2d:function(){return Gt},DlI:function(){return ut},Eh3:function(){return R},FKq:function(){return Mt},G3Y:function(){return an},GBy:function(){return Bt},Gcp:function(){return Ut},HEU:function(){return re},HZH:function(){return gt},Hhh:function(){return Me},Hmb:function(){return xt},IKK:function(){return l},IMb:function(){return k},J$2:function(){return Ce},J_u:function(){return ve},JhU:function(){return b},L8s:function(){return Lt},Ly9:function(){return C},M2y:function(){return d},MIZ:function(){return tn},MRv:function(){return Ot},MZg:function(){return Fe},NEP:function(){return ie},NZg:function(){return Ke},O3z:function(){return zt},OAf:function(){return ze},OR:function(){return de},OU7:function(){return Pe},OV7:function(){return Ue},Omj:function(){return se},Oyi:function(){return m},PYm:function(){return De},PhF:function(){return $t},QCc:function(){return g},QRR:function(){return H},Qg5:function(){return ke},QiL:function(){return st},Qvg:function(){return ln},RFZ:function(){return T},ROF:function(){return x},RQH:function(){return Dt},RuY:function(){return cn},SIB:function(){return Nt},SX0:function(){return ne},SYM:function(){return r},SbG:function(){return vt},SpW:function(){return a},T0n:function(){return G},TQc:function(){return Wt},TR1:function(){return U},ToN:function(){return un},Tr8:function(){return Jt},Uyb:function(){return he},VGw:function(){return s},Vbg:function(){return qe},VcC:function(){return V},VfG:function(){return Re},Vn9:function(){return Z},W0H:function(){return tt},XLW:function(){return v},XkS:function(){return Zt},Xze:function(){return o},Y0y:function(){return ue},YFo:function(){return oe},YoZ:function(){return Be},ZbH:function(){return Ee},ZjV:function(){return Ht},Zz9:function(){return A},_JP:function(){return Qt},_V0:function(){return mn},_Yw:function(){return yt},_k9:function(){return y},_tC:function(){return jt},a5O:function(){return _t},aJk:function(){return h},avt:function(){return we},b9H:function(){return pn},bK0:function(){return Xt},bV0:function(){return St},c17:function(){return Ge},cWu:function(){return rn},cie:function(){return j},cye:function(){return et},dDz:function(){return lt},deh:function(){return ce},dpD:function(){return bt},e07:function(){return It},e0R:function(){return qt},e6w:function(){return dt},e7N:function(){return $e},eBW:function(){return dn},eEB:function(){return N},eZ0:function(){return Oe},ekb:function(){return Y},gJX:function(){return $},h8e:function(){return hn},hCO:function(){return S},hGc:function(){return J},hdR:function(){return ae},i5y:function(){return Ft},iHb:function(){return P},iJz:function(){return ye},iWB:function(){return Ie},iZT:function(){return be},ik2:function(){return W},jMg:function(){return f},jQk:function(){return Kt},jQs:function(){return Xe},jeX:function(){return pe},kU:function(){return Ae},kpP:function(){return on},kuV:function(){return Ye},luS:function(){return gn},lyA:function(){return at},mKl:function(){return wt},mTV:function(){return Le},mc4:function(){return L},mhS:function(){return F},mm_:function(){return i},n9L:function(){return nn},nhH:function(){return Pt},nr8:function(){return Tt},o0g:function(){return ot},o2y:function(){return B},oFR:function(){return Et},oHH:function(){return ee},oT6:function(){return u},p2w:function(){return At},p4S:function(){return Q},pe_:function(){return it},q1x:function(){return ge},q2K:function(){return He},q8u:function(){return je},qCd:function(){return _e},qWM:function(){return nt},qi_:function(){return me},qkr:function(){return mt},qw7:function(){return p},r7n:function(){return Se},s1s:function(){return Yt},sEM:function(){return en},sHE:function(){return fe},sJF:function(){return c},sL$:function(){return X},usg:function(){return fn},uv1:function(){return Je},vFR:function(){return Ve},vtC:function(){return Ne},vwp:function(){return le},w3H:function(){return Vt},wUP:function(){return _},wYB:function(){return Rt},wYn:function(){return Qe},we_:function(){return rt},wm:function(){return O},wx7:function(){return sn},x12:function(){return M},xJR:function(){return pt},xQA:function(){return Ct},xnO:function(){return E},y7R:function(){return q},yQU:function(){return Ze},yj2:function(){return D},zbQ:function(){return kt},zvY:function(){return I},zws:function(){return w}});const r="Abs",s="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",x="AvgPoolGrad",y="AvgPool3D",k="AvgPool3DGrad",v="BatchMatMul",w="BatchToSpaceND",I="Bincount",S="BitwiseAnd",C="BroadcastTo",N="BroadcastArgs",T="Cast",$="Ceil",E="ClipByValue",A="Complex",D="ComplexAbs",R="Concat",F="Conv2D",_="Conv2DBackpropFilter",O="Conv2DBackpropInput",M="Conv3D",B="Conv3DBackpropFilterV2",W="Conv3DBackpropInputV2",L="Cos",U="Cosh",z="Cumprod",P="Cumsum",V="CropAndResize",H="DenseBincount",G="DepthToSpace",j="DepthwiseConv2dNative",X="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",Q="Dilation2D",Y="Dilation2DBackpropInput",Z="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",se="Erf",ae="Equal",ie="Exp",oe="ExpandDims",ue="Expm1",le="FFT",ce="Fill",he="FlipLeftRight",de="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",be="Greater",xe="GreaterEqual",ye="Identity",ke="IFFT",ve="Imag",we="IsFinite",Ie="IsInf",Se="IsNan",Ce="LeakyRelu",Ne="Less",Te="LessEqual",$e="LinSpace",Ee="Log",Ae="Log1p",De="LogicalAnd",Re="LogicalNot",Fe="LogicalOr",_e="LogSoftmax",Oe="LRN",Me="LRNGrad",Be="Max",We="Maximum",Le="MaxPool",Ue="MaxPoolGrad",ze="MaxPool3D",Pe="MaxPool3DGrad",Ve="MaxPoolWithArgmax",He="Mean",Ge="Min",je="Minimum",Xe="MirrorPad",qe="Mod",Ke="Multinomial",Qe="Multiply",Ye="Neg",Ze="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",st="Pack",at="PadV2",it="Pow",ot="Prelu",ut="Prod",lt="RaggedGather",ct="RaggedRange",ht="RaggedTensorToTensor",dt="Range",pt="Real",ft="Reciprocal",mt="Relu",gt="Reshape",bt="ResizeNearestNeighbor",xt="ResizeNearestNeighborGrad",yt="ResizeBilinear",kt="ResizeBilinearGrad",vt="Relu6",wt="Reverse",It="Round",St="Rsqrt",Ct="ScatterNd",Nt="TensorScatterUpdate",Tt="SearchSorted",$t="Select",Et="Selu",At="Slice",Dt="Sin",Rt="Sinh",Ft="Sign",_t="Sigmoid",Ot="Softplus",Mt="Sqrt",Bt="Sum",Wt="SpaceToBatchND",Lt="SplitV",Ut="Softmax",zt="SparseFillEmptyRows",Pt="SparseReshape",Vt="SparseSegmentMean",Ht="SparseSegmentSum",Gt="SparseToDense",jt="SquaredDifference",Xt="Square",qt="StaticRegexReplace",Kt="StridedSlice",Qt="StringNGrams",Yt="StringSplit",Zt="StringToHashBucketFast",Jt="Sub",en="Tan",tn="Tanh",nn="Tile",rn="TopK",sn="Transform",an="Transpose",on="Unique",un="Unpack",ln="UnsortedSegmentSum",cn="ZerosLike",hn="Step",dn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},26151:function(e,t,n){"use strict";n.d(t,{Li:function(){return d},pI:function(){return u},tr:function(){return c},uk:function(){return l},wC:function(){return h}});var r=n(22885),s=n(55938),a=n(64706);const i=(0,s.R)("kernelRegistry",(()=>new Map)),o=(0,s.R)("gradRegistry",(()=>new Map));function u(e,t){const n=p(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,r=p(t,n);i.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function d(e){const{kernelName:t}=e;o.has(t)&&(0,r.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){return`${t}_${e}`}},64706:function(e,t,n){"use strict";n.d(t,{Z:function(){return s},c:function(){return a}});var r=n(22885);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},96235:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(s.yj2,e)}{const e={x:t};return r.BV.runKernel(s.SYM,e)}}})},56407:function(e,t,n){"use strict";n.d(t,{I:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.mm_,u)}})},90781:function(e,t,n){"use strict";n.d(t,{$:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.oT6,i,o)}})},92998:function(e,t,n){"use strict";n.d(t,{Y:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.IKK,i,o)}})},40047:function(e,t,n){"use strict";n.d(t,{N:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(s.sJF,n,i)}})},15176:function(e,t,n){"use strict";n.d(t,{w:function(){return h}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(62271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const d=(0,a._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=d,f=!1;3===d.rank&&(f=!0,p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),u.m("avgPool",l,h);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let b=r.BV.runKernel(s.JhU,m,g);return b=(0,o.p)(b,d.dtype),f?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},83591:function(e,t,n){"use strict";n.d(t,{LJ:function(){return c},Q3:function(){return l},Vh:function(){return a},YB:function(){return s},kz:function(){return i},lB:function(){return u},rv:function(){return o},sY:function(){return h}});var r=n(20569);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function i(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},40094:function(e,t,n){"use strict";n.d(t,{t:function(){return u}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),d=(0,a._1)(t,"mean","batchNorm"),p=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.hu(d.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||d.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||d.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),b={x:g,scale:f,offset:m,mean:d,variance:p},x={varianceEpsilon:c},y=r.BV.runKernel(s.sHE,b,x);return(0,o.X)(y,h.shape)}})},68247:function(e,t,n){"use strict";n.d(t,{U:function(){return c}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(8723),u=n(2668),l=n(4968);const c=(0,u.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const u=n.shape;if((0,i.Mu)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const c=n.shape,h=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])h[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);if(0===h.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const d={x:n},p={reps:h};return r.BV.runKernel(s.n9L,d,p)}})},72200:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:function(){return a},getBroadcastDims:function(){return r},getReductionAxes:function(){return s}})},62271:function(e,t,n){"use strict";n.d(t,{p:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.BV.runKernel(s.RFZ,o,u)}})},42279:function(e,t,n){"use strict";n.d(t,{i:function(){return u}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(14006);const u=(0,n(2668).op)({clipByValue_:function(e,t,n){const u=(0,a._1)(e,"x","clipByValue");if(i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.h)(u.shape,t,u.dtype);const l={x:u},c={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(s.xnO,l,c)}})},8723:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJz,t)}})},61661:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.BV.runKernel(s.Zz9,u)}})},46884:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(s.Eh3,u,l)}})},11355:function(e,t,n){"use strict";n.d(t,{P:function(){return l}});var r=n(43740),s=n(20569),a=n(64794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const d=(0,r._1)(e,"x","conv1d"),p=(0,r._1)(t,"filter","conv1d");let f=d,m=!1;2===d.rank&&(m=!0,f=(0,u.X)(d,[1,d.shape[0],d.shape[1]])),s.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.hu(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),i.m("conv1d",o,h),s.hu(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),s.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.hu(i.U3(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.hu(i.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),b=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),x=[1,n],y=[1,c],k=(0,a.T)(b,g,x,o,"NHWC",y,h);return m?(0,u.X)(k,[k.shape[2],k.shape[3]]):(0,u.X)(k,[k.shape[0],k.shape[2],k.shape[3]])}})},64794:function(e,t,n){"use strict";n.d(t,{T:function(){return c}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],d){const p=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",u,d);const b="NHWC"===c?m.shape[3]:m.shape[1];i.hu(b===f.shape[2],(()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu(o.U3(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.hu(o.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const x={x:m,filter:f},y={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d},k=r.BV.runKernel(s.mhS,x,y);return g?(0,l.X)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},36013:function(e,t,n){"use strict";n.d(t,{p:function(){return l}});var r=n(50196),s=n(29121),a=n(20569),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,l,c="NHWC",h){let d=e;3===e.rank&&(d=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?d.shape[3]:d.shape[1],m="NHWC"===c?p.shape[3]:p.shape[1];a.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.m("conv2dDerFilter",l,h);const g={x:d,dy:p},b={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,filterShape:n};return r.BV.runKernel(s.wUP,g,b)}})},39832:function(e,t,n){"use strict";n.d(t,{_:function(){return l}});var r=n(50196),s=n(29121),a=n(20569),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,c="NHWC",h){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),a.hu(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?d[3]:d[1],g="NHWC"===c?p.shape[3]:p.shape[1];a.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.m("conv2dDerInput",l,h);const b={dy:p,filter:n},x={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,inputShape:d},y=r.BV.runKernel(s.wm,b,x);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},71405:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(43740),s=n(39832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,s._)(n,u,l,a,i,"NHWC",o)}})},97594:function(e,t,n){"use strict";n.d(t,{_:function(){return u}});var r=n(50196),s=n(29121),a=n(20569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const d=l[4],p=c.shape[4];a.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(d===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[3]}.`)),a.hu(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=r.BV.runKernel(s.ik2,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:function(e,t,n){"use strict";n.d(t,{I0:function(){return f},Ix:function(){return o},Rf:function(){return s},U3:function(){return g},Xw:function(){return a},aO:function(){return l},jT:function(){return m},jw:function(){return u},m:function(){return x},pl:function(){return i},sl:function(){return b}});var r=n(20569);function s(e,t,n,r,s="NHWC",a){return o(e,[...t,e[3]],n,a,r,null,null,b(s))}function a(e,t,n,r,s,a,i="channelsLast"){const[u,l]=c(t);let h;if("channelsLast"===i)h=[u,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[u,l,e[1],e[1]]}return o(e,h,n,r,s,a,!1,i)}function i(e,t,n,r,s,a,i="NDHWC"){const[o,l,c]=h(t);let d,p;if("NDHWC"===i)p="channelsLast",d=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",d=[o,l,c,e[1],e[1]]}return u(e,d,n,r,s,!1,p,a)}function o(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,h,f]=e}const[g,b,,x]=t,[y,k]=c(n),[v,w]=c(r),I=d(g,v),S=d(b,w),{padInfo:C,outHeight:N,outWidth:T}=function(e,t,n,r,s,a,i,o,u){let c,h,d;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=l(e,t,n));const a=e[0],i=e[1],o=p((a-t+2*r)/n+1,s),u=p((i-t+2*r)/n+1,s);return[o,u]}([t,n],a,r,e,o);h=s[0],d=s[1]}else if("same"===e){h=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(h-1)*r+a-t),o=Math.max(0,(d-1)*s+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-a+l+f)/r+1,o),d=p((n-i+m+g)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(s,h,f,y,k,I,S,a,o),$=i?x*m:x;let E;return"channelsFirst"===o?E=[u,$,N,T]:"channelsLast"===o&&(E=[u,N,T,$]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:N,outWidth:T,outChannels:$,padInfo:C,strideHeight:y,strideWidth:k,filterHeight:g,filterWidth:b,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:v,dilationWidth:w,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,c,f,m]=e}const[b,x,y,,k]=t,[v,w,I]=h(n),[S,C,N]=h(r),T=d(b,S),$=d(x,C),E=d(y,N),{padInfo:A,outDepth:D,outHeight:R,outWidth:F}=function(e,t,n,r,s,a,i,o,u,c,h){let d,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const b=function(e,t,n,r,s,a){null==s&&(s=l(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(i[o]=p((e[o]-t[o]+2*s)/r[o]+1,a));return i}([t,n,r,1],[o,u,c],1,[s,a,i],e,h);f=b[0],m=b[1],g=b[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const e=(f-1)*s+o-t,l=(m-1)*a+u-n,h=(g-1)*i+c-r,p=Math.floor(e/2),b=e-p,x=Math.floor(l/2),y=l-x,k=Math.floor(h/2);d={top:x,bottom:y,left:k,right:h-k,front:p,back:b,type:"SAME"}}}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,v,w,I,T,$,E,o),_=a?k*g:k;let O;return"channelsFirst"===i?O=[u,_,D,R,F]:"channelsLast"===i&&(O=[u,D,R,F,_]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:F,outChannels:_,padInfo:A,strideDepth:v,strideHeight:w,strideWidth:I,filterDepth:b,filterHeight:x,filterWidth:y,effectiveFilterDepth:T,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:C,dilationWidth:N,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,r=1){const s=d(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"===typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function b(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function x(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},64718:function(e,t,n){"use strict";n.d(t,{B:function(){return c}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",h=[1,1],d){const p=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const b="NHWC"===c?m.shape[3]:m.shape[1];i.hu(b===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${b}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",u,d);const x={x:m,filter:f},y={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d},k=r.BV.runKernel(s.cie,x,y);return g?(0,l.X)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},88098:function(e,t,n){"use strict";n.d(t,{z:function(){return o}});var r=n(50196),s=n(29121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:c,dy:h},p={strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return r.BV.runKernel(s.sL$,d,p)}})},54375:function(e,t,n){"use strict";n.d(t,{v:function(){return o}});var r=n(50196),s=n(29121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:c,filter:n},p={strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=r.BV.runKernel(s.y7R,d,p);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},41274:function(e,t,n){"use strict";n.d(t,{h:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(s.oHH,l,{})}})},83233:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return r.BV.runKernel(s.SX0,t)}})},26477:function(e,t,n){"use strict";n.d(t,{D:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.hdR,l)}})},44842:function(e,t,n){"use strict";n.d(t,{Q:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return r.BV.runKernel(s.NEP,t)}})},81300:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.BV.runKernel(s.YFo,o,u)}})},14006:function(e,t,n){"use strict";n.d(t,{h:function(){return i}});var r=n(50196),s=n(29121),a=n(20569);function i(e,t,n){(0,a.Mu)(e);const i={shape:e,value:t,dtype:n=n||(0,a.D2)(t)};return r.BV.runKernel(s.deh,{},i)}},26943:function(e,t,n){"use strict";n.d(t,{G:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return r.BV.runKernel(s.OR,t)}})},9165:function(e,t,n){"use strict";n.d(t,{q:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.jeX,u)}})},24926:function(e,t,n){"use strict";n.d(t,{I:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.BV.runKernel(s.qi_,o,u)}})},20636:function(e,t,n){"use strict";n.d(t,{p:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.iZT,l)}})},17630:function(e,t,n){"use strict";n.d(t,{b:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.Acj,l)}})},64386:function(e,t,n){"use strict";n.d(t,{a:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return r.BV.runKernel(s.J_u,t)}})},13305:function(e,t,n){"use strict";n.d(t,{I:function(){return l}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,d={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s._Yw,d,p);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},95098:function(e,t,n){"use strict";n.d(t,{j:function(){return l}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,d={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s.dpD,d,p);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},99133:function(e,t,n){"use strict";n.d(t,{h:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(s.J$2,n,i)}})},86573:function(e,t,n){"use strict";n.d(t,{d:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.vtC,l)}})},50624:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.CAk,l)}})},82597:function(e,t,n){"use strict";n.d(t,{c:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return r.BV.runKernel(s.ZbH,t)}})},17474:function(e,t,n){"use strict";n.d(t,{K:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return r.BV.runKernel(s.kU,t)}})},31510:function(e,t,n){"use strict";n.d(t,{C:function(){return p}});var r=n(30633),s=n(43740),a=n(62271),i=n(44842),o=n(82597),u=n(83307),l=n(24841),c=n(2668),h=n(70827),d=n(15475);const p=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),s=(0,h.l)(e,r),c=(0,h.l)((0,a.p)(s,"float32"),(0,o.c)((0,d.S)((0,i.Q)(s),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[r]=n,s=(0,i.Q)(r);return(0,h.l)(e,(0,l.d)((0,d.S)(e,t,!0),s))}}}));return c(n)}})},11391:function(e,t,n){"use strict";n.d(t,{l:function(){return f}});var r=n(43740),s=n(20569),a=n(56407),i=n(83591),o=n(44842),u=n(82597),l=n(83307),c=n(2668),h=n(4968),d=n(70827),p=n(15475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,s.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,d.l)(c,m),b=(0,o.Q)(g),x=(0,p.S)(b,f),y=(0,u.c)(x),k=(0,a.I)((0,h.X)(m,y.shape),y);if(n){const e=(0,i.rv)(k.shape,f);return(0,h.X)(k,e)}return k}})},2856:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(72200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(s.PYm,u)}})},28687:function(e,t,n){"use strict";n.d(t,{O:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return r.BV.runKernel(s.XLW,c,h)}})},83307:function(e,t,n){"use strict";n.d(t,{F:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(s.YoZ,i,o)}})},21174:function(e,t,n){"use strict";n.d(t,{_:function(){return c}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let d=h,p=!1;3===h.rank&&(p=!0,d=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===d.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",u,c);const f={x:d},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(s.mTV,f,m);return p?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},80632:function(e,t,n){"use strict";n.d(t,{g:function(){return l}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200),u=n(62271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.BMI,c)}})},75130:function(e,t,n){"use strict";n.d(t,{J:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(s.q2K,i,o)}})},25735:function(e,t,n){"use strict";n.d(t,{V:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(s.c17,i,o)}})},24513:function(e,t,n){"use strict";n.d(t,{L:function(){return l}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200),u=n(62271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.q8u,c)}})},24841:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.wYn,u)}})},17370:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return r.BV.runKernel(s.kuV,t)}})},3561:function(e,t,n){"use strict";n.d(t,{K:function(){return b}});var r=n(43740),s=n(20569),a=n(96235),i=n(83591),o=n(83307),u=n(25735),l=n(2668),c=n(33453),h=n(4968),d=n(99494),p=n(13261),f=n(50248),m=n(15475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,p._)((0,m.S)((0,c.s)((0,a.W)(e),(0,d.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const b=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,s.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},16500:function(e,t,n){"use strict";n.d(t,{Q:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.yQU,l)}})},76708:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,a._1)(e,"indices","oneHot","int32")},l={dtype:o,depth:t,onValue:n,offValue:i};return r.BV.runKernel(s.we_,u,l)}})},44917:function(e,t,n){"use strict";n.d(t,{i:function(){return o}});var r=n(50196),s=n(20569),a=n(61661),i=n(59640);function o(e,t="float32"){if((0,s.Mu)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,s.p8)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:function(e,t,n){"use strict";n.d(t,{J:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return r.BV.runKernel(s.qWM,t)}})},2668:function(e,t,n){"use strict";n.d(t,{op:function(){return a}});var r=n(50196),s=n(20569);function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{r.BV.startScope(n);try{const t=a(...e);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},39682:function(e,t,n){"use strict";n.d(t,{v:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.BV.runKernel(s.lyA,u,o)}})},33453:function(e,t,n){"use strict";n.d(t,{s:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.pe_,u)}})},98151:function(e,t,n){"use strict";n.d(t,{A:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return r.BV.runKernel(s.o0g,n)}})},60766:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return r.BV.runKernel(s.xJR,t)}})},7409:function(e,t,n){"use strict";n.d(t,{U:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return r.BV.runKernel(s.qkr,t)}})},83582:function(e,t,n){"use strict";n.d(t,{b:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return r.BV.runKernel(s.SbG,t)}})},4968:function(e,t,n){"use strict";n.d(t,{X:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(s.HZH,n,i)}})},57486:function(e,t,n){"use strict";n.d(t,{G:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(s.mKl,n,i)}})},97809:function(e,t,n){"use strict";n.d(t,{N:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return r.BV.runKernel(s.e07,t)}})},99494:function(e,t,n){"use strict";n.d(t,{i:function(){return a}});var r=n(23418),s=n(57852);function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},55503:function(e,t,n){"use strict";n.d(t,{U:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return r.BV.runKernel(s.oFR,t)}})},43179:function(e,t,n){"use strict";n.d(t,{$:function(){return s},y:function(){return r}});const r=1.7580993408473768,s=1.0507009873554805},68678:function(e,t,n){"use strict";n.d(t,{U:function(){return l}});var r=n(43740),s=n(20569),a=n(64794),i=n(64718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const d=(0,r._1)(e,"x","separableConv2d"),p=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=d,g=!1;if(3===d.rank&&(g=!0,m=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),s.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),s.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const b=p.shape[2],x=p.shape[3];s.hu(f.shape[2]===b*x,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*x}, but got ${f.shape[2]}.`));const y=(0,i.B)(m,p,o,l,h,c),k=(0,a.T)(y,f,1,"valid",h);return g?(0,u.X)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},30625:function(e,t,n){"use strict";n.d(t,{X:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(s.a5O,t)}})},22676:function(e,t,n){"use strict";n.d(t,{t:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.BV.runKernel(s.p2w,o,u)}})},37650:function(e,t,n){"use strict";n.r(t),n.d(t,{assertParamsValid:function(){return s},computeFlatOffset:function(){return b},computeOutShape:function(){return i},getNormalizedAxes:function(){return c},isSliceContinous:function(){return g},maskToAxes:function(){return a},parseSliceParams:function(){return x},sliceInfo:function(){return y},startForAxis:function(){return f},startIndicesWithElidedDims:function(){return h},stopForAxis:function(){return m},stopIndicesWithElidedDims:function(){return d},stridesForAxis:function(){return p},stridesWithElidedDims:function(){return o}});var r=n(20569);function s(e,t,n){const s=e.shape.length;r.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function o(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,s,a,i,u,l){const c=e.length;let g=new Array(c),b=new Array(c),x=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=h(i,l,c,r,e),b=d(u,l,c,s,e),x=o(a,l,c,e)}else for(let o=0;o<c;o++)g[o]=f(i,r,a,e,o,l),b[o]=m(u,s,a,e,o,l),x[o]=p(a,o,l);return{begin:g,end:b,strides:x}}function h(e,t,n,r,s){const a=[...s],i=l(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=u(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function d(e,t,n,s,a){const i=[...a],o=l(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=u(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const e=a[u];i[u]<0&&(i[u]+=e),i[u]=r.uZ(0,i[u],a[u])}return i}function p(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,s,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[a];return o<0&&(o+=l),o=r.uZ(0,o,l-1),o}function m(e,t,n,s,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[a];return o<0&&(o+=l),o=u>0?r.uZ(0,o,l):r.uZ(-1,o,l-1),o}function g(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function x(e,t,n){let s;const a=e.shape.length;let i;return s="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function y(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let x=0;x<h.dims;x++)c&&0!==(1<<x&o)&&h.numAddAxisAfterEllipsis++,1<<x&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let x=0;x<e.length;++x){if(0===d.strides[x])throw Error(`strides[${x}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<x),n=e[x];if(-1===n){g.push(t?1:-1);continue}const r=[d.beginMask&1<<x,d.endMask&1<<x],s=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(t&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[x];const a=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(t){const e=d.begin[x]<0?n+d.begin[x]:d.begin[x];if(d.begin[x]=e,d.end[x]=d.begin[x]+1,e<0||e>=n)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=k(d.begin[x],0,d.strides[x],n,r,s),d.end[x]=k(d.end[x],1,d.strides[x],n,r,s);const e=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;p=p&&e,f=f&&(0===x&&1===d.strides[x]||e)}else p=p&&1===d.strides[x]&&a,f=f&&(0===x&&1===d.strides[x]||a);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[x]-d.begin[x],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=d.strides[x]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==d.strides[x]<0?0:Math.trunc(i/d.strides[x])+(i%d.strides[x]!==0?1:0),g.push(e)}else g.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const e=d.finalShapeGatherIndices[x];e>=0?b.push(g[e]):-2===e&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function k(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},80682:function(e,t,n){"use strict";n.d(t,{X:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(s.Gcp,i,o)}})},3694:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return r.BV.runKernel(s.MRv,t)}})},7020:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var r=n(50196),s=n(29121),a=n(20569);const i=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.vwp,t)}})},88447:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(50196),s=n(29121),a=n(20569);const i=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.Qg5,t)}})},84415:function(e,t,n){"use strict";n.d(t,{w:function(){return f}});var r=n(61661),s=n(46884),a=n(64386),i=n(24841),o=n(2668),u=n(60766),l=n(4968),c=n(57486),h=n(99494),d=n(22676),p=n(88447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,p.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),b=(0,c.G)((0,d.t)(m,[0,1],[n,t-2]),1),x=(0,i.d)((0,c.G)((0,d.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),y=(0,s.z)([m,b],1),k=(0,s.z)([g,x],1),v=(0,l.X)((0,r.P)(y,k),[f[0],f[1]]);o=(0,p.S)(v)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},13710:function(e,t,n){"use strict";n.d(t,{Q:function(){return m}});var r=n(20569),s=n(61661),a=n(46884),i=n(64386),o=n(2668),u=n(60766),l=n(4968),c=n(22676),h=n(28644),d=n(59640),p=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,m=(0,c.t)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,d.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),b=(0,l.X)((0,s.P)(m,g),[o,n]),x=(0,f.k)(b),y=Math.floor(n/2)+1,k=(0,u.k)(x),v=(0,i.a)(x),w=(0,h.V)(k,[y,n-y],k.shape.length-1),I=(0,h.V)(v,[y,n-y],v.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=y,(0,l.X)((0,s.P)(w[0],I[0]),S)}})},28644:function(e,t,n){"use strict";n.d(t,{V:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(s.L8s,i,o)}})},13261:function(e,t,n){"use strict";n.d(t,{_:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return r.BV.runKernel(s.FKq,t)}})},50248:function(e,t,n){"use strict";n.d(t,{h:function(){return a}});var r=n(50196),s=n(43740);const a=(0,n(2668).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},15265:function(e,t,n){"use strict";n.d(t,{$:function(){return u}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740),o=n(72200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s._tC,l,{})}})},79590:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(43740),s=n(20569),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze","string_or_numeric");return(0,i.X)(n,(0,s.bp)(n.shape,t).newShape)}})},82991:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.BV.runKernel(s.QiL,o,u)}})},71901:function(e,t,n){"use strict";n.d(t,{N:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(s.h8e,n,i)}})},70827:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(50196),s=n(29121),a=n(80747),i=n(43740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.Tr8,u)}})},15475:function(e,t,n){"use strict";n.d(t,{S:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(62271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(s.GBy,u,l)}})},21869:function(e,t,n){"use strict";n.d(t,{A:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return r.BV.runKernel(s.MIZ,t)}})},57852:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(50196),s=n(71221),a=n(20569),i=n(23418);function o(e,t,n,o){if(null==o)o=(0,a.D2)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.$F)(e)||(0,s.Oq)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return r.BV.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,a.NA)(t.slice(s));(0,a.hu)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),r.BV.makeTensor(e,t,o)}},47501:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.BV.runKernel(s.n9L,o,u)}})},89065:function(e,t,n){"use strict";n.d(t,{p:function(){return p}});var r=n(50196),s=n(4368),a=n(29121),i=n(43740),o=n(20569),u=n(61661),l=n(64386),c=n(17370),h=n(2668),d=n(60766);const p=(0,h.op)({transpose_:function(e,t,n){const h=(0,i._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.hu(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const p={x:h},f={perm:t};return"complex64"===h.dtype?(0,s.lu)((()=>{let e=(0,d.k)(h),t=(0,l.a)(h);return e=r.BV.runKernel(a.G3Y,{x:e},f),t=r.BV.runKernel(a.G3Y,{x:t},f),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):r.BV.runKernel(a.G3Y,p,f)}})},24136:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(50196),s=n(29121),a=n(43740),i=n(20569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.BV.runKernel(s.ToN,o,u)}})},95912:function(e,t,n){"use strict";n.d(t,{a:function(){return u}});var r=n(50196),s=n(29121),a=n(43740),i=n(68247),o=n(72200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),d={condition:(0,i.U)(c,h),t:(0,i.U)(u,h),e:(0,i.U)(l,h)};return r.BV.runKernel(s.PhF,d)}})},59640:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(50196),s=n(20569),a=n(61661);function i(e,t="float32"){if((0,s.Mu)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,s.wT)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:function(e,t,n){"use strict";n.d(t,{P:function(){return i}});var r=n(50196),s=n(29121),a=n(43740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return r.BV.runKernel(s.RuY,t)}})},59742:function(e,t,n){"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:function(){return r}})},40974:function(e,t,n){"use strict";n.d(t,{es:function(){return x},YD:function(){return h},_w:function(){return k},t3:function(){return y},FZ:function(){return b},Vp:function(){return g},Vi:function(){return m}});var r=n(55938),s=n(20569);function a(e,t,n,r){const a=(0,s.e3)(t),o=function(e,t,n,r){const a=(0,s.NA)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let s=0;s<a/o;s++){const e=s*o;for(let t=0;t<o;t++)u[t]=Math.max(u[t],i(h[e+t],0,n).length)}return u}(e,t,n,a),c=t.length,h=u(e,t,n,a,o),d=["Tensor"];return r&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${c}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(h.map((e=>"    "+e)).join("\n")),d.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,s.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,s.oj)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,s,a=!0){const c="complex64"===n?2:1,h=t[0],d=t.length;if(0===d){if("complex64"===n){return[i(l(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===d){if(h>20){const t=3*c;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(r=l(r),a=l(a)),["["+r.map(((e,t)=>i(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,s[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,s[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),p,n,f,s,!1))}g.push("...");for(let t=h-3;t<h;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),p,n,f,s,t===h-1))}}else for(let i=0;i<h;i++){const t=i*m,r=t+m;g.push(...u(e.slice(t,r),p,n,f,s,i===h-1))}const b=2===d?",":"";g[0]="["+(h>0?g[0]+b:"");for(let i=1;i<g.length-1;i++)g[i]=" "+g[i]+b;let x=",\n";for(let i=2;i<d;i++)x+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":x),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(23418);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.NA(e),null!=n){const e=n.length;s.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(t,this.size),this.strides=(0,s.e3)(e)}set(e,...t){0===t.length&&(t=[0]),s.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,f=null;function m(e){d=e}function g(e){p=e}function b(e){f=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.NA(e),this.strides=(0,s.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),d().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}function y(){return(0,r.R)("Tensor",(()=>x))}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),y();class k extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(k,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},80747:function(e,t,n){"use strict";n.r(t),n.d(t,{assertTypesMatch:function(){return o},getTensorsInContainer:function(){return l},isTensorInList:function(){return u},makeTypesMatch:function(){return i}});var r=n(40974),s=n(71221),a=n(20569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),c(e,t,n))}}},43740:function(e,t,n){"use strict";n.d(t,{C:function(){return l},_1:function(){return d},sI:function(){return p}});var r=n(50196),s=n(22885),a=n(40974),i=n(71221),o=n(23418),u=n(20569);function l(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oq)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.$F)(e))return[e.buffer.size/(null==t?4:(0,u.bT)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,u.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,u.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,u.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)c(e[s],r,n.concat(s))}function h(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,s="numeric"){if(e instanceof a.es)return h(s,e.dtype,t,n),e;let i=(0,u.D2)(e);if("string"!==i&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),h(s,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=l(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const d="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.BV.makeTensor(d,c,i)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>d(e,`${t}[${s}]`,n,r)))}},71221:function(e,t,n){"use strict";var r,s,a,i,o;n.d(t,{$F:function(){return d},Oq:function(){return h},x8:function(){return l},z4:function(){return c}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:s,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}function h(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function d(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},23418:function(e,t,n){"use strict";n.r(t),n.d(t,{arraysEqual:function(){return a.cO},arraysEqualWithNull:function(){return a.DK},assert:function(){return a.hu},assertNonNegativeIntegerDimensions:function(){return a.Mu},assertNonNull:function(){return a.Cq},assertShapesMatch:function(){return a.k5},bytesFromStringArray:function(){return a.Ub},bytesPerElement:function(){return a.bT},checkConversionForErrors:function(){return a.D5},clamp:function(){return a.uZ},computeStrides:function(){return a.e3},convertBackendValuesAndArrayBuffer:function(){return a.KS},createScalarValue:function(){return k},createShuffledIndices:function(){return a.U$},decodeString:function(){return C},distSquared:function(){return a.E7},encodeString:function(){return S},fetch:function(){return I},fingerPrint64:function(){return y},flatten:function(){return T},getArrayFromDType:function(){return a.rQ},getTypedArrayFromDType:function(){return a.WP},hasEncodingLoss:function(){return a.QB},hexToLong:function(){return u},indexToLoc:function(){return a.NE},inferDtype:function(){return a.D2},inferFromImplicitShape:function(){return a.JZ},isBoolean:function(){return a.jn},isFunction:function(){return a.mf},isInt:function(){return a.GN},isNumber:function(){return a.hj},isPromise:function(){return a.tI},isScalarShape:function(){return a.xH},isString:function(){return a.HD},isTypedArray:function(){return N},isValidDtype:function(){return a.LP},locToIndex:function(){return a.qy},makeOnesTypedArray:function(){return a.p8},makeZerosNestedTypedArray:function(){return a.l6},makeZerosTypedArray:function(){return a.wT},nearestDivisor:function(){return a.jP},nearestLargerEven:function(){return a.nY},now:function(){return w},parseAxisParam:function(){return a.EC},randUniform:function(){return a.bj},repeatedTry:function(){return a.WD},rightPad:function(){return a.oj},shuffle:function(){return a.TV},shuffleCombo:function(){return a.d7},sizeFromShape:function(){return a.NA},sizeToSquarishShape:function(){return a.YP},squeezeShape:function(){return a.bp},sum:function(){return a.Sm},swap:function(){return a.LF},tanh:function(){return a.AE},toNestedArray:function(){return a.GX},toTypedArray:function(){return v}});var r=n(22885),s=n(59742),a=n(20569),i=n(43720);const o=n.n(i)()||i;function u(e){return o.fromString(e,!0,16)}const l=u("c3a5c85c97cb3127"),c=u("b492b66fbe98f273"),h=u("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function x(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=g(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(g(s,44)),[s.add(r),a.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function y(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=h.add(2*t),r=f(e,0).add(h),s=f(e,t-8);return b(g(s,37).mul(n).add(r),g(r,25).add(s).mul(n),n)}if(t>=4){const n=h.add(2*t);return b(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(h.mul(n).xor(l.mul(r))).mul(h)}return h}(e,t):function(e,t=e.length){const n=h.add(2*t),r=f(e,0).mul(c),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h);return b(g(r.add(s),43).add(g(a,30)).add(i),r.add(g(s.add(h),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=h.add(2*t),r=f(e,0).mul(h),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h),o=g(r.add(s),43).add(g(a,30)).add(i),u=b(o,r.add(g(s.add(h),18)).add(a),n),l=f(e,16).mul(n),c=f(e,24),d=o.add(f(e,t-32)).mul(n),p=u.add(f(e,t-24)).mul(n);return b(g(l.add(c),43).add(g(d,30)).add(p),l.add(g(c.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(c).add(113),a=d(s.mul(h).add(113)).mul(h),i=[o.UZERO,o.UZERO],u=[o.UZERO,o.UZERO];r=r.mul(h).add(f(e,0));let p=0;const y=64*(t-1>>6),k=y+(t-1&63)-63;do{r=g(r.add(s).add(i[0]).add(f(e,p+8)),37).mul(c),s=g(s.add(i[1]).add(f(e,p+48)),42).mul(c),r=r.xor(u[1]),s=s.add(i[0]).add(f(e,p+40)),a=g(a.add(u[0]),33).mul(c),i=x(e,p,i[1].mul(c),r.add(u[0])),u=x(e,p+32,a.add(u[1]),s.add(f(e,p+16))),[a,r]=[r,a],p+=64}while(p!==y);const v=c.add(a.and(255).shl(1));return p=k,u[0]=u[0].add(t-1&63),i[0]=i[0].add(u[0]),u[0]=u[0].add(i[0]),r=g(r.add(s).add(i[0]).add(f(e,p+8)),37).mul(v),s=g(s.add(i[1]).add(f(e,p+48)),42).mul(v),r=r.xor(u[1].mul(9)),s=s.add(i[0].mul(9).add(f(e,p+40))),a=g(a.add(u[0]),33).mul(v),i=x(e,p,i[1].mul(v),r.add(u[0])),u=x(e,p+32,a.add(u[1]),s.add(f(e,p+16))),[a,r]=[r,a],b(b(i[0],u[0],v).add(d(s).mul(l)).add(a),b(i[1],u[1],v).add(r),v)}function k(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=T(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function I(e,t){return(0,r.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function C(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}function N(e){return null!=(0,r.OB)().platform.isTypedArray?(0,r.OB)().platform.isTypedArray(e):(0,s.j)(e)}function T(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||a.tI(e)||null==e||N(e)&&n)t.push(e);else if(Array.isArray(e)||N(e))for(let r=0;r<e.length;++r)T(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)T(e[s],t,n)}return t}},20569:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function h(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function d(e,t,n=""){h(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1===0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function k(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const u=t(i);null!=n&&i>=n?a():null!=r?r(o,u):setTimeout(o,u)};o()}))}function S(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function C(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:C(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function T(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _(e){return"string"===typeof e||e instanceof String}function O(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":_(e)?"string":O(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function z(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=z(e+t*o,i,n,r)}return s}function P(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return z(0,e,t,n)}function V(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function H(e,t){const n=G(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return P(e,new Float32Array(n));if("int32"===t)return P(e,new Int32Array(n));if("bool"===t)return P(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{AE:function(){return y},Cq:function(){return p},D2:function(){return B},D5:function(){return E},DK:function(){return g},E7:function(){return c},EC:function(){return C},GN:function(){return x},GX:function(){return P},HD:function(){return _},JZ:function(){return S},KS:function(){return V},LF:function(){return o},LP:function(){return A},Mu:function(){return X},NA:function(){return f},NE:function(){return K},QB:function(){return D},Sm:function(){return u},TV:function(){return r},U$:function(){return v},Ub:function(){return F},WD:function(){return I},WP:function(){return T},YP:function(){return k},bT:function(){return R},bj:function(){return l},bp:function(){return N},cO:function(){return b},d7:function(){return s},e3:function(){return U},hj:function(){return M},hu:function(){return h},jP:function(){return L},jn:function(){return O},k5:function(){return d},l6:function(){return j},mf:function(){return W},nY:function(){return i},oj:function(){return w},p8:function(){return H},qy:function(){return q},rQ:function(){return $},tI:function(){return Q},uZ:function(){return a},wT:function(){return G},xH:function(){return m}})},28819:function(e,t,n){"use strict";n.d(t,{GD:function(){return v},Gc:function(){return b},aI:function(){return I}});var r=n(77124),s=n(39840),a=n(2931);class i extends r.m7h.Serializable{getConfig(){return{}}}class o extends i{apply(e,t=1){return s.py(e,t)}}o.className="elu",r.m7h.registerClass(o);class u extends i{apply(e){return r.U8D(e)}}u.className="selu",r.m7h.registerClass(u);class l extends i{apply(e){return r.UYe(e)}}l.className="relu",r.m7h.registerClass(l);class c extends i{apply(e){return(0,r.lub)((()=>r.LTh(6,r.UYe(e))))}}c.className="relu6",r.m7h.registerClass(c);class h extends i{apply(e){return e}}h.className="linear",r.m7h.registerClass(h);class d extends i{apply(e){return r.XD2(e)}}d.className="sigmoid",r.m7h.registerClass(d);class p extends i{apply(e){return s.HX(e)}}p.className="hardSigmoid",r.m7h.registerClass(p);class f extends i{apply(e){return r.Wvh(e)}}f.className="softplus",r.m7h.registerClass(f);class m extends i{apply(e){return s.O(e)}}m.className="softsign",r.m7h.registerClass(m);class g extends i{apply(e){return r.AEp(e)}}g.className="tanh",r.m7h.registerClass(g);class b extends i{apply(e,t=-1){return r.XAC(e,t)}}b.className="softmax",r.m7h.registerClass(b);class x extends i{apply(e,t=-1){return r.CmS(e,t)}}x.className="logSoftmax",r.m7h.registerClass(x);class y extends i{apply(e,t=1){return(0,r.lub)((()=>r.dC7(r.XD2(r.dC7(e,t)),e)))}}y.className="swish",r.m7h.registerClass(y);class k extends i{apply(e){return(0,r.lub)((()=>r.dC7(e,r.AEp(r.Wvh(e)))))}}function v(e){return e.getClassName()}function w(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function I(e){if(null==e){const e={className:"linear",config:{}};return w(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},w(t)}return e instanceof i?e:w(e)}k.className="mish",r.m7h.registerClass(k)},12012:function(e,t,n){"use strict";n.d(t,{Ho:function(){return a},rf:function(){return i}});var r=n(77124);let s;function a(){return null==s&&(s=(0,r.y3$)().epsilon()),s}function i(){return"channelsLast"}},79608:function(e,t,n){"use strict";n.d(t,{L:function(){return s},s:function(){return i}});let r=0;function s(){return r++}const a={};function i(e=""){return e in a||(a[e]=0),a[e]+=1,e+a[e].toString()}},39840:function(e,t,n){"use strict";n.d(t,{AK:function(){return k},GZ:function(){return b},Gg:function(){return x},HX:function(){return $},Iq:function(){return v},KC:function(){return E},O:function(){return N},Uz:function(){return d},a2:function(){return S},c9:function(){return p},dt:function(){return l},h6:function(){return w},mV:function(){return g},nG:function(){return y},pj:function(){return u},py:function(){return C},rv:function(){return T},rx:function(){return c},uI:function(){return m},xH:function(){return h}});var r=n(77124),s=n(48090),a=n(40588),i=n(96040),o=n(12012);function u(e,t){return r.pju(e,t)}function l(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),r.XLQ(e,n)}function c(e,t){return(0,r.lub)((()=>{if(2!==e.shape.length)throw new a.nu(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return x(l(e,1),[1,t,1])}))}function h(e){const t=[i.NS(e.shape)];return r.XLQ(e,t)}function d(e){if(e.rank<=1)throw new a.nu(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],i.NS(e.shape,1)];return r.XLQ(e,t)}function p(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[t,0],[n,e.shape[1]]);case 3:return r.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new a.nu(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function f(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[0,t],[e.shape[0],n]);case 3:return r.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new a.nu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function m(e,t,n,s){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:switch(s){case 1:return p(e,t,n);case 2:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return p(e,t,n);case 2:return r.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return p(e,t,n);case 2:return r.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}default:throw new a.nu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function g(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),r.zoF(e,t)}function b(e,t){switch(e.rank){case 1:return r.gME([e,t]);case 2:return r.Izb([e,t],0);case 3:return r.MNy([e,t],0);case 4:return r.ZaL([e,t],0);default:throw new a.nu(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function x(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new a.nu(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return r.Gg6(e,t)}function y(e,t=0,n=1,s,a){return r.nGf(e,t,n,s,a)}function k(e,t,n,s){if(e.rank<2||t.rank<2)throw new a.nj(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new a.nj(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,i=!1;return r.imm.matMul({a:e,b:t,transposeA:a,transposeB:i,bias:s?I(e.rank,s,(0,o.rf)()):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=r.XLQ(e,[-1,i]);const u=t.shape.slice(),l=u.pop(),c=u.pop(),h=[...u,l],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=r.XLQ(r.p4s(t,d),[c,-1]);const p=[...a,...h],f=!1,m=!1;return r.XLQ(r.imm.matMul({a:e,b:t,transposeA:f,transposeB:m,bias:s?I(e.rank,s,(0,o.rf)()):null,activation:n}),p)}}function v(e,t,n){return(0,r.lub)((()=>(t=Array.isArray(t)?(0,r.RRF)(t,"int32"):r.pju(t,"int32"),r.Iqj(e,t,n))))}function w(e){return r.dC7(e,e)}function I(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new a.nu(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1,1]):r.XLQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1]):r.XLQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1]):r.XLQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(e<3)return t;throw new a.nu(`Unsupported input rank by biasAdd: ${t.rank}`)}function S(e,t,n){return(0,r.lub)((()=>(null==n&&(n=(0,o.rf)()),(0,s.cj)(n),r.IHx(e,I(e.rank,t,n)))))}function C(e,t=1){if(1!==t)throw new a.nj(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return r.pyx(e)}function N(e){return(0,r.lub)((()=>r.hiC(e,r.IHx(r.WnP(e),1))))}function T(e,t,n,s){return(0,r.lub)((()=>r.rvX(e,t,n,s)))}function $(e){return(0,r.lub)((()=>{const t=r.IHx(.5,r.dC7(.2,e));return r.iUl(t,0,1)}))}function E(e,t,n=!1){return n?e():t()}},28891:function(e,t,n){"use strict";n.d(t,{CZ:function(){return p},ex:function(){return u},m$:function(){return m}});var r,s=n(77124),a=n(40588),i=n(73146),o=n(2931);!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(r||(r={}));class u{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class l{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class c extends u{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=(0,s.lub)((()=>(0,s.IHx)(this.totals[r],(0,s.dC7)(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,s.lub)((()=>{const e=(0,s.dC7)((0,s.hiC)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,s.CnY)(t[n])})))}}class h extends u{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class d extends u{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||s.glt,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=o.Ds(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await(0,i.Z)(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await(0,i.Z)(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await(0,i.Z)(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await(0,i.Z)(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await(0,i.Z)(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await(0,i.Z)(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await(0,i.Z)(e),await this.trainEnd(e))}}function p(e,t){if(null==e&&(e={}),e instanceof u)return[e];if(Array.isArray(e)&&e[0]instanceof u)return e;return o.zZ(e).map((e=>new d(e,t)))}class f{constructor(){}static registerCallbackConstructor(e,t){s.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),f.checkForDuplicate(t),null==f.constructors[e]&&(f.constructors[e]=[]),f.constructors[e].push(t)}static checkForDuplicate(e){for(const t in f.constructors){f.constructors[+t].forEach((t=>{if(t===e)throw new a.nu("Duplicate callback constructor.")}))}}static clear(){f.constructors={}}static createCallbacks(e){const t=[];for(const n in f.constructors){const r=+n;e>=r&&t.push(...f.constructors[r])}return t.map((e=>new e))}}function m(e,t,n,r,s,a,i,o,u){const d=new h,p=[new c,...f.createCallbacks(t)];null!=e&&p.push(...e),p.push(d);const m=new l(p);return m.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:m,history:d}}f.constructors={}},48090:function(e,t,n){"use strict";n.d(t,{Lp:function(){return l},MU:function(){return d},cj:function(){return i},f4:function(){return h},w8:function(){return p},wU:function(){return o},zb:function(){return u}});var r=n(44685),s=n(2931);const a=new Map;function i(e){(0,s.xn)(r.PS,"DataFormat",e)}function o(e){(0,s.xn)(r.Mz,"InterpolationFormat",e)}function u(e){(0,s.xn)(r.zx,"PaddingMode",e)}function l(e){(0,s.xn)(r.MK,"PoolMode",e)}const c=[];function h(e,t){c.push(e);try{const e=t();return c.pop(),e}catch(n){throw c.pop(),n}}function d(e){if(!m(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===c.length?"":c.join("/")+"/")+e}function p(e){if(!m(e))throw new Error("Not a valid tensor name: '"+e+"'");a.has(e)||a.set(e,0);const t=a.get(e);if(a.set(e,a.get(e)+1),t>0){const n=`${e}_${t}`;return a.set(n,1),n}return e}const f=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function m(e){return!!e.match(f)}},64079:function(e,t,n){"use strict";n.d(t,{Ad:function(){return m},xF:function(){return p}});var r=n(77124),s=n(12012),a=n(2931);function i(e,t){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(e,e),t,!0))))}class o extends r.m7h.Serializable{getConfig(){return{}}}class u extends o{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=i(e,this.axis),n=r.iUl(t,0,this.maxValue);return r.dC7(e,r.hiC(n,r.IHx((0,s.Ho)(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}u.className="MaxNorm",r.m7h.registerClass(u);class l extends o{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>r.hiC(e,r.IHx((0,s.Ho)(),i(e,this.axis)))))}getConfig(){return{axis:this.axis}}}l.className="UnitNorm",r.m7h.registerClass(l);class c extends o{apply(e){return r.UYe(e)}}c.className="NonNeg",r.m7h.registerClass(c);class h extends o{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=i(e,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(t,this.minValue,this.maxValue)),r.dC7(1-this.rate,t));return r.dC7(e,r.hiC(n,r.IHx((0,s.Ho)(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}h.className="MinMaxNorm",r.m7h.registerClass(h);const d={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function p(e){return(0,a.Kj)(e)}function f(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function m(e){if(null==e)return null;if("string"===typeof e){return f({className:e in d?d[e]:e,config:{}})}return e instanceof o?e:f(e)}},41111:function(e,t,n){"use strict";n.d(t,{l2:function(){return l},ht:function(){return p},kS:function(){return d}});var r=n(77124),s=n(40588);class a{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}var i=n(2931),o=n(34396),u=n(20163);class l{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof l)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new s.nu(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.pju)(t,e.dtype)}catch(n){throw new s.nu(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof u.Iy){if(null==this.id2Value[e.id])throw new s.nu(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.nu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof u.Iy){if(null==this.id2Value[e.id])throw new s.nu(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.nu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const c=new a,h=new a;function d(e){null!=c&&c.setMaxEntries(e),null!=h&&h.setMaxEntries(e)}function p(e,t,n,s){const a=null!=n&&n.training,u=Array.isArray(e),d=u?e:[e],p=d.map((e=>e.name)),b=[],x=t.names();for(const r of p)-1!==x.indexOf(r)?b.push(t.getValue(r)):b.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const y=p.join(",")+"|"+t.names().sort().join(",");let k,v=c.get(y);if(null==v){const e=function(e,t){r.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=m(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=m(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:f(s)}}(d,t);v=e.sorted,k=e.recipientCounts,c.put(y,v),h.put(y,k)}k={},a||Object.assign(k,h.get(y));const w=new l(t);for(let l=0;l<v.length;++l){if(null!=s){const e=(0,r.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=v[l],u=e.sourceLayer;if(u instanceof o.l)continue;const c=[],h=[],d=[];let f=!1;for(const n of e.inputs){const e=w.getValue(n),r=w.getMask(n);c.push(e),h.push(r),null!=r&&(f=!0),a||(k[n.name]--,0!==k[n.name]||t.hasKey(n)||-1!==p.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}f&&((n=n||{}).mask=h[0]);const m=(0,i.zZ)(u.apply(c,n));let x=null;u.supportsMasking&&(x=u.computeMask(c,h));const y=g(e),I=Array.isArray(y)?y:[y];for(let t=0;t<I.length;++t){w.hasKey(I[t])||w.add(I[t],m[t],Array.isArray(x)?x[0]:x);const e=p.indexOf(I[t].name);-1!==e&&(b[e]=m[t])}a||(0,r.B90)(d)}return w.disposeMasks(),u?b:b[0]}function f(e){const t={};for(const n in e)t[n]=e[n].size;return t}function m(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function g(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}},34396:function(e,t,n){"use strict";n.d(t,{I:function(){return u},l:function(){return o}});var r=n(77124),s=n(79608),a=n(40588),i=n(20163);class o extends i.mh{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:(0,s.s)("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new a.nu("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new a.nu("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new a.nu("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new i.Iy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new i.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new a.nu(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function u(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new a.nu("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new o({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}o.className="InputLayer",r.m7h.registerClass(o)},20163:function(e,t,n){"use strict";n.d(t,{Iy:function(){return p},NB:function(){return m},Zg:function(){return d},hA:function(){return x},mh:function(){return b}});var r=n(77124),s=n(79608),a=n(48090),i=n(40588),o=n(92599),u=n(2931),l=n(87538),c=n(23013),h=n(41653);class d{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class p{constructor(e,t,n,r,i,o,u){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=u,this.id=(0,s.L)(),null!=o&&(this.originalName=(0,a.MU)(o),this.name=(0,a.w8)(this.originalName)),this.rank=t.length}}let f=0;class m{constructor(e,t){this.callArgs=t,this.id=f++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let g=0;class b extends r.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=g++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=u.D1(e)+"_"+(0,s.s)(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new i.LH(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new i.nu(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return u.Bq(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return u.Bq(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new i.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new i.j1(`Layer ${this.name} is not connected, no input to return.`);return u.Bq(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new i.j1(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new i.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return u.Bq(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=u.zZ(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=u.zZ(this.inputSpec);if(e.length!==t.length)throw new i.nu(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new i.nu(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new i.nu(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new i.nu(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new i.nu(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],o=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new i.nu(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new i.nu(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=u.zZ(e);let r=!0;for(const a of n)if(!(a instanceof p)){r=!1;break}let s=!0;for(const a of n)if(a instanceof p){s=!1;break}if(r===s)throw new i.nu("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,a.f4)(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of u.zZ(e))t.push(n.shape);this.build(u.Bq(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=u.zZ(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=u.Bq(a),null!=this.activityRegularizer)throw new i.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=u.zZ(e);const t=[];for(const n of e)t.push(n.shape);return u.Bq(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new p(a,n,this,u.zZ(e),t,this.name,r))):new p(a,r,this,u.zZ(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new i.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new i.j1(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new i.j1(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new i.LH(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return c.t(this.weights)}build(e){this.built=!0}getWeights(e=!1){return(0,h.FQ)(e?this.trainableWeights:this.weights)}setWeights(e){(0,r.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new i.nu(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=(0,h.FQ)(t);for(let a=0;a<s.length;++a){const o=s[a],u=t[a],l=e[a];if(!r.D5U.arraysEqual(o.shape,l.shape))throw new i.nu(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([u,l])}(0,h.zb)(n)}))}addWeight(e,t,n,r,s,a,u,l){if(-1!==this._addedWeightNames.indexOf(e))throw new i.nu(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():(0,o.L5)("zeros"));const c=r.apply(t,n),d=new h.fU(c,n,e,a,u);return c.dispose(),null!=s&&this.addLoss((()=>s.apply(d.read()))),null==a&&(a=!0),a?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=u.zZ(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=u.zZ(e);t=u.zZ(t),n=u.zZ(n),r=u.zZ(r),s=l.x6(s),a=l.x6(a);const c=[],h=[],d=[];for(const u of o)c.push(u.sourceLayer),h.push(u.nodeIndex),d.push(u.tensorIndex);new m({outboundLayer:this,inboundLayers:c,nodeIndices:h,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let u=0;u<t.length;u++)t[u].sourceLayer=this,t[u].nodeIndex=this.inboundNodes.length-1,t[u].tensorIndex=u}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function x(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=x(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}},28913:function(e,t,n){"use strict";n.d(t,{D:function(){return p},y:function(){return h}});var r=n(77124),s=n(28891),a=n(40588),i=n(73146),o=n(2931),u=n(86529);function l(e,t){let n,s;const a=t;n=a.xs,s=a.ys,r.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=c("input",e.inputNames,n),o=c("output",e.outputNames,s),u=i[0].shape[0];r.D5U.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),r.D5U.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<i.length;l++)r.D5U.assert(i[l].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${i[l].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let l=0;l<o.length;l++)r.D5U.assert(o[l].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function c(e,t,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new a.nu(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function h(e,t,n){const c=null!=n.batchesPerEpoch;if(r.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.assert(!c||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const h=null!=n.validationData;let p,f;if(h)if(d(n.validationData))r.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new a.nj("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);p=e.xs,f=e.ys}const m=e.makeTrainFunction(),g=e.getDedupedMetricsNames();let b;b=h?g.slice().concat(g.map((e=>"val_"+e))):g.slice();const x=(0,s.CZ)(n.callbacks,n.yieldEvery),y=null==n.verbose?1:n.verbose,{callbackList:k,history:v}=(0,s.m$)(x,y,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,h,b);k.setModel(e),e.history=v,await k.onTrainBegin(),e.stopTraining_=!1;let w=null==n.initialEpoch?0:n.initialEpoch,I=await t.iterator();for(;w<n.epochs;){const s={};await k.onEpochBegin(w);let a=0,b=0;for(c||(I=await t.iterator());!c||a<n.batchesPerEpoch;){const t=await I.next();if(c&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${a} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:o}=l(e,t.value),c={};c.batch=b,c.size=s[0].shape[0],await k.onBatchBegin(b,c);const h=[];if(null!=n.classWeight){const t=(0,u.Vf)(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)h.push(await(0,u.tl)(o[e],null,t[e]))}const d=s.concat(o).concat(h),p=m(d);r.B90(d);for(let e=0;e<g.length;++e){const t=g[e],n=p[e];c[t]=n,r.CnY(n)}await k.onBatchEnd(b,c),(0,i.i)(c),b++,a++}if(c?a>=n.batchesPerEpoch:t.done){if(h){let t;t=d(n.validationData)?(0,o.zZ)(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):(0,o.zZ)(e.evaluate(p,f,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)s[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await k.onEpochEnd(w,s),w++,e.stopTraining_)break}return await k.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function d(e){return"function"===typeof e.iterator}async function p(e,t,n){const s=null!=(n=n||{}).batches,i=e.testFunction;let u=[];if(n.verbose>0)throw new a.nj("Verbose mode is not implemented yet.");r.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const c="function"===typeof t.next?t:await t.iterator();let h=0,d=0;for(;!s||d<n.batches;){const t=await c.next();if(u=r.lub((()=>{if(t.value){const{xs:n,ys:s}=l(e,t.value),a=n.concat(s),o=r.lub((()=>i(a)));if(r.B90(a),0===d)for(let e=0;e<o.length;++e)u.push((0,r.iD$)(0));const c=a[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=u[e];u[e]=r.lub((()=>r.IHx(u[e],r.dC7(c,t)))),d>0&&r.B90(n)}r.B90(o),h+=c,++d}return u})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let a=0;a<u.length;++a){const e=u[a];u[a]=r.hiC(u[a],h),r.B90(e)}return(0,o.Bq)(u)}},26347:function(e,t,n){"use strict";n.d(t,{R_:function(){return u},YV:function(){return l},YX:function(){return o},fQ:function(){return a},kS:function(){return c},sf:function(){return i}});var r=n(77124),s=n(39840);function a(e){r.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function i(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>(0,s.c9)(e,t,n-t))):(0,s.c9)(e,t,n-t)}function o(e,t){return r.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>o(e,t))):(0,s.Iq)(e,"int32"===t.dtype?t:r.pju(t,"int32"))))}function u(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function l(e){const t=[];e instanceof r.esB&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push((0,s.dt)(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function c(e,t){if(null==e)return;const n=[];if(t instanceof r.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof r.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}},86529:function(e,t,n){"use strict";n.d(t,{Vf:function(){return a},mo:function(){return o},tl:function(){return i}});var r=n(77124);function s(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function a(e,t){return s(e,t,"classWeight")}async function i(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.lub)((()=>{if(1===e.shape.length)return(0,r.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,r.NqF)(e,t)}if(1===e.shape[1])return(0,r.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,r.B90)(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,r.RRF)(a,"float32")}return null}function o(e,t){return(0,r.dC7)(e,t)}},40588:function(e,t,n){"use strict";n.d(t,{LH:function(){return s},j1:function(){return r},nj:function(){return i},nu:function(){return a},ps:function(){return o}});class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}}class s extends Error{constructor(e){super(e),Object.setPrototypeOf(this,s.prototype)}}class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,i.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}Error},39603:function(e,t,n){"use strict";n.d(t,{FB:function(){return r.FB}});n(28891),n(34396),n(85337);var r=n(83066)},92599:function(e,t,n){"use strict";n.d(t,{m7:function(){return h},M6:function(){return p},L5:function(){return A},Cx:function(){return E}});var r=n(77124),s=n(39840),a=n(48090),i=n(40588);const o=["fanIn","fanOut","fanAvg"],u=["normal","uniform","truncatedNormal"];var l=n(2931),c=n(96040);class h extends r.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class d extends h{apply(e,t){return(0,r.lls)(e,t)}}d.className="Zeros",r.m7h.registerClass(d);class p extends h{apply(e,t){return(0,r.iUs)(e,t)}}p.className="Ones",r.m7h.registerClass(p);class f extends h{constructor(e){if(super(),"object"!==typeof e)throw new i.nu(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new i.nu(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(e,t))))}getConfig(){return{value:this.value}}}f.className="Constant",r.m7h.registerClass(f);class m extends h{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.LGj)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m.className="RandomUniform",r.m7h.registerClass(m);class g extends h{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.nj(`randomNormal does not support dType ${t}.`);return s.nG(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g.className="RandomNormal",r.m7h.registerClass(g);class b extends h{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.nj(`truncatedNormal does not support dType ${t}.`);return(0,r.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}b.className="TruncatedNormal",r.m7h.registerClass(b);class x extends h{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new i.nu("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}x.className="Identity",r.m7h.registerClass(x);class y extends h{constructor(e){if(super(),e.scale<0)throw new i.nu(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,(0,l.xn)(o,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){(0,l.xn)(u,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if((0,a.cj)(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=(0,c.NS)(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=(0,c.NS)(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=(0,c.NS)(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),s=n[0],o=n[1];let u=this.scale;if("fanIn"===this.mode?u/=Math.max(1,s):"fanOut"===this.mode?u/=Math.max(1,o):u/=Math.max(1,(s+o)/2),"normal"===this.distribution){const n=Math.sqrt(u);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new i.nj(`${this.getClassName()} does not support dType ${t}.`);return(0,r.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*u);return(0,r.LGj)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}y.className="VarianceScaling",r.m7h.registerClass(y);class k extends y{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return y.className}}k.className="GlorotUniform",r.m7h.registerClass(k);class v extends y{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return y.className}}v.className="GlorotNormal",r.m7h.registerClass(v);class w extends y{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return y.className}}w.className="HeNormal",r.m7h.registerClass(w);class I extends y{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return y.className}}I.className="HeUniform",r.m7h.registerClass(I);class S extends y{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return y.className}}S.className="LeCunNormal",r.m7h.registerClass(S);class C extends y{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return y.className}}C.className="LeCunUniform",r.m7h.registerClass(C);class N extends h{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,r.lub)((()=>{if(e.length<2)throw new i.nj("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=r.D5U.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],o=n*a;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const u=[Math.max(a,n),Math.min(a,n)],l=s.nG(u,0,1,t,this.seed),c=r.$r2.qr(l,!1);let h=c[0];const d=c[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return h=(0,r.dC7)(h,d.sign()),n<a&&(h=h.transpose()),(0,r.dC7)((0,r.iD$)(this.gain),h.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}N.className="Orthogonal",r.m7h.registerClass(N);const T={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $(e,t={}){return(0,l.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function E(e){return(0,l.Kj)(e)}function A(e){if("string"===typeof e){const t=e in T?T[e]:e;if("GlorotNormal"===t)return new v;if("GlorotUniform"===t)return new k;if("HeNormal"===t)return new w;if("HeUniform"===t)return new I;if("LeCunNormal"===t)return new S;if("LeCunUniform"===t)return new C;{const e={};return e.className=t,e.config={},$(e)}}return e instanceof h?e:$(e)}},44685:function(e,t,n){"use strict";n.d(t,{MK:function(){return i},Mz:function(){return s},PS:function(){return r},eY:function(){return o},zx:function(){return a}});const r=["channelsFirst","channelsLast"],s=["nearest","bilinear"],a=["valid","same","causal"],i=["max","avg"],o=["sum","mul","concat","ave"]},27870:function(e,t,n){"use strict";var r=n(77124),s=n(28819),a=n(64079),i=n(20163),o=n(40588),u=n(92599),l=n(10539),c=n(87538);class h extends i.mh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=(0,c.nQ)(e);let n=(0,r.UYe)(e);return null!=this.maxValue&&(n=(0,r.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}h.className="ReLU",r.m7h.registerClass(h);class d extends i.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,c.nQ)(e);return(0,r.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}d.className="LeakyReLU",r.m7h.registerClass(d);class p extends i.mh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=(0,u.L5)(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=(0,l.EC)(e.alphaRegularizer),this.alphaConstraint=(0,a.Ad)(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new o.nu(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=(0,c.Wf)(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new i.Zg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=(0,c.nQ)(e),(0,r.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:(0,u.Cx)(this.alphaInitializer),alphaRegularizer:(0,l.SG)(this.alphaRegularizer),alphaConstraint:(0,a.xF)(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}p.className="PReLU",r.m7h.registerClass(p);class f extends i.mh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new o.nj(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,c.nQ)(e);return(0,r.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}f.className="ELU",r.m7h.registerClass(f);class m extends i.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=(0,c.nQ)(e);return(0,r.dC7)(n,(0,r.pju)((0,r.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}m.className="ThresholdedReLU",r.m7h.registerClass(m);class g extends i.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new s.Gc).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=(0,c.nQ)(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}g.className="Softmax",r.m7h.registerClass(g)},34121:function(e,t,n){"use strict";var r=n(77124),s=n(12012),a=n(39840),i=n(48090),o=n(64079),u=n(40588),l=n(92599),c=n(10539),h=n(26517),d=n(87538),p=n(75650);class f extends p.nx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=(0,l.L5)(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=(0,o.Ad)(e.depthwiseConstraint),this.depthwiseRegularizer=(0,c.EC)(e.depthwiseRegularizer)}build(e){if((e=(0,d.Wf)(e)).length<4)throw new u.nu(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new u.nu(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{let t=function(e,t,n=[1,1],a="valid",o,l){return(0,r.lub)((()=>{null==o&&(o=(0,s.rf)()),(0,i.cj)(o);let c=(0,p.aP)(e,o);if(4!==e.rank)throw new u.nu(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new u.nu(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return c=r.B10(c,t,n,"same"===a?"same":"valid","NHWC",l),"channelsFirst"===o&&(c=r.p4s(c,[0,3,1,2])),c}))}(e=(0,d.nQ)(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=a.a2(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=(0,d.Wf)(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=(0,h.kt)(t,this.kernelSize[0],this.padding,this.strides[0]),a=(0,h.kt)(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=(0,l.Cx)(this.depthwiseInitializer),e.depthwiseRegularizer=(0,c.SG)(this.depthwiseRegularizer),e.depthwiseConstraint=(0,o.xF)(this.depthwiseRegularizer),e}}f.className="DepthwiseConv2D",r.m7h.registerClass(f)},5819:function(e,t,n){"use strict";var r=n(77124),s=n(39840),a=n(48090),i=n(20163),o=n(40588),u=n(92599),l=n(26517),c=n(2931),h=n(87538),d=n(76014),p=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class f extends d.$p{constructor(e){if(e.unroll)throw new o.nj("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new o.nj("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new i.Zg({ndim:5})]}call(e,t){return r.lub((()=>{if(null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new o.nu("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return r.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],i=r.lls(a);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){r.lub((()=>{if(!this.stateful)throw new o.j1("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new o.nu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_=[r.lls(a)];else if(null==e)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_[0]=r.lls(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new o.nu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.D5U.arraysEqual(n.shape,s))throw new o.nu(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>r.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],c=e[o?4:3],h=(0,l.kt)(u,r[0],s,a[0],i[0]),d=(0,l.kt)(c,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,h,d]:[h,d,n]]}}f.className="ConvRNN2D";class m extends d.U7{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,(0,c.iQ)(this.filters,"filters"),this.kernelSize=(0,l.AF)(n,2,"kernelSize"),this.kernelSize.forEach((e=>(0,c.iQ)(e,"kernelSize"))),this.strides=(0,l.AF)(r||1,2,"strides"),this.strides.forEach((e=>(0,c.iQ)(e,"strides"))),this.padding=s||"valid",(0,a.zb)(this.padding),this.dataFormat=i||"channelsLast",(0,a.cj)(this.dataFormat),this.dilationRate=(0,l.AF)(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>(0,c.iQ)(e,"dilationRate")))}build(e){var t;e=(0,h.Wf)(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new o.nu(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],i=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends u.m7{apply(e,t){const i=n.apply([a]),o=r.iUs([a]),u=n.apply([2*a]);return s.mV([i,o,u])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return r.lub((()=>{if(3!==e.length)throw new o.nu(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=(0,d._0)({ones:()=>r.JpU(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,l=(e,t,n)=>t&&t[n]?r.dC7(t[n],e):e;let c=l(s,u,0),h=l(s,u,1),p=l(s,u,2),f=l(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=(0,d._0)({ones:()=>r.JpU(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=l(a,m,0),b=l(a,m,1),x=l(a,m,2),y=l(a,m,3);const[k,v,w,I]=r.Vl2(this.kernel.read(),4,3),[S,C,N,T]=this.useBias?r.Vl2(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,k,S,this.padding),h=this.inputConv(h,v,C,this.padding),p=this.inputConv(p,w,N,this.padding),f=this.inputConv(f,I,T,this.padding);const[$,E,A,D]=r.Vl2(this.recurrentKernel.read(),4,3);g=this.recurrentConv(g,$),b=this.recurrentConv(b,E),x=this.recurrentConv(x,A),y=this.recurrentConv(y,D);const R=this.recurrentActivation.apply(r.IHx(c,g)),F=this.recurrentActivation.apply(r.IHx(h,b)),_=r.IHx(r.dC7(F,i),r.dC7(R,this.activation.apply(r.IHx(p,x)))),O=r.dC7(this.recurrentActivation.apply(r.IHx(f,y)),this.activation.apply(_));return[O,O,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=p(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,a){const i=r.Tek(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?s.a2(i,n,this.dataFormat):i}recurrentConv(e,t){return r.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}m.className="ConvLSTM2DCell",r.m7h.registerClass(m);class g extends f{constructor(e){const t=new m(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}g.className="ConvLSTM2D",r.m7h.registerClass(g)},53636:function(e,t,n){"use strict";var r=n(77124),s=n(28819),a=n(39840),i=n(64079),o=n(20163),u=n(40588),l=n(92599),c=n(10539),h=n(2931),d=n(96040),p=n(87538);class f extends o.mh{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,p.nQ)(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return a.KC((()=>a.rv(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}f.className="Dropout",r.m7h.registerClass(f);class m extends f{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}m.className="SpatialDropout1D",r.m7h.registerClass(m);class g extends o.mh{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,(0,h.iQ)(this.units,"units"),this.activation=(0,s.aI)(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=(0,l.L5)(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,l.L5)(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,i.Ad)(e.kernelConstraint),this.biasConstraint=(0,i.Ad)(e.biasConstraint),this.kernelRegularizer=(0,c.EC)(e.kernelRegularizer),this.biasRegularizer=(0,c.EC)(e.biasRegularizer),this.activityRegularizer=(0,c.EC)(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=(0,p.Wf)(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=(0,p.Wf)(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,p.nQ)(e),r=(0,h.WT)(this.activation.getClassName());let s;return null!=r?s=a.AK(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=a.AK(n,this.kernel.read()),null!=this.bias&&(s=a.a2(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:(0,s.GD)(this.activation),useBias:this.useBias,kernelInitializer:(0,l.Cx)(this.kernelInitializer),biasInitializer:(0,l.Cx)(this.biasInitializer),kernelRegularizer:(0,c.SG)(this.kernelRegularizer),biasRegularizer:(0,c.SG)(this.biasRegularizer),activityRegularizer:(0,c.SG)(this.activityRegularizer),kernelConstraint:(0,i.xF)(this.kernelConstraint),biasConstraint:(0,i.xF)(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}g.className="Dense",r.m7h.registerClass(g);class b extends o.mh{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=(0,p.Wf)(e);for(const t of e.slice(1))if(null==t)throw new u.nu(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],(0,d.NS)(e,1)]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=(0,p.nQ)(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,r.p4s)(n,e)}return a.Uz(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}b.className="Flatten",r.m7h.registerClass(b);class x extends o.mh{constructor(e){super(e),this.supportsMasking=!0,this.activation=(0,s.aI)(e.activation)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,p.nQ)(e);return this.activation.apply(n)}))}getConfig(){const e={activation:(0,s.GD)(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}x.className="Activation",r.m7h.registerClass(x);class y extends o.mh{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,r.lub)((()=>(e=(0,p.nQ)(e),a.rx(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}y.className="RepeatVector",r.m7h.registerClass(y);class k extends o.mh{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new u.nu("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=(0,d.NS)(e);if(null!==a){if(0===s||i%s!==0)throw new u.nu(n);r[a]=i/s}else if(i!==s)throw new u.nu(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,p.nQ)(e),s=n.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,r.XLQ)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}k.className="Reshape",r.m7h.registerClass(k);class v extends o.mh{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=(0,d.w6)(1,e.dims.length+1);if(!r.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new o.Zg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=(0,p.Wf)(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,r.p4s)((0,p.nQ)(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}v.className="Permute",r.m7h.registerClass(v);class w extends o.mh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=(0,p.nQ)(e);return(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,p.nQ)(e),s=(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1,!0);return(0,r.dC7)(n,(0,r.pju)(s,n.dtype))}))}}w.className="Masking",r.m7h.registerClass(w)},2784:function(e,t,n){"use strict";var r=n(77124),s=n(39840),a=n(64079),i=n(20163),o=n(40588),u=n(92599),l=n(10539),c=n(2931),h=n(87538);class d extends i.mh{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(c.zZ(e.inputLength))}this.inputDim=e.inputDim,c.iQ(this.inputDim,"inputDim"),this.outputDim=e.outputDim,c.iQ(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,u.L5)(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=(0,l.EC)(e.embeddingsRegularizer),this.activityRegularizer=(0,l.EC)(e.activityRegularizer),this.embeddingsConstraint=(0,a.Ad)(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,r.lub)((()=>this.maskZero?(e=(0,h.nQ)(e),(0,r.Quu)(e,(0,r.P84)(e))):null))}computeOutputShape(e){if(e=(0,h.Wf)(e),null==this.inputLength)return[...e,this.outputDim];const t=c.zZ(this.inputLength);if(t.length!==e.length-1)throw new o.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new o.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=(0,h.nQ)(e);"int32"!==n.dtype&&(n=s.pj(n,"int32"));const a=s.Iq(this.embeddings.read(),(0,r.XLQ)(n,[n.size]));return(0,r.XLQ)(a,(0,h.Wf)(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,u.Cx)(this.embeddingsInitializer),embeddingsRegularizer:(0,l.SG)(this.embeddingsRegularizer),activityRegularizer:(0,l.SG)(this.activityRegularizer),embeddingsConstraint:(0,a.xF)(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}d.className="Embedding",r.m7h.registerClass(d)},64140:function(e,t,n){"use strict";var r=n(77124),s=n(39840),a=n(20163),i=n(40588),o=n(86275),u=n(2931),l=n(96040),c=n(87538);class h extends a.mh{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new i.nj}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new i.nu("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[(0,c.Wf)(e)]),e.length<2)throw new i.nu(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=u.Tw(t),t.length>1)throw new i.nu(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===u.Tw(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,r.lub)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=l.Fp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=s.dt(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,s=e[0],a=e.slice(1).concat([s]);let o=r.XLQ(i,[s].concat(l.NS(e.slice(1))));o=r.p4s(o,[1,0]),o=r.XLQ(o,a),t.push(o),n=!0}else if(e>1){const s=l.w6(1,e).concat([0]);t.push(r.p4s(i,s)),n=!0}else t.push(i)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=r.XLQ(r.p4s(r.XLQ(s,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(l.w6(0,a-1));s=r.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=u.Tw(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return r.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new i.nu("`mask` should be an Array");if(!Array.isArray(e))throw new i.nu("`inputs` should be an Array");if(t.length!==e.length)throw new i.nu(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:r.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=r.HvI(n,t[e]);return n}))}}class d extends h{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return t}))}}d.className="Add",r.m7h.registerClass(d);class p extends h{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.dC7(t,e[n]);return t}))}}p.className="Multiply",r.m7h.registerClass(p);class f extends h{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return r.dC7(1/e.length,t)}))}}f.className="Average",r.m7h.registerClass(f);class m extends h{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.gWQ(t,e[n]);return t}))}}m.className="Maximum",r.m7h.registerClass(m);class g extends h{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.LTh(t,e[n]);return t}))}}g.className="Minimum",r.m7h.registerClass(g);class b extends h{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new i.nu("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(r.D5U.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new i.nu("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,r.lub)((()=>s.mV(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new i.nu("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new i.nu("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new i.nu("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new i.nu(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return r.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let i=0;i<e.length;++i)null==t[i]?s.push(r.pju(r.JpU(e[i]),"bool")):t[i].rank<e[i].rank?s.push(r.dt4(t[i],-1)):s.push(t[i]);const a=r.zoF(s,this.axis);return r.$6P(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function x(e,t){for(;e<0;)e+=t;return e}b.className="Concatenate",r.m7h.registerClass(b);class y extends h{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new i.nj("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new i.nu(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new i.nu(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>x(t,e[n].shape.length))):[x(this.axes,n.shape.length),x(this.axes,s.shape.length)],this.normalize&&(n=(0,o.Eq)(n,t[0]),s=(0,o.Eq)(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new i.nj("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new i.nj("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const o=n;return r.lub((()=>{let n,i;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=r.XLQ(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=r.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?r.Smz(r.dC7(e,t),o[0]):r.Smz(r.dC7(r.p4s(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,s=o[1]===t.shape.length-1;i=r.OI3(e,t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=r.L9e(i,t)}return 1===i.shape.length&&(i=r.dt4(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[x(this.axes,e.length),x(this.axes,t.length)],n}computeOutputShape(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new i.nj("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}y.className="Dot",r.m7h.registerClass(y)},76177:function(e,t,n){"use strict";var r=n(77124),s=n(39840),a=n(20163),i=n(87538);class o extends a.mh{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,i.nQ)(e);return s.KC((()=>(0,r.IHx)(s.nG(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}o.className="GaussianNoise",r.m7h.registerClass(o);class u extends a.mh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=(0,i.nQ)(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,r.dC7)(n,s.nG(n.shape,1,e))};return s.KC(e,(()=>n),t.training||!1)}return n}))}}u.className="GaussianDropout",r.m7h.registerClass(u);class l extends a.mh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||(0,i.nQ)(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=(0,i.nQ)(e),a=-1.7580993408473766;let o=(0,r.brS)((0,r.LGj)(n),this.rate);o=s.pj(o,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,l=-u*a*this.rate,c=(0,r.IHx)((0,r.dC7)(t,o),(0,r.dC7)((0,r.IHx)(o,-1),a));return(0,r.IHx)((0,r.dC7)(c,u),l)};return s.KC(a,(()=>(0,i.nQ)(e)),t.training||!1)}return e}))}}l.className="AlphaDropout",r.m7h.registerClass(l)},67280:function(e,t,n){"use strict";var r=n(77124),s=n(64079),a=n(20163),i=n(40588),o=n(92599),u=n(10539),l=n(2931),c=n(96040),h=n(87538);function d(e,t,n,s,a,o=.001){let u;if(2===e.rank)u=r.Dxk(e,t,n,s,a,o);else if(3===e.rank)u=r.JY5(e,t,n,s,a,o);else{if(4!==e.rank)throw new i.nj(`batchNormalization is not implemented for array of rank ${e.rank} yet`);u=r.p3b(e,t,n,s,a,o)}return u}function p(e,t,n,s,a=.001){return r.D5U.arraysEqual(s.slice().sort(),c.w6(0,e.rank-1))?function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,u=i.variance;return[d(e,o,u,n,t,a),o,u]}))}(e,t,n,s,a):function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,u=i.variance,l=[];for(const t of c.w6(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const h=(0,r.XLQ)(o,l),p=(0,r.XLQ)(u,l),f=null==t?null:(0,r.XLQ)(t,l),m=null==n?null:(0,r.XLQ)(n,l);return[d(e,h,p,m,f,a),o,u]}))}(e,t,n,s,a)}class f extends a.mh{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,o.L5)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,o.L5)(e.gammaInitializer||"ones"),this.movingMeanInitializer=(0,o.L5)(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,o.L5)(e.movingVarianceInitializer||"ones"),this.betaConstraint=(0,s.Ad)(e.betaConstraint),this.gammaConstraint=(0,s.Ad)(e.gammaConstraint),this.betaRegularizer=(0,u.EC)(e.betaRegularizer),this.gammaRegularizer=(0,u.EC)(e.gammaRegularizer)}build(e){e=(0,h.Wf)(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new i.nu(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new a.Zg({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,r.lub)((()=>{const n=null!=t.training&&t.training,s=(0,h.nQ)(e),a=s.shape,i=a.length,o=c.w6(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const f=l.JE(1,i);f[u]=a[u];const m=o.slice();m.sort();const g=!r.D5U.arraysEqual(m,c.w6(0,i).slice(0,i-1));if(!n)return(()=>{if(g){const e=(0,r.XLQ)(this.movingMean.read(),f),t=(0,r.XLQ)(this.movingVariance.read(),f),n=this.center?(0,r.XLQ)(this.beta.read(),f):null,a=this.scale?(0,r.XLQ)(this.gamma.read(),f):null;return d(s,e,t,n,a,this.epsilon)}return d(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[b,x,y]=p(s,this.gamma.read(),this.beta.read(),o,this.epsilon),k=(e,t,n)=>{r.lub((()=>{const s=1-n,a=e.read(),i=r.dC7(r.luU(a,t),s);e.write(r.luU(a,i))}))};return(()=>{k(this.movingMean,x,this.momentum),k(this.movingVariance,y,this.momentum)})(),b}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,o.Cx)(this.betaInitializer),gammaInitializer:(0,o.Cx)(this.gammaInitializer),movingMeanInitializer:(0,o.Cx)(this.movingMeanInitializer),movingVarianceInitializer:(0,o.Cx)(this.movingVarianceInitializer),betaRegularizer:(0,u.SG)(this.betaRegularizer),gammaRegularizer:(0,u.SG)(this.gammaRegularizer),betaConstraint:(0,s.xF)(this.betaConstraint),gammaConstraint:(0,s.xF)(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}f.className="BatchNormalization",r.m7h.registerClass(f);class m extends a.mh{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,o.L5)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,o.L5)(e.gammaInitializer||"ones"),this.betaRegularizer=(0,u.EC)(e.betaRegularizer),this.gammaRegularizer=(0,u.EC)(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=(0,h.Wf)(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==l.Tw(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=(0,h.nQ)(e),s=n.shape,a=s.length;return(0,r.lub)((()=>{let{mean:e,variance:t}=(0,r.Gi7)(n,this.axis,!0);const i=l.JE(1,a);for(const n of this.axis)i[n]=s[n];const o=e=>null!=e&&e.shape.length!==a?r.XLQ(e,i):e;let u=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const h=[],p=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(h.push(s[n]),p.push(1)):(h.push(1),p.push(s[n]));return e=r.Gg6(e,h),t=r.Gg6(t,h),null!=u&&(u=r.Gg6(u,p)),null!=c&&(c=r.Gg6(c,p)),d(n,e,t,c,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,o.Cx)(this.betaInitializer),gammaInitializer:(0,o.Cx)(this.gammaInitializer),betaRegularizer:(0,u.SG)(this.betaRegularizer),gammaRegularizer:(0,u.SG)(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}m.className="LayerNormalization",r.m7h.registerClass(m)},505:function(e,t,n){"use strict";var r=n(77124),s=n(12012),a=n(20163),i=n(40588),o=n(87538);class u extends a.mh{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?(0,s.rf)():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new i.nu(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new i.nu(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new i.nu(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new a.Zg({ndim:4})]}computeOutputShape(e){let t,n;return e=(0,o.Wf)(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,r.lub)((()=>{return t=(0,o.nQ)(e),n=this.padding,a=this.dataFormat,(0,r.lub)((()=>{if(4!==t.rank)throw new i.nu(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new i.nu("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a=(0,s.rf)()),"channelsLast"!==a&&"channelsFirst"!==a)throw new i.nu(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.vku(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}u.className="ZeroPadding2D",r.m7h.registerClass(u)},60756:function(e,t,n){"use strict";var r=n(77124),s=n(12012),a=n(39840),i=n(48090),o=n(20163),u=n(40588),l=n(26517),c=n(2931),h=n(87538),d=n(75650);function p(e,t,n,a,o,u){return(0,r.lub)((()=>{let l;(0,i.cj)(o),(0,i.Lp)(u),(0,i.zb)(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==o&&(o=(0,s.rf)()),null==u&&(u="max"),e=(0,d.aP)(e,o);const c="same"===a?"same":"valid";return l="max"===u?r._sB(e,t,n,c):r.wS1(e,t,n,c),"channelsFirst"===o&&(l=r.p4s(l,[0,3,1,2])),l}))}function f(e,t,n,a,o,u){return(0,r.lub)((()=>{let l;(0,i.cj)(o),(0,i.Lp)(u),(0,i.zb)(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==o&&(o=(0,s.rf)()),null==u&&(u="max"),e=(0,d.fN)(e,o);const c="same"===a?"same":"valid";return l="max"===u?r.YQQ(e,t,n,c):r.uR5(e,t,n,c),"channelsFirst"===o&&(l=r.p4s(l,[0,4,1,2,3])),l}))}class m extends o.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new u.nu(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if((0,c.iQ)(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new u.nu(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}(0,c.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,(0,i.zb)(this.padding),this.inputSpec=[new o.Zg({ndim:3})]}computeOutputShape(e){e=(0,h.Wf)(e);const t=(0,l.kt)(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t),e=a.dt((0,h.nQ)(e),2);const n=this.poolingFunction((0,h.nQ)(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class g extends m{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),p(e,t,n,r,s,"max")}}g.className="MaxPooling1D",r.m7h.registerClass(g);class b extends m{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),p(e,t,n,r,s,"avg")}}b.className="AveragePooling1D",r.m7h.registerClass(b);class x extends o.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new u.nu(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];(0,c.iQ)(this.poolSize,"poolSize"),(0,c.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.cj)(this.dataFormat),(0,i.zb)(this.padding),this.inputSpec=[new o.Zg({ndim:4})]}computeOutputShape(e){e=(0,h.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=(0,l.kt)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,l.kt)(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,h.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class y extends x{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),p(e,t,n,r,s,"max")}}y.className="MaxPooling2D",r.m7h.registerClass(y);class k extends x{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),p(e,t,n,r,s,"avg")}}k.className="AveragePooling2D",r.m7h.registerClass(k);class v extends o.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new u.nu(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];(0,c.iQ)(this.poolSize,"poolSize"),(0,c.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.cj)(this.dataFormat),(0,i.zb)(this.padding),this.inputSpec=[new o.Zg({ndim:5})]}computeOutputShape(e){e=(0,h.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=(0,l.kt)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,l.kt)(n,this.poolSize[1],this.padding,this.strides[1]),r=(0,l.kt)(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,h.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class w extends v{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),f(e,t,n,r,s,"max")}}w.className="MaxPooling3D",r.m7h.registerClass(w);class I extends v{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,i.cj)(s),(0,i.zb)(r),f(e,t,n,r,s,"avg")}}I.className="AveragePooling3D",r.m7h.registerClass(I);class S extends o.mh{constructor(e){super(e),this.inputSpec=[new o.Zg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new u.nj}}class C extends S{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=(0,h.nQ)(e);return r.J69(t,1)}))}}C.className="GlobalAveragePooling1D",r.m7h.registerClass(C);class N extends S{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=(0,h.nQ)(e);return r.Fp7(t,1)}))}}N.className="GlobalMaxPooling1D",r.m7h.registerClass(N);class T extends o.mh{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,i.cj)(this.dataFormat),this.inputSpec=[new o.Zg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new u.nj}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $ extends T{call(e,t){return(0,r.lub)((()=>{const t=(0,h.nQ)(e);return"channelsLast"===this.dataFormat?r.J69(t,[1,2]):r.J69(t,[2,3])}))}}$.className="GlobalAveragePooling2D",r.m7h.registerClass($);class E extends T{call(e,t){return(0,r.lub)((()=>{const t=(0,h.nQ)(e);return"channelsLast"===this.dataFormat?r.Fp7(t,[1,2]):r.Fp7(t,[2,3])}))}}E.className="GlobalMaxPooling2D",r.m7h.registerClass(E)},90650:function(e,t,n){"use strict";var r=n(20163),s=n(77124),a=n(87538),i=n(40588),o=n(39840);class u extends r.mh{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=(0,a.Wf)(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,s.lub)((()=>{let n;if("int32"!==(e=(0,a.nQ)(e)).dtype&&(e=o.pj(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new i.nu(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=(0,a.nQ)(t.countWeights)}const r=(0,s.Fp7)(e),u=(0,s.VV$)(e),l=(0,s.pjt)(this.numTokens,r).bufferSync().get(0),c=(0,s.brS)(u,0).bufferSync().get(0);if(!l||!c)throw new i.nu(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let u=(0,a.nQ)(e);if("int32"!==u.dtype&&(u=o.pj(u,"int32")),"int"===t)return u;const l=u.shape;if(0===u.rank&&(u=(0,s.dt4)(u,-1)),"oneHot"===t&&1!==u.shape[u.shape.length-1]&&(u=(0,s.dt4)(u,-1)),u.rank>2)throw new i.nu(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${l} which would result in output rank ${u.rank}.`);const c=["multiHot","oneHot"].includes(t),h=u;let d;if(d="undefined"!==typeof r&&"count"===t?(0,s.ppE)(h,r,n,c):(0,s.ppE)(h,[],n,c),"tfIdf"!==t)return d;if(r)return(0,s.dC7)(d,r);throw new i.nu("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}u.className="CategoryEncoding",s.m7h.registerClass(u)},770:function(e,t,n){"use strict";var r=n(77124),s=n(87538),a=n(20163),i=n(39840);const{resizeBilinear:o,cropAndResize:u}=r.BHj;class l extends a.mh{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,o,l,c,h){return(0,r.lub)((()=>{let d,p=!1;const f=[t/l,n/c,(a+t)/l,(o+n)/c],m=[];3===e.rank?(p=!0,d=(0,r.knu)([e])):d=e;for(let e=0;e<d.shape[0];e++)m.push(f);const g=(0,r.XeE)(m,[m.length,4]),b=(0,r.w6H)(0,m.length,1,"int32"),x=u(d,g,b,[a,o],"nearest");return p?i.pj((0,s.nQ)((0,r.HHK)(x)),h):i.pj(x,h)}))}upsize(e,t,n,s){return(0,r.lub)((()=>{const r=o(e,[t,n]);return i.pj(r,s)}))}call(e,t){return(0,r.lub)((()=>{const t=(0,s.nQ)(e),n=t.dtype,r=t.shape,a=r[r.length-3],i=r[r.length-2];let o=0;a!==this.height&&(o=Math.floor((a-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),0===u&&(u=1)),o>=0&&u>=0?this.centerCrop(t,o,u,this.height,this.width,a,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=(0,s.Wf)(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}l.className="CenterCrop",r.m7h.registerClass(l)},98710:function(e,t,n){"use strict";var r=n(20163),s=n(77124),a=n(87538),i=n(39840);class o extends r.mh{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.lub)((()=>("float32"!==(e=(0,a.nQ)(e)).dtype&&(e=i.pj(e,"float32")),(0,s.IHx)((0,s.dC7)(e,this.scale),this.offset))))}}o.className="Rescaling",s.m7h.registerClass(o)},36184:function(e,t,n){"use strict";var r=n(77124),s=n(20163),a=n(40588),i=n(87538);const o=new Set(["bilinear","nearest"]);class u extends s.mh{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!o.has(e.interpolation))throw new a.nu(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=(0,i.Wf)(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,r.lub)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return r.BHj.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return r.BHj.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...o]} are supported`)}))}}u.className="Resizing",r.m7h.registerClass(u)},14906:function(e,t,n){"use strict";var r=n(77124),s=n(87538),a=n(40588),i=n(20163);class o{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}o.className="RandomSeed";class u extends i.mh{constructor(e){super(e),this.randomGenerator=new o(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}u.className="BaseRandomLayer";const l=new Set(["bilinear","nearest"]);class c extends u{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new a.nu(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new a.nu(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new a.nu(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!l.has(n))throw new a.nu(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=(0,s.Wf)(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,r.lub)((()=>{const t=(0,s.nQ)(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,r.LGj)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const i=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return r.BHj.resizeBilinear(e,i);case"nearest":return r.BHj.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...l]} are supported`)}}))}}c.className="RandomWidth",r.m7h.registerClass(c)},49897:function(e,t,n){"use strict";n.d(t,{v:function(){return a}});var r=n(77124),s=n(2931);function a(e,t={},n=!1){return(0,s.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}},18012:function(e,t,n){"use strict";var r=n(77124),s=n(39840),a=n(48090),i=n(20163),o=n(40588),u=n(44685),l=n(2931),c=n(87538),h=n(76014),d=n(49897);class p extends i.mh{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t.layer,s=(0,d.v)(r,n);delete t.layer;const a={layer:s};return Object.assign(a,t),new e(a)}}class f extends p{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=(0,c.Wf)(e)).length<3)throw new o.nu(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=(0,c.Wf)(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,r.lub)((()=>{e=(0,c.nQ)(e);return(0,h.nd)(((e,n)=>[(0,c.nQ)(this.layer.call(e,t)),[]]),e,[],!1,null,null,!1,!0)[1]}))}}f.className="TimeDistributed",r.m7h.registerClass(f);class m extends p{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=(0,d.v)(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=(0,d.v)(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,l.xn(u.eY,"BidirectionalMergeMode",s),e.weights)throw new o.nj("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):l.Bq(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=(0,h.lx)(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],u=[];if(null!=n){const e=n.length;if(e%2>0)throw new o.nu("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new i.Zg({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),u.push(...r)}if(null!=r)throw new o.nj("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof i.Iy;for(const c of a)if(c instanceof i.Iy!==l)throw new o.nu("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const n=[e].concat(a),r=this.inputSpec.concat(u),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return(0,r.lub)((()=>{const n=t.initialState;let a,i,o,u;if(null==n)a=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),s=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(i.slice(1))),a=a[0],i=i[0]),this.returnSequences&&(i=r.GYS(i,1)),"concat"===this.mergeMode?u=s.mV([a,i]):"sum"===this.mergeMode?u=r.IHx(a,i):"ave"===this.mergeMode?u=r.dC7(.5,r.IHx(a,i)):"mul"===this.mergeMode?u=r.dC7(a,i):null==this.mergeMode&&(u=[a,i]),this.returnState?null==this.mergeMode?u.concat(o):[u].concat(o):u}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){(0,a.f4)(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),(0,a.f4)(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=(0,d.v)(t.layer);if(delete t.layer,null!=t.numConstants)throw new o.nj("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}m.className="Bidirectional",r.m7h.registerClass(m)},73146:function(e,t,n){"use strict";n.d(t,{Z:function(){return s},i:function(){return a}});var r=n(77124);async function s(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,r.B90)(s)}}function a(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}},86275:function(e,t,n){"use strict";n.d(t,{Eq:function(){return o},FD:function(){return u},KM:function(){return p},Ls:function(){return g},U2:function(){return x},dr:function(){return b},fO:function(){return f},ke:function(){return l},t3:function(){return c},uq:function(){return d}});var r=n(77124),s=n(12012),a=n(39840),i=n(40588);function o(e,t){return(0,r.lub)((()=>{"float32"!==e.dtype&&(e=r.pju(e,"float32"));const n=r.Smz(a.h6(e),t,!0),i=r.hlL(n.shape,(0,s.Ho)()),o=r._b3(r.gWQ(n,i));return r.hiC(e,o)}))}function u(e,t){return(0,r.lub)((()=>r.J69(a.h6(r.luU(t,e)),-1)))}function l(e,t){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(t,e)),-1)))}function c(e,t){return(0,r.lub)((()=>{const n=r.luU(e,t),a=r.iUl(r.WnP(e),(0,s.Ho)(),Number.MAX_VALUE),i=r.WnP(r.hiC(n,a));return r.dC7(100,r.J69(i,-1))}))}function h(e,t){return(0,r.lub)((()=>{const n=r.iUl(t,(0,s.Ho)(),Number.MAX_VALUE),i=r.cM7(r.IHx(1,n)),o=r.iUl(e,(0,s.Ho)(),Number.MAX_VALUE),u=r.cM7(r.IHx(1,o));return r.J69(a.h6(r.luU(i,u)),-1)}))}function d(e,t,n=!1){return(0,r.lub)((()=>{if(n)t=r.XAC(t);else{const e=r.Smz(t,t.shape.length-1,!0);t=r.hiC(t,e)}return t=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)()),r.W76(r.Smz(r.dC7(r.pju(e,"float32"),r.cM7(t)),t.shape.length-1))}))}function p(e,t,n=!1){return(0,r.lub)((()=>{const i=r.pju(r.GWj(a.xH(e)),"int32"),o=(t=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)())).shape;return d(r.XLQ(r.lfX(i,o[o.length-1]),o),t,n)}))}function f(e,t){return(0,r.lub)((()=>{let n;return n=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(e,t){if(!r.D5U.arraysEqual(e.shape,t.shape))throw new i.nu(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,r.lub)((()=>{const n=r.UYe(t),s=r.W76(r.WnP(t));return r.IHx(r.luU(n,r.dC7(t,e)),r.Krr(r.Qqt(s)))}))}(e,n),-1)}))}function m(e,t){return(0,r.lub)((()=>{const n=r.iUl(e,(0,s.Ho)(),1),a=r.iUl(t,(0,s.Ho)(),1);return r.Smz(r.dC7(e,r.cM7(r.hiC(n,a))),-1)}))}function g(e,t){return(0,r.lub)((()=>{const n=o(e,-1),s=o(t,-1),a=r.dC7(n,s);return r.W76(r.Smz(a,-1))}))}const b={meanSquaredError:u,meanAbsoluteError:l,meanAbsolutePercentageError:c,meanSquaredLogarithmicError:h,squaredHinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(a.h6(n),-1)}))},hinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(e,t),-1),s=r.Fp7(r.dC7(r.luU(1,e),t),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(e,t){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(t,e),a=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(a,-1)}))},categoricalCrossentropy:d,sparseCategoricalCrossentropy:p,binaryCrossentropy:f,kullbackLeiblerDivergence:m,poisson:function(e,t){return(0,r.lub)((()=>{const n=r.cM7(r.IHx((0,s.Ho)(),t));return r.J69(r.luU(t,r.dC7(e,n)),-1)}))},cosineProximity:g};function x(e){if("string"===typeof e){if(e in b)return b[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new i.nu(t)}return e}},38678:function(e,t,n){"use strict";n.d(t,{G5:function(){return l},KM:function(){return v},TY:function(){return d},U2:function(){return I},_F:function(){return u},aI:function(){return S},fO:function(){return h},uq:function(){return y}});var r=n(77124),s=n(39840),a=n(40588),i=n(86275),o=n(2931);function u(e,t){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(t)),a=s.pj(r.pjt(t,n),e.dtype);return r.J69(r.DgJ(e,a),-1)}))}function l(e,t){return(0,r.lub)((()=>s.pj(r.DgJ(r.NqF(e,-1),r.NqF(t,-1)),"float32")))}function c(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,1),r.DgJ(t,1))),"float32")))}function h(e,t){return(0,i.fO)(e,t)}function d(e,t){return e.rank===t.rank&&(e=r.L9e(e,[e.rank-1])),(t=r.NqF(t,-1)).dtype!==e.dtype&&(t=r.pju(t,e.dtype)),r.pju(r.DgJ(e,t),"float32")}const p=i.FD,f=i.FD,m=i.ke,g=i.ke,b=i.t3,x=i.t3,y=i.uq,k=i.Ls,v=i.KM,w={binaryAccuracy:u,categoricalAccuracy:l,precision:function(e,t){return(0,r.lub)((()=>{const n=c(e,t),s=function(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,0),r.DgJ(t,1))),"float32")))}(e,t),a=r.IHx(n,s);return r.pju(r.arb(r.pjt(a,0),r.hiC(n,a),0),"float32")}))},categoricalCrossentropy:y,sparseCategoricalCrossentropy:v,mse:p,MSE:f,mae:m,MAE:g,mape:b,MAPE:x,cosine:k};function I(e){if("string"===typeof e&&e in w)return w[e];if("string"!==typeof e&&null!=e)return e;throw new a.nu(`Unknown metric ${e}`)}function S(e){if(o.hu(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(i.dr))if(i.dr[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(w))if(w[n]===e){t=n;break}return void 0!==t?t:e.name}}},83066:function(e,t,n){"use strict";n.d(t,{FB:function(){return p}});var r=n(77124),s=n(79608),a=n(34396),i=n(20163),o=n(85337),u=n(40588),l=n(49897),c=n(2931),h=n(51977),d=n(87538);async function p(e,t){if(null==t&&(t={}),"string"===typeof e){const n=r.io.getLoadHandlers(e,t);if(0===n.length)n.push(r.io.browserHTTPRequest(e,t));else if(n.length>1)throw new u.nu(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new u.nu("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let a=s.modelTopology;null!=a.model_config&&(a=a.model_config);const i=null==n.strict||n.strict,o=null!=s.weightData&&null!=s.weightSpecs&&i,c=(0,l.v)((0,h.a)(a),t,o),d=s.trainingConfig;null!=d&&c.loadTrainingConfig(d);null!=s.userDefinedMetadata&&c.setUserDefinedMetadata(s.userDefinedMetadata);if(null!=s.weightData){if(null==s.weightSpecs)throw new u.nu("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=r.io.decodeWeights(e,t),s={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:a}}(s.weightData,s.weightSpecs);c.loadWeights(e,i),null!=c.optimizer&&t.length>0&&await c.optimizer.setWeights(t),(0,r.B90)(e),(0,r.B90)(t.map((e=>e.tensor)))}return c}(e,void 0,t)}class f extends o.QV{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:(0,s.s)("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new u.nu(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof f||e instanceof o.QV;let n;if(t){if(n=e,1!==n.outputs.length)throw new u.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u.nu("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new u.nu("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=(0,a.I)({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new u.nu(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new u.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=(0,i.hA)(this.outputs[0])}this.inboundNodes=[],new i.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:c.JE(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if((0,d.Wf)(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new o.QV({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new u.LH("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new u.LH("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new u.LH("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new u.LH("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new u.nu("Legacy serialization format not supported yet.");a=t}else r.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof f))throw new u.nj(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const r of a){const e=void 0,t=(0,l.v)(r,e,s);s&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new u.nu("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new u.nu("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}f.className="Sequential",r.m7h.registerClass(f)},92328:function(e,t,n){"use strict";n.d(t,{j:function(){return i}});var r=n(77124),s=n(12012),a=n(40588);function i(e){const t={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,(0,s.Ho)()),Adam:()=>r.p_j.adam(.001,.9,.999,(0,s.Ho)()),Adamax:()=>r.p_j.adamax(.002,.9,.999,(0,s.Ho)(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,(0,s.Ho)()),SGD:()=>r.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new a.nu(`Unknown Optimizer ${e}`)}},10539:function(e,t,n){"use strict";n.d(t,{EC:function(){return d},SG:function(){return c}});var r=n(77124),s=n(39840),a=n(2931);function i(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}class o extends r.m7h.Serializable{}class u extends o{constructor(e){super(),i(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.lub)((()=>{let t=(0,r.lls)([1]);return this.hasL1&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(e))))),this.hasL2&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l2,s.h6(e))))),r.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}u.className="L1L2",r.m7h.registerClass(u);const l={l1l2:"L1L2"};function c(e){return(0,a.Kj)(e)}function h(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function d(e){if(null==e)return null;if("string"===typeof e){return h({className:e in l?l[e]:e,config:{}})}return e instanceof o?e:h(e)}},38374:function(e,t,n){"use strict";n.d(t,{WE:function(){return s}});const r=1048576;function s(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!a(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>r&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function a(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!a(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!a(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}},26517:function(e,t,n){"use strict";n.d(t,{$U:function(){return u},AF:function(){return i},kt:function(){return o}});var r=n(40588),s=n(2931),a=n(96040);function i(e,t,n){if("number"===typeof e)return(0,s.JE)(e,t);if(e.length!==t)throw new r.nu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const i=e[s];if(!(0,a.U)(i))throw new r.nu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e}function o(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function u(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+(0,a.Fp)([n-t,0]);else{if("same"!==s)throw new r.nu(`Unsupport padding mode: ${s}.`);e*=t}return e}},2931:function(e,t,n){"use strict";n.d(t,{Bq:function(){return u},D1:function(){return c},Ds:function(){return I},JE:function(){return a},Kj:function(){return p},L7:function(){return g},Mx:function(){return k},QX:function(){return o},Tw:function(){return b},WT:function(){return S},hu:function(){return i},iQ:function(){return v},nK:function(){return x},tU:function(){return m},xn:function(){return y},zW:function(){return h},zZ:function(){return l}});var r=n(77124),s=n(40588);function a(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function i(e,t){if(!e)throw new s.ps(t)}function o(e,t){let n=0;for(const r of e)r===t&&n++;return n}function u(e){return 1===e.length?e[0]:e}function l(e){return Array.isArray(e)?e:[e]}function c(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function h(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let d={};function p(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function f(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>f(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?f(t):e[n]=t.value)}}}function m(e,t={},n={},r="object",a=!1){if("string"===typeof e){const a=e;let i;if(a in n)i=n[a];else if(a in d)i=d[a];else if(i=t[a],null==i)throw new s.nu(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new s.nu(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let u,l;if(o in n?[u,l]=n[o]:o in d?[u,l]=d.className:o in t&&([u,l]=t[o]),null==u)throw new s.nu(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(d))e[n]=d[n];for(const s of Object.keys(n))e[s]=n[s];i.config.customObjects=e;const t=Object.assign({},d);for(const s of Object.keys(n))d[s]=n[s];f(i.config);const r=l(u,i.config,n,a);return d=Object.assign({},t),r}{const e=Object.assign({},d);for(const r of Object.keys(n))d[r]=n[r];const t=new u(i.config);return d=Object.assign({},e),t}}}function g(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function b(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function x(e){if(null==e)throw new s.nu(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function y(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new s.nu(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function k(e,t,n=0,r=1/0){return i(n>=0),i(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function v(e,t){Array.isArray(e)?(r.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>v(e,`element ${n+1} of ${t}`)))):r.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${w(e)}.`))}function w(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>w(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function I(e,t,n){let s,a=null!=n?n():r.D5U.now();return(...i)=>{const o=null!=n?n():r.D5U.now();return o-a<t||(a=o,s=e(...i)),s}}function S(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}},30618:function(e,t,n){"use strict";n.d(t,{I:function(){return s}});var r=n(23013);function s(e,t,n,s=console.log){const u=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),l=["Layer (type)","Input Shape","Output shape","Param #"];let c;if(u?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!u){l.push("Receives inputs"),c=[];for(const t in e.nodesByDepth)c.push(...e.nodesByDepth[t])}s("_".repeat(t)),a(l,n,s),s("=".repeat(t));const h=e.layers;for(let r=0;r<h.length;++r)u?i(h[r],n,s):o(h[r],n,c,s),s((r===h.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const d=function(e){let t;t=null!=e.collectedTrainableWeights?(0,r.t)(e.collectedTrainableWeights):(0,r.t)(e.trainableWeights);return t}(e),p=(0,r.t)(e.nonTrainableWeights);s(`Total params: ${d+p}`),s(`Trainable params: ${d}`),s(`Non-trainable params: ${p}`),s("_".repeat(t))}function a(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function i(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(i){r="multiple"}a([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function o(e,t,n,r){let s,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(h){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(h){s="multiple"}const o=[];for(const a of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(a)))for(let e=0;e<a.inboundLayers.length;++e){const t=a.inboundLayers[e].name,n=a.nodeIndices[e],r=a.tensorIndices[e];o.push(`${t}[${n}][${r}]`)}const u=e.name,l=e.getClassName(),c=0===o.length?"":o[0];a([`${u} (${l})`,i,s,e.countParams().toString(),c],t,r);for(let d=1;d<o.length;++d)a(["","","","",o[d]],t,r)}},96040:function(e,t,n){"use strict";n.d(t,{Fp:function(){return o},NS:function(){return a},U:function(){return s},VV:function(){return i},w6:function(){return u}});var r=n(40588);function s(e){return e===parseInt(e.toString(),10)}function a(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function i(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function o(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function u(e,t){if(t<e)throw new r.nu(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}},51977:function(e,t,n){"use strict";n.d(t,{a:function(){return a},q:function(){return i}});var r=n(2931);function s(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function a(e,t){if(null===e)return null;if("string"===typeof e)return r.zW(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];s(t,i,r)?n.push(r):n.push(a(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=r.zW(n);t[e]=a(s,e)}}return t}}function i(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return r.D1(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];s(t,a,r)?n.push(r):n.push(i(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],a=r.D1(n);t[a]="name"!==n&&"className"!==n||"string"!==typeof s?i(s,n):s}return t}}},87538:function(e,t,n){"use strict";n.d(t,{Wf:function(){return o},XO:function(){return s},nQ:function(){return i},x6:function(){return a}});var r=n(40588);function s(e){return Array.isArray(e)&&Array.isArray(e[0])}function a(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function i(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new r.nu(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function o(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new r.nu(`Expected exactly 1 Shape; got ${e.length}`)}return e}},23013:function(e,t,n){"use strict";function r(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}n.d(t,{t:function(){return r}})},41653:function(e,t,n){"use strict";n.d(t,{FQ:function(){return u},fU:function(){return o},zb:function(){return l}});var r=n(77124),s=n(79608),a=n(48090);n(40588);const i="Variable";class o{constructor(e,t="float32",n="Variable",o=!0,u=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=(0,s.L)(),n=null==n?i:n,this.originalName=(0,a.MU)(n),this.name=(0,a.w8)(this.originalName),this.trainable_=o,this.constraint=u,this.val=r.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function u(e){return e.map((e=>e.read()))}function l(e){e.forEach((e=>{e[0].write(e[1])}))}},77385:function(e,t,n){"use strict";n.d(t,{i:function(){return r}});const r="4.7.0"},6077:function(e,t,n){"use strict";n.d(t,{FBF:function(){return Qr.FB},luU:function(){return r.luU},odF:function(){return r.odF}});var r=n(77124),s=n(29121),a=n(62271),i=n(24841),o=n(71901);const u={kernelName:s.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,o.N)((0,a.p)(n,"float32"),-1))}}};var l=n(41274),c=n(17370),h=n(99494),d=n(13261),p=n(50248),f=n(70827);const m={kernelName:s.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.h)((0,a.p)(n,"float32")),r=(0,d._)((0,f.l)((0,h.i)(1),t));return(0,c.W)((0,l.h)(e,r))}}}},g={kernelName:s.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,d._)((0,f.l)((0,p.h)((0,a.p)(n,"float32")),1));return(0,l.h)(e,t)}}}};var b=n(72200),x=n(4968),y=n(15475);const k={kernelName:s.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=b.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,y.S)(t,r)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,y.S)(t,n)),(0,x.X)(t,r.shape)}}}},v={kernelName:s.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var w=n(6577);const I={kernelName:s.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,w.P)(n)}}},S={kernelName:s.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,w.P)(n)}}},C={kernelName:s.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,d._)((0,f.l)((0,h.i)(1),(0,p.h)((0,a.p)(n,"float32")))))}}};var N=n(56407);const T={kernelName:s.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,d._)((0,N.I)((0,h.i)(1),(0,p.h)((0,a.p)(n,"float32"))));return(0,l.h)(e,t)}}}},$={kernelName:s.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,N.I)((0,p.h)(n),(0,p.h)(r));let a=(0,i.d)(e,(0,l.h)(r,t));const o=(0,b.getReductionAxes)(n.shape,s);return o.length>0&&(a=(0,y.S)(a,o)),(0,x.X)(a,n.shape)},b:()=>{const t=(0,N.I)((0,p.h)(n),(0,p.h)(r));let a=(0,c.W)((0,i.d)(e,(0,l.h)(n,t)));const o=(0,b.getReductionAxes)(r.shape,s);return o.length>0&&(a=(0,y.S)(a,o)),(0,x.X)(a,r.shape)}}}},E={kernelName:s.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,N.I)((0,p.h)((0,a.p)(n,"float32")),1))}}},A={kernelName:s.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,f.l)((0,h.i)(1),(0,p.h)((0,a.p)(n,"float32"))))}}};var D=n(50196),R=n(43740),F=n(20569),_=n(2582),O=n(2668);const M=(0,O.op)({avgPool3dGrad_:function(e,t,n,r,a,i){const o=(0,R._1)(e,"dy","avgPool3dGrad"),u=(0,R._1)(t,"input","avgPool3dGrad");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F.hu(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),F.hu(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),(0,_.m)("avgPool3dGrad",a,i);const d={dy:l,input:c},p={filterSize:n,strides:r,pad:a,dimRoundingMode:i},f=D.BV.runKernel(s.IMb,d,p);return h?(0,x.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),B={kernelName:s._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>M(e,r,s,a,i,o)}}};const W=(0,O.op)({avgPoolGrad_:function(e,t,n,r,a){const i=(0,R._1)(e,"dy","avgPoolGrad"),o=(0,R._1)(t,"input","avgPoolGrad");F.hu(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let u=o,l=i,c=!1;3===o.rank&&(c=!0,u=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F.hu(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),F.hu(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:a},p=D.BV.runKernel(s.ROF,h,d);return c?(0,x.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),L={kernelName:s.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>W(e,r,s,a,i)}}};var U=n(28687);const z={kernelName:s.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,U.O)(e,s,!1,!1),b:()=>(0,U.O)(e,r,!0,!1)}:a&&!i?{a:()=>(0,U.O)(s,e,!1,!0),b:()=>(0,U.O)(r,e,!1,!1)}:{a:()=>(0,U.O)(s,e,!0,!0),b:()=>(0,U.O)(e,r,!0,!0)}:{a:()=>(0,U.O)(e,s,!1,!0),b:()=>(0,U.O)(r,e,!0,!1)}}};const P=(0,O.op)({spaceToBatchND_:function(e,t,n){const r=(0,R._1)(e,"x","spaceToBatchND");F.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),F.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),F.hu(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return D.BV.runKernel(s.TQc,a,i)}}),V={kernelName:s.zws,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>P(e,r,s)}}},H={kernelName:s.Ly9,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])i[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>(0,y.S)(e,o,!0)}}},G={kernelName:s.RFZ,gradFunc:e=>({x:()=>e.clone()})},j={kernelName:s.gJX,gradFunc:e=>({x:()=>(0,w.P)(e)})};var X=n(17630),q=n(50624),K=n(2856),Q=n(95912);const Y={kernelName:s.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,Q.a)((0,K.H)((0,X.b)(r,s),(0,q.z)(r,a)),e,(0,w.P)(e))}}},Z={kernelName:s.yj2,inputsToSave:["x"],gradFunc:u.gradFunc};var J=n(28644);const ee={kernelName:s.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,F.EC)(s,t[0].shape)[0],i=r.map((e=>e[a]));return(0,J.V)(e,i,a).map((e=>()=>e))}};var te=n(36013),ne=n(39832);const re={kernelName:s.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return F.hu(_.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,ne._)(r.shape,e,s,i,o,u),filter:()=>(0,te.p)(r,e,s.shape,i,o,u)}}};var se=n(64794);const ae={kernelName:s.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,se.T)(e,s,a,i,o,1,u),filter:()=>(0,te.p)(e,r,s.shape,a,i,o,u)}}};const ie=(0,O.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let i=e;4===e.rank&&(i=(0,x.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,x.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F.hu(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),F.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),F.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F.hu(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),F.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const u={x:i,dy:o},l={strides:r,pad:a,filterShape:n};return D.BV.runKernel(s.o2y,u,l)}});var oe=n(97594);const ue={kernelName:s.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;F.hu((0,_.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,oe._)(i.shape,e,o,s,a),filter:()=>ie(i,e,o.shape,s,a)}}};const le=(0,O.op)({sin_:function(e){const t={x:(0,R._1)(e,"x","sin","float32")};return D.BV.runKernel(s.RQH,t)}}),ce={kernelName:s.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)((0,c.W)(le((0,a.p)(n,"float32"))),e)}}};const he=(0,O.op)({sinh_:function(e){const t={x:(0,R._1)(e,"x","sinh")};return D.BV.runKernel(s.wYB,t)}}),de={kernelName:s.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(he((0,a.p)(n,"float32")),e)}}};var pe=n(83591);const fe=(0,O.op)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:(0,R._1)(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return D.BV.runKernel(s.iHb,a,i)}});var me=n(89065);const ge={kernelName:s.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,pe.Q3)([s],r.rank);let n=fe(e,s,a,!i);return null!=t&&(n=(0,me.p)(n,t)),n}}}};var be=n(88098),xe=n(54375);const ye={kernelName:s.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;F.hu(_.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return F.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),F.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),F.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),F.hu(_.jT(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),_.m("depthwiseConv2d",a,i),{x:()=>(0,xe.v)(u.shape,e,l,s,a,o,i),filter:()=>(0,be.z)(u,e,l.shape,s,a,o,i)}}},ke={kernelName:s.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>D.BV.runKernel(s.ekb,i,n),filter:()=>D.BV.runKernel(s.Vn9,o,n)}}},ve={kernelName:s.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>D.BV.runKernel(s.HEU,r)}}};var we=n(44842);const Ie={kernelName:s.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,i.d)((0,we.Q)((0,c.W)((0,p.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,i.d)(e,r)}}},Se={kernelName:s.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,n)}}},Ce={kernelName:s.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,x.X)(e,n.shape)}}},Ne={kernelName:s.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,we.Q)(n))}}},Te={kernelName:s.OR,gradFunc:e=>({x:()=>(0,w.P)(e)})},$e={kernelName:s.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,l.h)(e,(0,a.p)(r,"float32")),i=(0,b.getReductionAxes)(n.shape,s);return i.length>0?(0,x.X)((0,y.S)(t,i),n.shape):t},b:()=>{let t=(0,i.d)(e,(0,a.p)(n,"float32"));const o=(0,b.getReductionAxes)(r.shape,s);o.length>0&&(t=(0,x.X)((0,y.S)(t,o),r.shape));const u=(0,p.h)(r);return(0,c.W)((0,l.h)(t,(0,a.p)(u,"float32")))}}}};const Ee=(0,O.op)({rsqrt_:function(e){const t={x:(0,R._1)(e,"x","rsqrt","float32")};return D.BV.runKernel(s.bV0,t)}});var Ae=n(47501);const De={kernelName:s.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,u]=t,l=null==u?(0,h.i)(1):u,c=(0,b.getReductionAxes)(a.shape,s.shape),d=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)d.push(s.shape[e]);d.push(1)}const p=(0,f.l)(s,a),m=(0,i.d)(e,l),g=Ee((0,N.I)(o,(0,h.i)(r))),k=(0,i.d)((0,i.d)((0,i.d)(g,g),g),(0,h.i)(-.5));return{x:()=>1===a.rank?(0,x.X)((0,i.d)((0,i.d)(e,(0,Ae.G)((0,x.X)(g,[1,1,1,a.shape[0]]),d)),l),s.shape):(0,x.X)((0,i.d)((0,i.d)(e,g),l),s.shape),mean:()=>{let e=(0,i.d)((0,i.d)(g,(0,h.i)(-1)),m);return 1===a.rank&&(e=(0,y.S)(e,c)),(0,x.X)(e,a.shape)},variance:()=>{let e=(0,i.d)((0,i.d)(k,p),m);return 1===a.rank&&(e=(0,y.S)(e,c)),(0,x.X)(e,a.shape)},scale:()=>{const t=(0,i.d)(p,g);let n=(0,i.d)(e,t);return 1===a.rank&&(n=(0,y.S)(n,c)),(0,x.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,y.S)(t,c)),(0,x.X)(t,a.shape)}}}};const Re=(0,O.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,R._1)(e,"x","unsortedSegmentSum"),a=(0,R._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,F.hu)((0,F.GN)(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},o={numSegments:n};return D.BV.runKernel(s.Qvg,i,o)}}),Fe={kernelName:s.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=(0,F.EC)(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=_e(0,u),d=_e(u+1,u+1+c),p=Oe([o,[n],l]),f=(0,x.X)(e,p),m=(0,x.X)(s,[n]),g=Oe([[u],h,d]),b=(0,me.p)(f,g);let y=Re(b,m,r.shape[i]);const k=(0,pe.LJ)(g);return y=(0,me.p)(y,k),y},indices:()=>s}}};function _e(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Oe(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Me={kernelName:s.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,w.P)(n),b:()=>(0,w.P)(r)}}},Be={kernelName:s.iJz,gradFunc:e=>({x:()=>(0,a.p)(e,"float32")})},We={kernelName:s.avt,gradFunc:e=>({x:()=>(0,w.P)(e)})},Le={kernelName:s.iWB,gradFunc:e=>({x:()=>(0,w.P)(e)})},Ue={kernelName:s.r7n,gradFunc:e=>({x:()=>(0,w.P)(e)})};var ze=n(20636);const Pe={kernelName:s.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,ze.p)(r,0);return{x:()=>(0,Q.a)(a,e,(0,i.d)(e,s))}}},Ve={kernelName:s.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,N.I)(n,1))}}},He={kernelName:s.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,a.p)(n,"float32"))}}},Ge={kernelName:s.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,we.Q)(r);return(0,f.l)(e,(0,i.d)((0,y.S)(e,s,!0),t))}}}};const je=(0,O.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,i=1,o=.5){const u={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:i,beta:o};return D.BV.runKernel(s.Hhh,u,l)}}),Xe={kernelName:s.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>je(r,s,e,a,i,o,u)}}};var qe=n(26477);function Ke(e,t,n,r){return t.rank<n.rank&&(t=(0,x.X)(t,pe.rv(t.shape,r))),e.rank<n.rank&&(e=(0,x.X)(e,pe.rv(e.shape,r))),{x:()=>(0,i.d)(e,(0,a.p)((0,qe.D)(n,t),e.dtype))}}const Qe={kernelName:s.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Ke(e,t[1],a,F.EC(s,a.shape));return{x:()=>i.x()}}};var Ye=n(86573);const Ze={kernelName:s.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,i.d)(e,(0,a.p)((0,X.b)(n,r),"float32")),b:()=>(0,i.d)(e,(0,a.p)((0,Ye.d)(n,r),"float32"))}}};const Je=(0,O.op)({maxPool3dGrad_:function(e,t,n,r,a,i,o){const u=(0,R._1)(e,"dy","maxPool3dGrad"),l=(0,R._1)(t,"input","maxPool3dGrad"),c=(0,R._1)(n,"output","maxPool3dGrad");let h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F.hu(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),F.hu(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),F.hu(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,_.m)("maxPool3dGrad",i,o);const m={dy:h,input:d,output:p},g={filterSize:r,strides:a,pad:i,dimRoundingMode:o},b=D.BV.runKernel(s.OU7,m,g);return f?(0,x.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),et={kernelName:s.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Je(e,r,s,a,i,o,u)}}};const tt=(0,O.op)({maxPoolGrad_:function(e,t,n,r,a,i,o){const u=(0,R._1)(e,"dy","maxPoolGrad"),l=(0,R._1)(t,"input","maxPoolGrad"),c=(0,R._1)(n,"output","maxPoolGrad");F.hu(l.rank===u.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`)),F.hu(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),F.hu(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),_.m("maxPoolGrad",i,o);const h={dy:u,input:l,output:c},d={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return D.BV.runKernel(s.OV7,h,d)}}),nt={kernelName:s.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>tt(e,r,s,a,i,o)}}};var rt=n(44917);const st={kernelName:s.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=F.EC(s,r.shape),o=(0,pe.kz)(r.shape,a)[1],u=F.NA(o);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,x.X)(e,t);return(0,l.h)((0,i.d)(n,(0,rt.i)(r.shape,"float32")),u)}}}},at={kernelName:s.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Ke(e,i,a,F.EC(s,a.shape));return{x:()=>o.x()}}},it={kernelName:s.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,i.d)(e,(0,a.p)((0,q.z)(n,r),"float32")),b:()=>(0,i.d)(e,(0,a.p)((0,ze.p)(n,r),"float32"))}}};var ot=n(22676);const ut={kernelName:s.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,ot.t)(e,a,r.shape)}}};var lt=n(26943);const ct={kernelName:s.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,b.getReductionAxes)(n.shape,s);return t.length>0?(0,x.X)((0,y.S)(e,t),n.shape):e},b:()=>{const t=(0,i.d)(e,(0,c.W)((0,lt.G)((0,l.h)(n,r)))),a=(0,b.getReductionAxes)(r.shape,s);return a.length>0?(0,x.X)((0,y.S)(t,a),r.shape):t}}}},ht={kernelName:s.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,i.d)(e,(0,a.p)(r,"float32")),o=(0,b.getReductionAxes)(n.shape,s);return o.length>0?(0,x.X)((0,y.S)(t,o),n.shape):t},b:()=>{const t=(0,i.d)(e,(0,a.p)(n,"float32")),o=(0,b.getReductionAxes)(r.shape,s);return o.length>0?(0,x.X)((0,y.S)(t,o),r.shape):t}}}},dt={kernelName:s.kuV,gradFunc:e=>({x:()=>(0,c.W)(e)})};var pt=n(59640);const ft={kernelName:s.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,pt.l)(n.shape,"float32")}}},mt={kernelName:s.qWM,gradFunc:e=>({x:()=>(0,w.P)(e)})};var gt=n(24136);const bt={kernelName:s.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,gt.H)(e,r).map((e=>()=>e))}},xt={kernelName:s.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,ot.t)(e,a,r.shape)}}};var yt=n(82597),kt=n(33453);const vt={kernelName:s.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,o=n,u=r,l=b.assertAndGetBroadcastShape(o.shape,u.shape);return{a:()=>{const t=(0,a.p)(u,"float32");let n=(0,i.d)(e,(0,i.d)(t,(0,kt.s)(o,(0,f.l)(t,(0,h.i)(1)))));const r=b.getReductionAxes(o.shape,l);return r.length>0&&(n=(0,y.S)(n,r)),(0,x.X)(n,o.shape)},b:()=>{const t=(0,ze.p)(o,0),n=(0,Q.a)(t,(0,yt.c)(o),(0,w.P)(o));let r=(0,i.d)(e,(0,i.d)(s,n));const a=b.getReductionAxes(u.shape,l);return a.length>0&&(r=(0,y.S)(r,a)),(0,x.X)(r,u.shape)}}}},wt={kernelName:s.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ze.p)(n,0);return{x:()=>(0,Q.a)(s,e,(0,i.d)(e,r)),alpha:()=>{let t=(0,Q.a)(s,(0,w.P)(e),(0,i.d)(e,n));const a=(0,b.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,y.S)(t,a)),(0,x.X)(t,r.shape)}}}};const It=(0,O.op)({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:(0,R._1)(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return D.BV.runKernel(s.Byc,a,i)}});function St(e,t,n){const r=e.shape.length,s=r-n.length,a=pe.Q3(n,r);let o=e;null!=a&&(o=(0,me.p)(e,a));const u=o.shape.slice(),l=u.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);u.push(l);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,x.X)(t,r),a=It(e,n,!0,!1),o=It(e,n,!0,!0),u=(0,i.d)(a,o);return(0,i.d)(s,u)}(o.reshape(u),t,s);if(c=c.reshape(o.shape),null!=a){const e=pe.LJ(a);c=(0,me.p)(c,e)}return c}const Ct={kernelName:s.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>St(r,e,a)}}},Nt={kernelName:s.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,l.h)(e,(0,a.p)(r,"float32")),i=b.getReductionAxes(n.shape,s);return i.length>0?(0,x.X)((0,y.S)(t,i),n.shape):t},b:()=>{let t=(0,i.d)(e,(0,a.p)(n,"float32"));const o=b.getReductionAxes(r.shape,s);o.length>0&&(t=(0,x.X)((0,y.S)(t,o),r.shape));const u=(0,p.h)(r);return(0,c.W)((0,l.h)(t,(0,a.p)(u,"float32")))}}}},Tt={kernelName:s.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,c.W)((0,p.h)(n)))}}},$t={kernelName:s.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,i.d)((0,q.z)(n,6),(0,o.N)(n));return{x:()=>(0,i.d)(e,(0,a.p)(r,"float32"))}}},Et={kernelName:s.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,a.p)((0,o.N)(n),"float32"))}}},At={kernelName:s.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,x.X)(e,n.shape)}}},Dt={kernelName:s._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>D.BV.runKernel(s.zbQ,a,n)}}},Rt={kernelName:s.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>D.BV.runKernel(s.Hmb,a,n)}}};var Ft=n(57486);const _t={kernelName:s.mKl,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,F.EC)(r,e.shape);return{x:()=>(0,Ft.G)(e,s)}}},Ot={kernelName:s.e07,gradFunc:e=>({x:()=>(0,w.P)(e)})},Mt={kernelName:s.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.W)((0,l.h)(e,(0,i.d)((0,kt.s)(n,1.5),2)))}}};const Bt=(0,O.op)({logicalNot_:function(e){const t={x:(0,R._1)(e,"x","logicalNot","bool")};return D.BV.runKernel(s.VfG,t)}}),Wt={kernelName:s.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,a.p)((0,w.P)(n),"float32"),t:()=>(0,i.d)(e,(0,a.p)(n,e.dtype)),e:()=>(0,i.d)(e,(0,a.p)(Bt(n),e.dtype))}}};var Lt=n(43179);const Ut={kernelName:s.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ze.p)(n,(0,h.i)(0)),r=(0,h.i)(Lt.y),s=(0,h.i)(Lt.$),o=(0,i.d)(e,s),u=(0,i.d)((0,i.d)(e,r),(0,we.Q)((0,a.p)(n,"float32")));return(0,Q.a)(t,o,u)}}}},zt={kernelName:s.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,i.d)(n,(0,f.l)((0,h.i)(1),n)))}}},Pt={kernelName:s.i5y,gradFunc:e=>({x:()=>(0,w.P)(e)})};const Vt=(0,O.op)({cos_:function(e){const t={x:(0,R._1)(e,"x","cos","float32")};return D.BV.runKernel(s.mc4,t)}}),Ht={kernelName:s.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(Vt((0,a.p)(n,"float32")),e)}}};const Gt=(0,O.op)({cosh_:function(e){const t={x:(0,R._1)(e,"x","cosh","float32")};return D.BV.runKernel(s.TR1,t)}}),jt={kernelName:s.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(Gt((0,a.p)(n,"float32")),e)}}};var Xt=n(39682),qt=n(37650);const Kt={kernelName:s.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=(0,qt.parseSliceParams)(r,s,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>(0,Xt.v)(e,l)}}},Qt={kernelName:s.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,i.d)(e,r);return{logits:()=>(0,f.l)(a,(0,i.d)((0,y.S)(a,[s],true),r))}}};var Yt=n(30625);const Zt={kernelName:s.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,Yt.X)(n))}}};const Jt=(0,O.op)({batchToSpaceND_:function(e,t,n){const r=(0,R._1)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));F.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),F.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),F.hu(r.shape[0]%a===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},o={blockShape:t,crops:n};return D.BV.runKernel(s.zws,i,o)}}),en={kernelName:s.TQc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Jt(e,r,s)}}};var tn=n(46884);const nn={kernelName:s.L8s,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,tn.z)(e,r)}}},rn={kernelName:s.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,i.d)((0,d._)((0,a.p)(n,"float32")),2))}}},sn={kernelName:s.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)(e,(0,i.d)((0,a.p)(n,"float32"),2))}}},an={kernelName:s._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,h.i)(2);return{a:()=>(0,i.d)(e,(0,i.d)(s,(0,f.l)(n,r))),b:()=>(0,i.d)(e,(0,i.d)(s,(0,f.l)(r,n)))}}},on={kernelName:s.h8e,gradFunc:e=>({x:()=>(0,w.P)(e)})},un={kernelName:s.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=b.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,y.S)(t,r)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,y.S)(t,n)),(0,x.X)((0,c.W)(t),r.shape)}}}},ln={kernelName:s.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,F.EC)(a,r.shape).forEach((e=>{s[e]=1}));const o=(0,x.X)(e,s),u=(0,i.d)(o,(0,rt.i)(r.shape,"float32"));return{x:()=>u}}},cn={kernelName:s.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,l.h)(e,(0,p.h)(Vt(n)))}}},hn={kernelName:s.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.d)((0,f.l)((0,h.i)(1),(0,p.h)(n)),e)}}},dn={kernelName:s.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,w.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,N.I)(t,(0,ot.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,N.I)(t,(0,ot.t)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=(0,N.I)(t,(0,ot.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=(0,N.I)(t,(0,ot.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},pn={kernelName:s.G3Y,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=pe.LJ(s);return{x:()=>(0,me.p)(e,a)}}};var fn=n(82991);const mn={kernelName:s.ToN,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,fn.k)(e,s)}}};var gn=n(81300),bn=n(24926),xn=n(80632);const yn={kernelName:s.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,xn.g)(t,(0,w.P)(t)),r=(0,bn.I)(e,n);let s=(0,X.b)(t,(0,h.i)(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=(0,gn.d)(s,o+1);s=(0,K.H)(s,(0,rt.i)(r.shape,"bool"));const i=(0,w.P)(r);return(0,Q.a)(s,r,i)}(e,n)}}};const kn={kernelName:s.RuY,gradFunc:e=>({x:()=>(0,w.P)(e)})};var vn=n(26151);const wn=[u,m,g,k,v,I,S,C,T,$,E,A,B,L,z,V,H,G,j,Y,Z,ee,ae,re,ue,ce,de,ge,ye,ke,Nt,ve,Ie,Se,Ce,Ne,$e,Te,De,Fe,Me,Be,We,Le,Ue,Pe,Ve,He,Ge,Xe,Qe,Qe,Ze,et,nt,st,at,it,ut,ct,ht,dt,ft,mt,bt,xt,xt,vt,wt,Ct,Tt,$t,Et,At,Dt,Rt,_t,Ot,Mt,Wt,Ut,zt,Pt,Ht,jt,Kt,Qt,Zt,en,en,nn,nn,rn,an,sn,on,un,ln,cn,hn,dn,pn,mn,yn,kn];for(const Xg of wn)(0,vn.Li)(Xg);var In=n(96235),Sn=n(40974);(0,Sn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,In.W)(this)};const Cn=(0,O.op)({acos_:function(e){const t={x:(0,R._1)(e,"x","acos")};return D.BV.runKernel(s.VGw,t)}});(0,Sn.t3)().prototype.acos=function(){return this.throwIfDisposed(),Cn(this)};const Nn=(0,O.op)({acosh_:function(e){const t={x:(0,R._1)(e,"x","acosh")};return D.BV.runKernel(s.SpW,t)}});(0,Sn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),Nn(this)},(0,Sn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,N.I)(this,e)};var Tn=n(90781);(0,Sn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Tn.$)(this,e,t)};var $n=n(92998);(0,Sn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,$n.Y)(this,e,t)};var En=n(40047);(0,Sn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,En.N)(this,e)};const An=(0,O.op)({argMin_:function(e,t=0){const n={x:(0,R._1)(e,"x","argMin")},r={axis:t};return D.BV.runKernel(s.aJk,n,r)}});(0,Sn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),An(this,e)},(0,Sn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,F.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.X)(this,[])},(0,Sn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,a.p)(this,e)},(0,Sn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Sn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,x.X)(this,[e,t])},(0,Sn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n])},(0,Sn.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,r])},(0,Sn.t3)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,r,s])};const Dn=(0,O.op)({asin_:function(e){const t={x:(0,R._1)(e,"x","asin")};return D.BV.runKernel(s.M2y,t)}});(0,Sn.t3)().prototype.asin=function(){return this.throwIfDisposed(),Dn(this)};const Rn=(0,O.op)({asinh_:function(e){const t={x:(0,R._1)(e,"x","asinh")};return D.BV.runKernel(s.qw7,t)}});(0,Sn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),Rn(this)};const Fn=(0,O.op)({atan_:function(e){const t={x:(0,R._1)(e,"x","atan")};return D.BV.runKernel(s.jMg,t)}});(0,Sn.t3)().prototype.atan=function(){return this.throwIfDisposed(),Fn(this)};var _n=n(80747);const On=(0,O.op)({atan2_:function(e,t){let n=(0,R._1)(e,"a","atan2"),r=(0,R._1)(t,"b","atan2");[n,r]=(0,_n.makeTypesMatch)(n,r);const a={a:n,b:r};return D.BV.runKernel(s.QCc,a)}});(0,Sn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),On(this,e)};const Mn=(0,O.op)({atanh_:function(e){const t={x:(0,R._1)(e,"x","atanh")};return D.BV.runKernel(s.Oyi,t)}});(0,Sn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),Mn(this)};var Bn=n(15176);(0,Sn.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Bn.w)(this,e,t,n,r)},(0,Sn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Jt(this,e,t)};var Wn=n(40094);(0,Sn.t3)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Wn.t)(this,e,t,n,r,s)};var Ln=n(68247);(0,Sn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Ln.U)(this,e)},(0,Sn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,a.p)(this,e)};const Un=(0,O.op)({ceil_:function(e){const t={x:(0,R._1)(e,"x","ceil","float32")};return D.BV.runKernel(s.gJX,t)}});(0,Sn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),Un(this)};var zn=n(42279);(0,Sn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,zn.i)(this,e,t)},(0,Sn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Sn.es&&(e=[e]),(0,tn.z)([this,...e],t)};var Pn=n(11355);(0,Sn.t3)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Pn.P)(this,e,t,n,r,s,a)};var Vn=n(71405);(0,Sn.t3)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Vn.b)(this,e,t,n,r,s)},(0,Sn.t3)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,se.T)(this,e,t,n,r,s,a)},(0,Sn.t3)().prototype.cos=function(){return this.throwIfDisposed(),Vt(this)},(0,Sn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),Gt(this)},(0,Sn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),It(this,e,t,n)},(0,Sn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),fe(this,e,t,n)};const Hn=(0,O.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,R._1)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];F.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),F.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),F.hu(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),F.hu(o%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const u={x:r},l={blockSize:t,dataFormat:n};return D.BV.runKernel(s.T0n,u,l)}});(0,Sn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Hn(this,e,t)};var Gn=n(64718);(0,Sn.t3)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Gn.B)(this,e,t,n,r,s,a)};const jn=(0,O.op)({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const o=(0,R._1)(e,"x","dilation2d"),u=(0,R._1)(t,"filter","dilation2d");F.hu(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),F.hu(3===u.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${u.rank}.`)),F.hu("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=o,c=!1;3===o.rank&&(l=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),F.hu(l.shape[3]===u.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${u.shape[2]}`));const h={x:l,filter:u},d={strides:n,pad:r,dilations:a},p=D.BV.runKernel(s.p4S,h,d);return c?(0,x.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});(0,Sn.t3)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),jn(this,e,t,n,r,s)};const Xn=(0,O.op)({divNoNan_:function(e,t){let n=(0,R._1)(e,"a","div"),r=(0,R._1)(t,"b","div");[n,r]=(0,_n.makeTypesMatch)(n,r);const s=(0,l.h)(n,r),a=(0,w.P)(s),i=(0,qe.D)(r,a);return(0,Q.a)(i,a,s)}});(0,Sn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Xn(this,e)},(0,Sn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,l.h)(this,e)};const qn=(0,O.op)({dot_:function(e,t){const n=(0,R._1)(e,"t1","dot"),r=(0,R._1)(t,"t2","dot");F.hu((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(F.hu(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=(0,x.X)(n,[1,-1]),t=(0,x.X)(r,[-1,1]),s=(0,U.O)(e,t);return(0,x.X)(s,[])}if(1===n.rank&&2===r.rank){const e=(0,x.X)(n,[1,-1]),t=(0,x.X)(r,[r.shape[0],r.shape[1]]),s=(0,U.O)(e,t);return(0,x.X)(s,[s.size])}if(2===n.rank&&1===r.rank){const e=(0,x.X)(r,[-1,1]),t=(0,U.O)(n,e);return(0,x.X)(t,[t.size])}{const e=(0,x.X)(r,[r.shape[0],r.shape[1]]);return(0,U.O)(n,e)}}});(0,Sn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),qn(this,e)};var Kn=n(83233);(0,Sn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Kn.p)(this)},(0,Sn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,qe.D)(this,e)};const Qn=(0,O.op)({erf_:function(e){let t=(0,R._1)(e,"x","erf");F.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,a.p)(t,"float32"));const n={x:t};return D.BV.runKernel(s.Omj,n)}});(0,Sn.t3)().prototype.erf=function(){return this.throwIfDisposed(),Qn(this)};var Yn=n(3561);const Zn=(0,O.op)({euclideanNorm_:function(e,t=null,n=!1){return(0,Yn.K)(e,"euclidean",t,n)}});(0,Sn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Zn(this,e,t)},(0,Sn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,we.Q)(this)},(0,Sn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,gn.d)(this,e)};const Jn=(0,O.op)({expm1_:function(e){const t={x:(0,R._1)(e,"x","expm1")};return D.BV.runKernel(s.Y0y,t)}});(0,Sn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),Jn(this)};var er=n(7020);(0,Sn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,er.k)(this)},(0,Sn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Sn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,lt.G)(this)};var tr=n(9165);(0,Sn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,tr.q)(this,e)},(0,Sn.t3)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,bn.I)(this,e,t,n)},(0,Sn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,X.b)(this,e)},(0,Sn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,ze.p)(this,e)};var nr=n(88447);(0,Sn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,nr.S)(this)};var rr=n(84415);(0,Sn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,rr.w)(this)};const sr=(0,O.op)({isFinite_:function(e){const t={x:(0,R._1)(e,"x","isFinite")};return D.BV.runKernel(s.avt,t)}});(0,Sn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),sr(this)};const ar=(0,O.op)({isInf_:function(e){const t={x:(0,R._1)(e,"x","isInf")};return D.BV.runKernel(s.iWB,t)}});(0,Sn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),ar(this)};const ir=(0,O.op)({isNaN_:function(e){const t={x:(0,R._1)(e,"x","isNaN")};return D.BV.runKernel(s.r7n,t)}});(0,Sn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),ir(this)};var or=n(99133);(0,Sn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,or.h)(this,e)},(0,Sn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,q.z)(this,e)},(0,Sn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,Ye.d)(this,e)};const ur=(0,O.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=(0,R._1)(e,"x","localResponseNormalization");F.hu(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),F.hu(F.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=i,u=!1;3===i.rank&&(u=!0,o=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},c={depthRadius:t,bias:n,alpha:r,beta:a},h=D.BV.runKernel(s.eZ0,l,c);return u?(0,x.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});(0,Sn.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ur(this,e,t,n,r)};var lr=n(30633),cr=n(3694);const hr=(0,O.op)({logSigmoid_:function(e){const t=(0,R._1)(e,"x","logSigmoid"),n=(0,lr.cb)((e=>({value:(0,c.W)((0,cr.W)((0,c.W)(e))),gradFunc:t=>(0,i.d)(t,(0,Yt.X)((0,c.W)(e)))})));return n(t)}});(0,Sn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),hr(this)};var dr=n(31510);(0,Sn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,dr.C)(this,e)};var pr=n(11391);(0,Sn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,pr.l)(this,e,t)},(0,Sn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,yt.c)(this)};var fr=n(17474);(0,Sn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,fr.K)(this)},(0,Sn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,K.H)(this,e)},(0,Sn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),Bt(this)};const mr=(0,O.op)({logicalOr_:function(e,t){const n=(0,R._1)(e,"a","logicalOr","bool"),r=(0,R._1)(t,"b","logicalOr","bool");(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return D.BV.runKernel(s.MZg,a)}});(0,Sn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),mr(this,e)};const gr=(0,O.op)({logicalXor_:function(e,t){const n=(0,R._1)(e,"a","logicalXor","bool"),r=(0,R._1)(t,"b","logicalXor","bool");return(0,b.assertAndGetBroadcastShape)(n.shape,r.shape),(0,K.H)(mr(e,t),Bt((0,K.H)(e,t)))}});(0,Sn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),gr(this,e)},(0,Sn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,U.O)(this,e,t,n)};var br=n(21174);(0,Sn.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,br._)(this,e,t,n,r)};var xr=n(83307);(0,Sn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,xr.F)(this,e,t)},(0,Sn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,xn.g)(this,e)};var yr=n(75130);(0,Sn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,yr.J)(this,e,t)};var kr=n(25735);(0,Sn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,kr.V)(this,e,t)};var vr=n(24513);(0,Sn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,vr.L)(this,e)};const wr=(0,O.op)({mirrorPad_:function(e,t,n){F.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,R._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let s=0;s<r.rank;s++)F.hu(2===t[s].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),F.hu(t[s][0]>=0&&t[s][0]<=r.shape[s]-a&&t[s][1]>=0&&t[s][1]<=r.shape[s]-a,(()=>`Padding in dimension ${s} cannot be greater than or equal to ${r.shape[s]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},o={x:r};return D.BV.runKernel(s.jQs,o,i)}});(0,Sn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),wr(this,e,t)};const Ir=(0,O.op)({mod_:function(e,t){let n=(0,R._1)(e,"a","mod"),r=(0,R._1)(t,"b","mod");[n,r]=(0,_n.makeTypesMatch)(n,r);const a={a:n,b:r};return D.BV.runKernel(s.Vbg,a)}});(0,Sn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),Ir(this,e)},(0,Sn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,i.d)(this,e)},(0,Sn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,c.W)(this)},(0,Sn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Yn.K)(this,e,t,n)};var Sr=n(16500);(0,Sn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Sr.Q)(this,e)};var Cr=n(76708);(0,Sn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Cr.l)(this,e,t,n)};var Nr=n(7846);(0,Sn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Nr.J)(this)},(0,Sn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Xt.v)(this,e,t)};const Tr=(0,O.op)({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=(0,R._1)(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F.hu(_.jT(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=_.Xw(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",b=p?u:P(u,h,f),y=("avg"===n?()=>(0,Bn.w)(b,t,a,g,i):()=>(0,br._)(b,t,a,g,i))(),k=p?y:Jt(y,h,m);return l?(0,x.X)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}});(0,Sn.t3)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Tr(this,e,t,n,r,s,a)},(0,Sn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,kt.s)(this,e)};var $r=n(98151);(0,Sn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,$r.A)(this,e)};const Er=(0,O.op)({prod_:function(e,t=null,n=!1){let r=(0,R._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,a.p)(r,"int32"));const i={x:r},o={axis:t,keepDims:n};return D.BV.runKernel(s.DlI,i,o)}});(0,Sn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),Er(this,e,t)};const Ar=(0,O.op)({reciprocal_:function(e){const t={x:(0,R._1)(e,"x","reciprocal")};return D.BV.runKernel(s.$HU,t)}});(0,Sn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),Ar(this)};var Dr=n(7409);(0,Sn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Dr.U)(this)};var Rr=n(83582);(0,Sn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Rr.b)(this)},(0,Sn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,x.X)(this,e.shape)},(0,Sn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,x.X)(this,e)};var Fr=n(13305);(0,Sn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Fr.I)(this,e,t,n)};var _r=n(95098);(0,Sn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,_r.j)(this,e,t,n)},(0,Sn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Ft.G)(this,e)};var Or=n(13710);(0,Sn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Or.Q)(this)};var Mr=n(97809);(0,Sn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Mr.N)(this)},(0,Sn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),Ee(this)};var Br=n(55503);(0,Sn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,Br.U)(this)};var Wr=n(68678);(0,Sn.t3)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Wr.U)(this,e,t,n,r,s,a)},(0,Sn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Yt.X)(this)};const Lr=(0,O.op)({sign_:function(e){const t={x:(0,R._1)(e,"x","sign")};return D.BV.runKernel(s.i5y,t)}});(0,Sn.t3)().prototype.sign=function(){return this.throwIfDisposed(),Lr(this)},(0,Sn.t3)().prototype.sin=function(){return this.throwIfDisposed(),le(this)},(0,Sn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),he(this)},(0,Sn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ot.t)(this,e,t)};var Ur=n(80682);(0,Sn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ur.X)(this,e)},(0,Sn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,cr.W)(this)},(0,Sn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),P(this,e,t)},(0,Sn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,J.V)(this,e,t)},(0,Sn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,d._)(this)},(0,Sn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,p.h)(this)};var zr=n(15265);(0,Sn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,zr.$)(this,e)};var Pr=n(79590);(0,Sn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Pr.L)(this,e)},(0,Sn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Sn.es?[this,e]:[this,...e];return(0,fn.k)(n,t)},(0,Sn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,o.N)(this,e)};const Vr=(0,O.op)({stridedSlice_:function(e,t,n,r,a=0,i=0,o=0,u=0,l=0){const c={x:(0,R._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:o,newAxisMask:u,shrinkAxisMask:l};return D.BV.runKernel(s.jQk,c,h)}});(0,Sn.t3)().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Vr(this,e,t,n,r,s,a,i,o)},(0,Sn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,f.l)(this,e)},(0,Sn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,y.S)(this,e,t)};const Hr=(0,O.op)({tan_:function(e){const t={x:(0,R._1)(e,"x","tan","float32")};return D.BV.runKernel(s.sEM,t)}});(0,Sn.t3)().prototype.tan=function(){return this.throwIfDisposed(),Hr(this)};var Gr=n(21869);(0,Sn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Gr.A)(this)},(0,Sn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Ae.G)(this,e)},(0,Sn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,a.p)(this,"bool")},(0,Sn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,a.p)(this,"float32")},(0,Sn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,a.p)(this,"int32")};const jr=(0,O.op)({topk_:function(e,t=1,n=!0){const r=(0,R._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},o={k:t,sorted:n},[u,l]=D.BV.runKernel(s.cWu,i,o);return{values:u,indices:l}}});(0,Sn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),jr(this,e,t)},(0,Sn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,me.p)(this,e)};const Xr=(0,O.op)({unique_:function(e,t=0){const n=(0,R._1)(e,"x","unique","string_or_numeric");(0,F.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,o]=D.BV.runKernel(s.kpP,r,a);return{values:i,indices:o}}});(0,Sn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),Xr(this,e)},(0,Sn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Re(this,e,t)},(0,Sn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,gt.H)(this,e)},(0,Sn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Q.a)(e,this,t)},(0,Sn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,w.P)(this)};var qr=n(41111);(0,r.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),qr.kS);n(64079);n(92599);n(466),n(86275),n(38678);n(83066),n(10539);var Kr=n(28891);n(85337),n(40588),n(73146);Kr.ex;n(20163);var Qr=n(39603),Yr=(n(76014),n(41653),n(77385));var Zr,Jr;(0,r.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Zr||(Zr={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Jr||(Jr={}));n(48764).lW;Error;new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);var es,ts=n(36377);function ns(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(is(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=ns(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function rs(e,t=as){return ss(e,t)}function ss(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(is(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=ss(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function as(e){return null===e?null:is(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function is(e){let t=!1;if(r.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(34977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof r.esB)&&!(e instanceof Promise)&&!t)}function os(e){return ns(e,us)}function us(e){return e instanceof r.esB?{value:e.clone(),recurse:!1}:is(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class ls{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class cs extends ls{constructor(){super(cs.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function hs(e){return new ms(e)}function ds(e,t){return new Ns(e,t)}cs.INITIAL_CAPACITY=32;class ps{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ws(this,e)}filter(e){return new ks(this,e)}map(e){return new vs(this,e)}mapAsync(e){return new Is(this,e)}serialMapAsync(e){return new Is(this,e).serial()}flatmap(e){return new Cs(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new ys(this,e,t)}columnMajorBatch(e,t=!0,n=as){return this.rowMajorBatch(e,t).map((e=>rs(e,n)))}concatenate(e,t){return new Ns(new fs([this,e]),t)}take(e){return e<0||null==e?this:new xs(this,e)}skip(e){return e<0||null==e?this:new bs(this,e)}prefetch(e){return new Ts(this,e)}shuffle(e,t){return new $s(this,e,t)}serial(){return new gs(this)}}class fs extends ps{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:os(e),done:!1}}}class ms extends ps{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class gs extends ps{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class bs extends ps{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;r.B90(e.value)}return this.upstream.next()}}class xs extends ps{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ys extends ps{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ks extends ps{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;r.B90(e.value)}}}class vs extends ps{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const a of t)r.piX.isTensorInList(a,s)||a.dispose();return{value:n,done:!1}}}class ws extends ps{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Is extends ps{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const a of t)r.piX.isTensorInList(a,s)||a.dispose();return{value:n,done:!1}}}class Ss extends ps{constructor(){super(),this.outputQueue=new cs,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Cs extends Ss{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)r.piX.isTensorInList(a,s)||a.dispose();return!0}}class Ns extends ps{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(es||(es={}));class Ts extends ps{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ls(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class $s extends Ts{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ts.alea(n||r.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Es{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),As((async()=>(await n.iterator()).columnMajorBatch(e,t,Ds)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,As((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,As((async()=>(await t.iterator()).filter((t=>r.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return As((async()=>(await t.iterator()).map((t=>r.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return As((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return As((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,As((async()=>ds(hs((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,As((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=ts.alea(t||r.D5U.now().toString());return As((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,As((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function As(e,t=null){return new class extends Es{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ds(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof r.esB||r.D5U.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof r.esB?r.knu(e):r.XeE(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Es.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");n(48764).lW;var Rs=n(18166);const Fs=r.GDt.ZA;class _s extends r.Zuw{nextDataId(){return _s.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const a=n.map((e=>r.D5U.encodeString(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(e,t)}return r.D5U.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.D5U.decodeString(e)));return(0,r.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,r.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.D5U.now();e();return{kernelMs:r.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,Rs.H)([e],"where");const t=this.readSync(e.dataId);return Fs(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}_s.nextDataId=0;(0,r.jqO)("cpu",(()=>new _s),1);var Os=n(76738);const Ms=(0,Os.A)(r.SX0,(e=>e>=0?e:Math.exp(e)-1)),Bs={kernelName:r.SX0,backendName:"cpu",kernelFunc:Ms};var Ws=n(41775);function Ls(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s;(0,Rs.H)([a],"leakyRelu");const o=r.D5U.sizeFromShape(a.shape),u=n.data.get(a.dataId).values,l=r.D5U.getTypedArrayFromDType("float32",o);for(let r=0;r<u.length;r++)l[r]=u[r]<0?i*u[r]:u[r];return n.makeTensorInfo(a.shape,"float32",l)}const Us={kernelName:r.J$2,backendName:"cpu",kernelFunc:Ls};var zs=n(33533);const Ps=(0,zs.b)(((e,t)=>e<0?t*e:e));function Vs(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;(0,Rs.H)([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Ps(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Hs={kernelName:r.o0g,backendName:"cpu",kernelFunc:Vs},Gs=(0,Os.A)(r.qkr,(e=>Math.max(0,e))),js={kernelName:r.qkr,backendName:"cpu",kernelFunc:Gs},Xs=(0,Os.A)(r.SbG,(e=>Math.min(Math.max(0,e),6))),qs={kernelName:r.SbG,backendName:"cpu",kernelFunc:Xs};var Ks=n(40108);function Qs(e,t,n,r,s){if("linear"===n)return(0,Ws.y)({inputs:{x:t},backend:e});if("relu"===n)return Gs({inputs:{x:t},backend:e});if("elu"===n)return Ms({inputs:{x:t},backend:e});if("relu6"===n)return Xs({inputs:{x:t},backend:e});if("prelu"===n)return Vs({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Ls({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return(0,Ks.XD)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var Ys=n(32779);function Zs(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=r.D5U.sizeFromShape(a.shape),u=r.D5U.inferFromImplicitShape(i,o),l=r.D5U.sizeFromShape(u);r.D5U.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:a.dataId,shape:u,dtype:a.dtype}}const Js={kernelName:r.HZH,backendName:"cpu",kernelFunc:Zs};function ea(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:i}=t,{transposeA:o,transposeB:u}=s;(0,Rs.H)([a,i],"matMul");const l=a.shape.length,c=i.shape.length,h=o?a.shape[l-2]:a.shape[l-1],d=u?i.shape[c-1]:i.shape[c-2],p=o?a.shape[l-1]:a.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),b=r.D5U.sizeFromShape(m),x=r.D5U.sizeFromShape(g),y=r.Jyw.assertAndGetBroadcastShape(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);r.D5U.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const k=u?[x,f,d]:[x,d,f],v=Zs({inputs:{x:a},backend:n,attrs:{shape:o?[b,h,p]:[b,p,h]}}),w=Zs({inputs:{x:i},backend:n,attrs:{shape:k}}),I=o?v.shape[1]:v.shape[2],S=o?v.shape[2]:v.shape[1],C=u?w.shape[1]:w.shape[2],N=Math.max(b,x),T=n.data.get(v.dataId).values,$=n.data.get(w.dataId).values,E=r.D5U.computeStrides(v.shape),A=r.D5U.computeStrides(w.shape),[D,R,F]=o?[E[0],1,E[1]]:[E[0],E[1],1],[_,O,M]=u?[1,A[1],A[0]]:[A[1],1,A[0]],B=S*C,W=(0,r.f3b)([N,S,C],v.dtype),L=W.values,U=n.blockSize;for(let r=0;r<N;r++){const e=r%b,t=r%x;for(let n=0;n<S;n+=U){const s=Math.min(n+U,S);for(let a=0;a<C;a+=U){const i=Math.min(a+U,C);for(let o=0;o<I;o+=U){const u=Math.min(o+U,I);for(let l=n;l<s;l++)for(let n=a;n<i;n++){let s=0;for(let r=o;r<u;r++){s+=T[e*D+l*R+r*F]*$[r*_+n*O+t*M]}L[r*B+(l*C+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,W.dtype,W.values)}const ta={kernelName:r.XLW,backendName:"cpu",kernelFunc:ea};const na={kernelName:r.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=ea({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=(0,Ys.IH)({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Qs(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};var ra=n(60224);const sa=(0,Os.A)(r.VGw,(e=>Math.acos(e))),aa={kernelName:r.VGw,backendName:"cpu",kernelFunc:sa},ia=(0,Os.A)(r.SpW,(e=>Math.acosh(e))),oa={kernelName:r.SpW,backendName:"cpu",kernelFunc:ia};const ua={kernelName:r.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;(0,Rs.H)(t,"addN");const a=s.map((e=>n.data.get(e.dataId).values)),i=(0,r.f3b)(s[0].shape,s[0].dtype),o=i.values;for(let r=0;r<s.length;r++){const e=a[r];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var la=n(44802);const ca={kernelName:r.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,Rs.H)(a,"all");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("all",l,h.shape.length);const[d,p]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(p),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t&&r}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,m);if(o){const e=Zs({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const ha={kernelName:r.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,Rs.H)(a,"any");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("any",l,h.shape.length);const[d,p]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(p),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t||r}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,m);if(o){const e=Zs({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const da={kernelName:r.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;(0,Rs.H)(a,"argMax");let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],r.Wap.assertAxesAreInnerMostDims("argMax",o,l.shape.length);const[h,d]=r.Wap.computeOutAndReduceShapes(l.shape,o),p=r.D5U.sizeFromShape(h),f=r.D5U.makeZerosTypedArray(p,"int32"),m=r.D5U.sizeFromShape(d),g=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=g[e],n=0;for(let r=0;r<m;++r){const s=g[e+r];s>t&&(t=s,n=r)}f[r]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}};const pa={kernelName:r.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;(0,Rs.H)(a,"argMin");let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],r.Wap.assertAxesAreInnerMostDims("argMin",o,l.shape.length);const[h,d]=r.Wap.computeOutAndReduceShapes(l.shape,o),p=r.D5U.sizeFromShape(h),f=r.D5U.makeZerosTypedArray(p,"int32"),m=r.D5U.sizeFromShape(d),g=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=g[e],n=0;for(let r=0;r<m;++r){const s=g[e+r];s<t&&(t=s,n=r)}f[r]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}},fa=(0,Os.A)(r.M2y,(e=>Math.asin(e))),ma={kernelName:r.M2y,backendName:"cpu",kernelFunc:fa},ga=(0,Os.A)(r.qw7,(e=>Math.asinh(e))),ba={kernelName:r.qw7,backendName:"cpu",kernelFunc:ga},xa=(0,Os.A)(r.jMg,(e=>Math.atan(e))),ya={kernelName:r.jMg,backendName:"cpu",kernelFunc:xa};var ka=n(46205);const va=(0,zs.b)(((e,t)=>Math.atan2(e,t))),wa=(0,ka.j)(r.QCc,va),Ia={kernelName:r.QCc,backendName:"cpu",kernelFunc:wa},Sa=(0,Os.A)(r.Oyi,(e=>Math.atanh(e))),Ca={kernelName:r.Oyi,backendName:"cpu",kernelFunc:Sa};function Na(e,t,n,s,a,i){const o=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.f3b)(a.outShape,n),b=g.values,x=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],k=a.outShape[3];for(let r=0;r<a.batchSize;++r){const t=r*x,n=r*s[0];for(let r=0;r<a.inChannels;++r)for(let g=0;g<a.outHeight;++g){const x=g*o-p,v=Math.max(0,x),w=Math.min(a.inHeight,h+x),I=t+g*y;for(let t=0;t<a.outWidth;++t){const o=t*u-f,h=Math.max(0,o),p=Math.min(a.inWidth,d+o);let g=m,x=0,y=0;for(let t=v;t<w;t+=l){const a=n+t*s[1];for(let t=h;t<p;t+=c){const n=e[a+t*s[2]+r];"max"===i&&n>g?g=n:"avg"===i&&(x+=n,y++)}if(isNaN(g))break}b[I+t*k+r]="avg"===i?x/y:g}}}return g}function Ta(e,t,n,s,a=!1,i=!1){const o=(0,r.f3b)(s.outShape,"int32"),u=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,g=(0,r.f3b)(t,n,e);for(let r=0;r<s.batchSize;++r)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*u-f;let b=n;for(;b<0;)b+=c;const x=Math.min(s.inHeight,d+n);for(let u=0;u<s.outWidth;++u){const d=u*l-m;let f=d;for(;f<0;)f+=h;const y=Math.min(s.inWidth,p+d);let k=Number.NEGATIVE_INFINITY,v=-1;for(let t=b;t<x;t+=c){const o=t-n;for(let n=f;n<y;n+=h){const u=n-d,l=g.get(r,t,n,e);l>k&&(k=l,v=a?i?((r*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:o*p+u)}}o.set(v,r,t,u,e)}}return o}function $a(e,t,n,s,a,i){const o=a.strideDepth,u=a.strideHeight,l=a.strideWidth,c=a.dilationDepth,h=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,g=a.padInfo.front,b=a.padInfo.top,x=a.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,k=(0,r.f3b)(a.outShape,n),v=k.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let r=0;r<a.batchSize;++r){const t=r*w,n=r*s[0];for(let r=0;r<a.inChannels;++r)for(let k=0;k<a.outDepth;++k){const w=k*o-g;let N=w;for(;N<0;)N+=c;const T=Math.min(a.inDepth,p+w),$=t+k*I;for(let t=0;t<a.outHeight;++t){const o=t*u-b;let p=o;for(;p<0;)p+=h;const g=Math.min(a.inHeight,f+o),k=$+t*S;for(let t=0;t<a.outWidth;++t){const o=t*l-x;let u=o;for(;u<0;)u+=d;const f=Math.min(a.inWidth,m+o),b=k+t*C;let w=y,I=0,S=0;for(let t=N;t<T;t+=c){const a=n+t*s[1];for(let t=p;t<g;t+=h){const n=a+t*s[2];for(let t=u;t<f;t+=d){const a=e[n+t*s[3]+r];if("max"===i&&a>w?w=a:"avg"===i&&(I+=a,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}v[b+r]="avg"===i?I/Math.max(S,1):w}}}}return k}const Ea={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,Rs.H)(a,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))h=(0,Ws.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.D5U.computeStrides(a.shape),s=Na(e,a.shape,a.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}};const Aa={kernelName:r._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s;(0,Rs.H)(a,"avgPool3d");const h=r.Wap.computePool3DInfo(a.shape,i,o,1,u,l,c),d=$a(n.data.get(a.dataId).values,a.shape,a.dtype,r.D5U.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const Da={kernelName:r.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s;(0,Rs.H)([a,i],"avgPool3DGrad");const h=r.Wap.computePool3DInfo(i.shape,o,u,1,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=h.dilationDepth,y=h.dilationHeight,k=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,I=h.effectiveFilterWidth,S=v-1-h.padInfo.front,C=I-1-h.padInfo.left,N=w-1-h.padInfo.top,T=(0,r.f3b)(i.shape,"float32"),$=1/(m*g*b),E=n.bufferSync(a);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const a=t-S,i=n-N,o=s-C;let u=0;for(let t=0;t<v;t+=x){const n=(a+t)/d;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=y){const s=(i+t)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let t=0;t<I;t+=k){const a=(o+t)/f;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;u+=E.get(r,n,s,a,e)}}}T.set(u*$,r,t,n,s,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Ra={kernelName:r.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;(0,Rs.H)([a,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,u,l,1,c),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,y=h.effectiveFilterWidth,k=y-1-h.padInfo.left,v=x-1-h.padInfo.top,w=(0,r.f3b)(o.shape,"float32"),I=1/(f*m),S=n.data.get(a.dataId).values,C=(0,r.f3b)(a.shape,"float32",S);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const s=t-v,a=n-k;let i=0;for(let t=0;t<x;t+=g){const n=(s+t)/d;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let t=0;t<y;t+=b){const s=(a+t)/p;if(s<0||s>=h.outWidth||Math.floor(s)!==s)continue;i+=C.get(r,n,s,e)}}w.set(i*I,r,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Fa={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:i,offset:o,mean:u,variance:l}=t;r.D5U.assert(u.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||u.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==i||u.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,Rs.H)([a,u,l,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,d=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,x=f.length,y=p.length,k=d.length;let v=0,w=0,I=0,S=0;for(let r=0;r<h.length;++r)g[r]=m[v++]+(h[r]-d[w++])*f[I++]/Math.sqrt(p[S++]+c),v>=b&&(v=0),w>=k&&(w=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};var _a=n(82578);const Oa={kernelName:r.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;(0,Rs.H)([a],"batchToSpaceND");const u=i.reduce(((e,t)=>e*t)),l=r.Wap.getReshaped(a.shape,i,u),c=r.Wap.getPermuted(l.length,i.length),h=r.Wap.getReshapedPermuted(a.shape,i,u),d=r.Wap.getSliceBeginCoords(o,i.length),p=r.Wap.getSliceSize(h,o,i.length),f=Zs({inputs:{x:a},backend:n,attrs:{shape:l}}),m=(0,la.p)({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Zs({inputs:{x:m},backend:n,attrs:{shape:h}}),b=(0,_a.tP)({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}};var Ma=n(58607);const Ba={kernelName:r.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=(0,Ma.W)(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};var Wa=n(5003);const La={kernelName:r.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,u=r.Wap.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var Ua=n(29258),za=n(34769);const Pa=(0,Os.A)(r.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Va={kernelName:r.xnO,backendName:"cpu",kernelFunc:Pa};var Ha=n(26961);const Ga={kernelName:r.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(r.D5U.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,o=a.complexTensorInfos.imag,u=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values;for(let r=0;r<u.length;r++){const e=u[r],t=l[r];s[r]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")}};var ja=n(48926);function Xa(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const qa={kernelName:r.J_u,backendName:"cpu",kernelFunc:Xa};var Ka=n(82186);function Qa(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0],o=t.map((e=>e.shape));r.Wap.assertParamsConsistent(o,i);let u=r.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));if(1===l.length)return(0,Ws.y)({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>(0,Ka.k)({inputs:{input:e},backend:n}))),t=l.map((e=>Xa({inputs:{input:e},backend:n}))),r=Qa({inputs:e,backend:n,attrs:{axis:i}}),s=Qa({inputs:t,backend:n,attrs:{axis:i}}),a=(0,Ha.P)({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=l.map((e=>{const t=r.D5U.sizeFromShape(e.shape.slice(i));return Zs({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));u=r.Wap.computeOutShape(c.map((e=>e.shape)),1);const d=1===c[0].shape[0],p=(0,ja.j)(h,u,t[0].dtype,d),f=r.Wap.computeOutShape(l.map((e=>e.shape)),i),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const Ya={kernelName:r.Eh3,backendName:"cpu",kernelFunc:Qa};function Za(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s;(0,Rs.H)([a,i],"conv2d");const d=r.Wap.convertConv2DDataFormat(l),p=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,u,h,!1,d),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,b=p.dilationWidth,x=p.padInfo.left,y=p.padInfo.top,k="channelsLast"===p.dataFormat,v=new r.YDk(p.outShape,a.dtype),w=r.D5U.computeStrides(a.shape),I=r.D5U.computeStrides(i.shape),S=w[0],C=k?w[1]:w[2],N=k?w[2]:1,T=k?1:w[1],$=v.strides[0],E=k?v.strides[1]:v.strides[2],A=k?v.strides[2]:1,D=k?1:v.strides[1],R=n.data.get(a.dataId).values,F=n.data.get(i.dataId).values,_=v.values;for(let r=0;r<p.batchSize;++r){const e=r*S,t=r*$;for(let n=0;n<p.outHeight;++n){const r=t+n*E,s=n*p.strideHeight-y;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=p.inHeight)continue;const a=t*I[0],i=e+n*C;for(let e=0;e<p.outWidth;++e){const t=r+e*A,n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const s=i+r*N;let o=a+e*I[1];for(let e=0;e<p.inChannels;++e){const n=R[s+e*T];for(let e=0;e<p.outChannels;++e)_[t+e*D]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const Ja={kernelName:r.mhS,backendName:"cpu",kernelFunc:Za};const ei={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s;(0,Rs.H)([a,i],"conv2dBackpropFilter");const d=r.Wap.convertConv2DDataFormat(l),p=r.Wap.computeConv2DInfo(a.shape,h,o,1,u,c,!1,d),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:b}=p,x="channelsLast"===p.dataFormat,y=new r.YDk(p.filterShape,"float32"),k=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,S=new r.YDk(a.shape,a.dtype,w),C=new r.YDk(i.shape,i.dtype,I);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((v-r)/f)),t=Math.min(p.outHeight,(p.inHeight+v-r)/f);for(let n=0;n<b;++n){const s=Math.max(0,Math.ceil((k-n)/m)),a=Math.min(p.outWidth,(p.inWidth+k-n)/m);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=e;c<t;++c){const e=r+c*f-v;for(let t=s;t<a;++t){const r=n+t*m-k;u+=x?S.get(l,e,r,i)*C.get(l,c,t,o):S.get(l,i,e,r)*C.get(l,o,c,t)}}y.set(u,r,n,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const ti={kernelName:r.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s;(0,Rs.H)([a,i],"conv2dBackpropInput");const d=r.D5U.computeStrides(i.shape),p=r.D5U.computeStrides(a.shape);let f=r.Wap.convertConv2DDataFormat(c);const m=r.Wap.computeConv2DInfo(o,i.shape,u,1,l,h,!1,f),g=new r.YDk(m.inShape,"float32"),b=g.values,x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,[k,v,w]=d,{batchSize:I,filterHeight:S,filterWidth:C,inChannels:N,inHeight:T,inWidth:$,outChannels:E,outHeight:A,outWidth:D,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const _=S-1-m.padInfo.top,O=C-1-m.padInfo.left,M="channelsLast"===f,B=g.strides[0],W=M?g.strides[1]:g.strides[2],L=M?g.strides[2]:1,U=M?1:g.strides[1],z=p[0],P=M?p[1]:p[2],V=M?p[2]:1,H=M?1:p[1];for(let r=0;r<I;++r)for(let e=0;e<N;++e)for(let t=0;t<T;++t){const n=t-_,s=Math.max(0,Math.ceil(n/R)),a=Math.min(A,(S+n)/R);for(let i=0;i<$;++i){const o=i-O,u=Math.max(0,Math.ceil(o/F)),l=Math.min(D,(C+o)/F);let c=0;for(let t=s;t<a;++t){const s=t*R-n;for(let n=u;n<l;++n){const a=z*r+P*t+V*n,i=k*(S-1-s)+v*(C-1-(n*F-o))+w*e;for(let e=0;e<E;++e){c+=x[a+H*e]*y[i+e]}}}b[B*r+W*t+L*i+U*e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ni={kernelName:r.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s;(0,Rs.H)([a,i],"conv3d");const c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,l,u),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:b}=c,x=b.front,y=b.left,k=b.top,v=new r.YDk(c.outShape,a.dtype),w=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,S=v.values,C=r.D5U.computeStrides(a.shape),N=r.D5U.computeStrides(i.shape);for(let r=0;r<c.batchSize;++r){const e=r*C[0],t=r*v.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*v.strides[1],s=n*c.strideDepth-x;for(let t=0;t<h;++t){const n=s+t*f;if(n<0||n>=c.inDepth)continue;const a=t*N[0],i=e+n*C[1];for(let e=0;e<c.outHeight;++e){const t=r+e*v.strides[2],n=e*c.strideHeight-k;for(let e=0;e<d;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const s=a+e*N[1],o=i+r*C[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-y;for(let e=0;e<p;++e){const t=r+e*g;if(t<0||t>=c.inWidth)continue;const a=s+e*N[2],i=o+t*c.inChannels;let u=a;for(let e=0;e<c.inChannels;++e){const t=w[i+e];for(let e=0;e<c.outChannels;++e)S[n+e]+=t*I[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const ri={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=s;(0,Rs.H)([a,i],"conv3dBackpropFilterV2");const c=r.D5U.computeStrides(a.shape),h=r.D5U.computeStrides(i.shape),d=r.Wap.computeConv3DInfo(a.shape,l,o,1,u),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,b=d.filterHeight,x=d.filterWidth,y=new r.YDk(d.filterShape,"float32"),k=y.values,[v,w,I,S]=y.strides,C=n.data.get(i.dataId).values,[N,T,$,E]=h,A=n.data.get(a.dataId).values,[D,R,F,_]=c,O=d.padInfo.front,M=d.padInfo.left,B=d.padInfo.top;for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((O-r)/p)),t=Math.min(d.outDepth,(d.inDepth+O-r)/p),n=r*v;for(let s=0;s<b;++s){const a=Math.max(0,Math.ceil((B-s)/f)),i=Math.min(d.outHeight,(d.inHeight+B-s)/f),o=s*w+n;for(let n=0;n<x;++n){const u=Math.max(0,Math.ceil((M-n)/m)),l=Math.min(d.outWidth,(d.inWidth+M-n)/m),c=n*I+o;for(let o=0;o<d.inChannels;++o){const h=o*S+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let h=0;h<d.batchSize;++h){const d=h*D,b=h*N;for(let h=e;h<t;++h){const e=(r+h*p-O)*R+d,t=h*T+b;for(let r=a;r<i;++r){const a=(s+r*f-B)*F+e,i=r*$+t;for(let e=u;e<l;++e){const t=e*E+i;g+=A[(n+e*m-M)*_+a+o]*C[t+c]}}}}k[h+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const si={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=s;(0,Rs.H)([a],"conv3dBackpropInputV2");const c=r.D5U.computeStrides(a.shape),h=r.D5U.computeStrides(i.shape),d=r.Wap.computeConv3DInfo(l,i.shape,u,1,o),p=new r.YDk(d.inShape,"float32"),f=p.values,[m,g,b,x]=p.strides,y=n.data.get(a.dataId).values,[k,v,w,I]=c,S=n.data.get(i.dataId).values,[C,N,T,$]=h,{batchSize:E,filterDepth:A,filterHeight:D,filterWidth:R,inChannels:F,inDepth:_,inHeight:O,inWidth:M,outChannels:B,outDepth:W,outHeight:L,outWidth:U,strideDepth:z,strideHeight:P,strideWidth:V}=d,H=A-1-d.padInfo.front,G=D-1-d.padInfo.top,j=R-1-d.padInfo.left;for(let r=0;r<E;++r)for(let e=0;e<F;++e)for(let t=0;t<_;++t){const n=t-H,s=Math.max(0,Math.ceil(n/z)),a=Math.min(W,(A+n)/z);for(let i=0;i<O;++i){const o=i-G,u=Math.max(0,Math.ceil(o/P)),l=Math.min(L,(D+o)/P);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),p=Math.min(U,(R+h)/V);let E=0;for(let t=s;t<a;++t){const s=t*z-n;for(let n=u;n<l;++n){const a=n*P-o;for(let i=d;i<p;++i){const o=k*r+v*t+w*n+I*i,u=C*(A-1-s)+N*(D-1-a)+T*(R-1-(i*V-h))+$*e;for(let e=0;e<B;++e){E+=y[o+e]*S[u+e]}}}}f[m*r+g*t+b*i+x*c+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},ai=(0,Os.A)(r.mc4,(e=>Math.cos(e))),ii={kernelName:r.mc4,backendName:"cpu",kernelFunc:ai},oi=(0,Os.A)(r.TR1,(e=>Math.cosh(e))),ui={kernelName:r.TR1,backendName:"cpu",kernelFunc:oi};const li={kernelName:r.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:u,method:l,extrapolationValue:c}=s,[h,d,p,f]=a.shape,m=i.shape[0],[g,b]=u,x=(0,r.f3b)([m,g,b,f],"float32"),y=n.data.get(i.dataId).values,k=n.data.get(o.dataId).values,v=n.data.get(a.dataId).values,w=r.D5U.computeStrides(a.shape),I=r.D5U.computeStrides(x.shape);for(let r=0;r<m;r++){const e=4*r,t=y[e],n=y[e+1],s=y[e+2],a=y[e+3],i=k[r];if(i>=h)continue;const o=g>1?(s-t)*(d-1)/(g-1):0,u=b>1?(a-n)*(p-1)/(b-1):0;for(let h=0;h<g;h++){const e=g>1?t*(d-1)+h*o:.5*(t+s)*(d-1);if(e<0||e>d-1)for(let t=0;t<b;t++)for(let e=0;e<f;e++){const n=e+t*I[2]+h*I[1]+r*I[0];x.values[n]=c}else if("bilinear"===l){const t=Math.floor(e),s=Math.ceil(e),o=e-t;for(let e=0;e<b;e++){const l=b>1?n*(p-1)+e*u:.5*(n+a)*(p-1);if(l<0||l>p-1){for(let t=0;t<f;t++){const n=t+e*I[2]+h*I[1]+r*I[0];x.values[n]=c}continue}const d=Math.floor(l),m=Math.ceil(l),g=l-d;for(let n=0;n<f;n++){let a=n+d*w[2]+t*w[1]+i*w[0];const u=v[a];a=n+m*w[2]+t*w[1]+i*w[0];const l=v[a];a=n+d*w[2]+s*w[1]+i*w[0];const c=v[a];a=n+m*w[2]+s*w[1]+i*w[0];const p=u+(l-u)*g,f=c+(v[a]-c)*g;a=n+e*I[2]+h*I[1]+r*I[0],x.values[a]=p+(f-p)*o}}}else for(let t=0;t<b;++t){const s=b>1?n*(p-1)+t*u:.5*(n+a)*(p-1);if(s<0||s>p-1){for(let e=0;e<f;e++){const n=e+t*I[2]+h*I[1]+r*I[0];x.values[n]=c}continue}const o=Math.round(s),l=Math.round(e);for(let e=0;e<f;e++){const n=e+o*w[2]+l*w[1]+i*w[0],s=e+t*I[2]+h*I[1]+r*I[0];x.values[s]=v[n]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const ci={kernelName:r.Byc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:u}=s;(0,Rs.H)(a,"cumprod");const l=r.Wap.getAxesPermutation([i],a.shape.length);let c=a;null!=l&&(c=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=r.Wap.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const d=(0,r.x8V)(c.dtype,"int32"),p=r.D5U.makeOnesTypedArray(r.D5U.sizeFromShape(c.shape),d),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let r=0;r<f.length;r+=m)for(let e=0;e<m;e++){const t=g(r,e);if(0===e)p[t]=o?1:f[t];else{const n=g(r,e-1);p[t]=o?f[n]*p[n]:f[t]*p[n]}}const b=n.makeTensorInfo(c.shape,d,p);if(null!=l){const e=r.Wap.getUndoAxesPermutation(l),t=(0,la.p)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),t}return b}};const hi={kernelName:r.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:u}=s;(0,Rs.H)(a,"cumsum");const l=r.Wap.getAxesPermutation([i],a.shape.length);let c=a;null!=l&&(c=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=r.Wap.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const d=(0,r.x8V)(c.dtype,"int32"),p=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(c.shape),d),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let r=0;r<f.length;r+=m)for(let e=0;e<m;e++){const t=g(r,e);if(0===e)p[t]=o?0:f[t];else{const n=g(r,e-1);p[t]=o?f[n]+p[n]:f[t]+p[n]}}const b=n.makeTensorInfo(c.shape,d,p);if(null!=l){const e=r.Wap.getUndoAxesPermutation(l),t=(0,la.p)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),t}return b}};const di={kernelName:r.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(a.dataId).values,r=(0,Ma.W)(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=(0,Ma.i)(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const pi={kernelName:r.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.D5U.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const u=a.shape[0],l=a.shape[1],c=a.shape[2],h=a.shape[3],d=l*i,p=c*i,f=h/(i*i),m=n.data.get(a.dataId).values,g=new Float32Array(u*d*p*f);let b=0;for(let r=0;r<u;++r)for(let e=0;e<d;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const s=Math.floor(e/i),a=(n*i+e%i)*f;for(let e=0;e<f;++e){const n=e+a+h*(s+c*(t+l*r));g[b++]=m[n]}}}return n.makeTensorInfo([u,d,p,f],a.dtype,g)}};function fi(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;(0,Rs.H)([a,i],"depthwiseConv2DNative");const h=r.D5U.computeStrides(a.shape),d=r.D5U.computeStrides(i.shape);let p=l;null==p&&(p=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const f=r.Wap.computeConv2DInfo(a.shape,i.shape,o,p,u,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=f,k=y.left,v=y.top,w=f.outChannels/f.inChannels,I=new r.YDk(f.outShape,a.dtype),S=n.data.get(a.dataId).values,C=n.data.get(i.dataId).values,N=I.values;for(let r=0;r<f.batchSize;++r){const e=r*h[0],t=r*I.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*I.strides[1],s=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*b;if(n<0||n>=f.inHeight)continue;const a=t*d[0],i=e+n*h[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-k;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const s=a+e*d[1],o=i+r*f.inChannels;let u=t,l=s;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)N[u+e]+=t*C[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const mi={kernelName:r.cie,backendName:"cpu",kernelFunc:fi};const gi={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s;(0,Rs.H)([a,i],"depthwiseConv2dNativeBackpropFilter");const d=r.Wap.computeConv2DInfo(a.shape,h,o,u,l,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b=new r.YDk(d.filterShape,"float32"),x=d.padInfo.left,y=d.padInfo.top,k=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,w=new r.YDk(a.shape,a.dtype,v),I=n.data.get(i.dataId).values,S=new r.YDk(i.shape,i.dtype,I);for(let r=0;r<m;++r){const e=Math.max(0,Math.ceil((y-r)/p)),t=Math.min(d.outHeight,(d.inHeight+y-r)/p);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/k),u=i%k;let l=0;for(let c=0;c<d.batchSize;++c)for(let u=e;u<t;++u){const e=r+u*p-y;for(let t=s;t<a;++t){const r=n+t*f-x;l+=w.get(c,e,r,o)*S.get(c,u,t,i)}}b.set(l,r,n,o,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const bi={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s;(0,Rs.H)([a,i],"depthwiseConv2DNativeBackpropInput");const d=r.D5U.computeStrides(a.shape),p=r.D5U.computeStrides(i.shape),f=r.Wap.computeConv2DInfo(h,i.shape,o,u,l,c,!0),m=new r.YDk(f.inShape,"float32"),g=m.values,[b,x,y]=m.strides,k=n.data.get(a.dataId).values,[v,w,I]=d,S=n.data.get(i.dataId).values,[C,N,T]=p,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:D,inHeight:R,inWidth:F,outChannels:_,outHeight:O,outWidth:M,strideHeight:B,strideWidth:W}=f,L=E-1-f.padInfo.top,U=A-1-f.padInfo.left,z=_/D;for(let r=0;r<$;++r)for(let e=0;e<D;++e)for(let t=0;t<R;++t){const n=t-L,s=Math.max(0,Math.ceil(n/B)),a=Math.min(O,(E+n)/B);for(let i=0;i<F;++i){const o=i-U,u=Math.max(0,Math.ceil(o/W)),l=Math.min(M,(A+o)/W);let c=0;for(let t=s;t<a;++t){const s=t*B-n;for(let n=u;n<l;++n){const a=v*r+w*t+I*n,i=C*(E-1-s)+N*(A-1-(n*W-o))+T*e;for(let t=0;t<z;++t){c+=k[a+(e*z+t)]*S[i+t]}}}g[b*r+x*t+y*i+e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const xi={kernelName:r.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=r.D5U.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,o=(0,r.f3b)([a,a],s.dtype),u=o.values;for(let r=0;r<i.length;r++)u[r*a+r]=i[r];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},yi={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=l.data.get(s.dataId).values,h=s.shape.length,d=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:x,outWidth:y,padInfo:k,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:N,outShape:T}=r.Wap.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",u),$=r.D5U.sizeFromShape(T),E=T.length,A=r.D5U.getArrayFromDType(s.dtype,$);for(let D=0;D<f;++D)for(let e=0;e<x;++e){const t=e*v-k.top;for(let n=0;n<y;++n){const i=n*w-k.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<S;++t){const l=i+t*N;if(l>=0&&l<g){const i=r.D5U.locToIndex([D,n,l,o],h,r.D5U.computeStrides(s.shape)),f=r.D5U.locToIndex([e,t,o],p,r.D5U.computeStrides(a.shape)),m=c[i]+d[f];m>u&&(u=m)}}}A[r.D5U.locToIndex([D,e,n,o],E,r.D5U.computeStrides(T))]=u}}}return{dataId:l.write(r.D5U.toTypedArray(A,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},ki={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,h=r.D5U.toNestedArray(s.shape,c.data.get(s.dataId).values),d=r.D5U.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,u,"NHWC",l);r.D5U.assert(i.rank===N.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=r.D5U.toNestedArray(N,c.data.get(i.dataId).values),$=r.D5U.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<p;++r)for(let e=0;e<b;++e){const t=e*k-y.top;for(let n=0;n<x;++n){const s=n*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<w;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){const l=s+t*C;if(l>=0&&l<m){const s=h[r][n][l][a]+d[e][t][a];s>i&&(i=s,o=e,u=t)}}}$[o][u][a]+=T[r][e][n][a]}}}return{dataId:c.write(r.D5U.toTypedArray($,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},vi={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,h=r.D5U.toNestedArray(s.shape,c.data.get(s.dataId).values),d=r.D5U.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,u,"NHWC",l);r.D5U.assert(i.rank===N.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=r.D5U.toNestedArray(N,c.data.get(i.dataId).values),$=r.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<p;++r)for(let e=0;e<b;++e){const t=e*k-y.top;for(let n=0;n<x;++n){const s=n*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,u=s<0?0:s;for(let e=0;e<w;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){const l=s+t*C;if(l>=0&&l<m){const s=h[r][n][l][a]+d[e][t][a];s>i&&(i=s,o=n,u=l)}}}$[r][o][u][a]+=T[r][e][n][a]}}}return{dataId:c.write(r.D5U.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const wi={kernelName:r.hGc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null===u||void 0===u?void 0:u.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let y=0;y<d*p;++y){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[y*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*y;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}a.width=p,a.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),s}};var Ii=n(65491),Si=n(24391);function Ci(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;let u;(0,Rs.H)(a,"sum"),u="bool"===a.dtype?(0,Ua.pj)({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):(0,Ws.y)({inputs:{x:a},backend:n});const l=u.shape.length,c=r.D5U.parseAxisParam(i,u.shape),h=r.Wap.getAxesPermutation(c,l);let d=c,p=u;null!=h&&(p=(0,la.p)({inputs:{x:u},backend:n,attrs:{perm:h}}),d=r.Wap.getInnerMostAxes(d.length,l)),r.Wap.assertAxesAreInnerMostDims("sum",d,p.shape.length);const[f,m]=r.Wap.computeOutAndReduceShapes(p.shape,d),g=r.Wap.upcastType(p.dtype,"int32");let b=(0,Si.l)(n,f,g);const x=r.D5U.sizeFromShape(m),y=n.data.get(b.dataId).values,k=n.data.get(p.dataId).values;for(let r=0;r<y.length;++r){const e=r*x;let t=0;for(let n=0;n<x;++n)t+=k[e+n];y[r]=t}if(o){const e=b;b=Zs({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(b.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=h&&n.disposeIntermediateTensorInfo(p),b}const Ni={kernelName:r.GBy,backendName:"cpu",kernelFunc:Ci};const Ti={kernelName:r.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:u,idDims:l}=r.Wap.decodeEinsumEquation(a,i.length);r.Wap.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:h}=r.Wap.getEinsumComputePath(u,l),d=h.length;let p=null,f=o.length;const m=[];for(let g=0;g<d;++g){for(const e of h[g]){const{permutationIndices:t,expandDims:s}=r.Wap.getEinsumPermutation(f,l[e]);let a;r.Wap.isIdentityPermutation(t)?a=i[e]:(a=(0,la.p)({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=Zs({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===p?p=a:(p=(0,Ii.Jp)({inputs:{a:a,b:p},backend:n}),m.push(p))}g<d-1&&(c[g]>=0&&(p=Ci({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}};const $i={kernelName:r.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;(0,Rs.H)([s,a],"eluGrad");const i=new Float32Array(r.D5U.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values;for(let r=0;r<o.length;++r){const e=o[r];i[r]=e>=0?u[r]:u[r]*(e+1)}return n.makeTensorInfo(a.shape,"float32",i)}};var Ei=n(7679);const Ai=r.Wap.ERF_P,Di=r.Wap.ERF_A1,Ri=r.Wap.ERF_A2,Fi=r.Wap.ERF_A3,_i=r.Wap.ERF_A4,Oi=r.Wap.ERF_A5,Mi=(0,Os.A)(r.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Ai*n);return t*(1-((((Oi*r+_i)*r+Fi)*r+Ri)*r+Di)*r*Math.exp(-n*n))})),Bi={kernelName:r.Omj,backendName:"cpu",kernelFunc:Mi};var Wi=n(31211);function Li(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:i}=s,o=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(r.D5U.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),Zs({inputs:{x:a},backend:n,attrs:{shape:u}})}const Ui={kernelName:r.YFo,backendName:"cpu",kernelFunc:Li};var zi=n(30969);const Pi=(0,zs.b)(((e,t)=>e/t)),Vi=(0,ka.j)(r.oHH,Pi),Hi={kernelName:r.oHH,backendName:"cpu",kernelFunc:Vi};var Gi=n(71649);function ji(e,t,n){const s=e.shape,a=s[0],i=s[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[a,i],h=r.D5U.sizeFromShape(c),d=r.D5U.getTypedArrayFromDType("float32",h),p=r.D5U.getTypedArrayFromDType("float32",h);for(let b=0;b<a;b++){const e=(0,_a.tP)({inputs:{x:u},backend:n,attrs:{begin:[b,0],size:[1,i]}}),s=(0,_a.tP)({inputs:{x:l},backend:n,attrs:{begin:[b,0],size:[1,i]}}),a=(0,Ha.P)({inputs:{real:e,imag:s},backend:n}),{real:o,imag:c}=Xi(a,t,n),h=r.Wap.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=r.Wap.getComplexWithIndex(h,t);d[b*i+t]=e.real,p[b*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(c,"float32",d),m=n.makeTensorInfo(c,"float32",p),g=(0,Ha.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Xi(e,t,n){const s=r.D5U.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((u=s)&u-1)){const a=qi(i,o,s,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",a.real),t=n.makeTensorInfo(u,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(s,"float32")),o=(0,Ws.y)({inputs:{x:i},backend:n}),l=Hi.kernelFunc({inputs:{a:e,b:i},backend:n}),c=Hi.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(l.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return a}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,o=0;for(let s=0;s<t;s++){const u=r.Wap.exponent(a*s,t,n),l=r.Wap.getComplexWithIndex(e,s);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=t,o/=t),r.Wap.assignToTypedArray(s,i,o,a)}return s}(r.Wap.mergeRealAndImagArrays(i,o),s,t);return r.Wap.splitRealAndImagArrays(e)}var u}function qi(e,t,n,s,a){if(1===n)return{real:e,imag:t};const i=r.Wap.mergeRealAndImagArrays(e,t),o=n/2,u=r.Wap.complexWithEvenIndex(i),l=u.real,c=u.imag,h=[l.length],d=a.makeTensorInfo(h,"float32",l),p=a.makeTensorInfo(h,"float32",c),f=(0,Ha.P)({inputs:{real:d,imag:p},backend:a}),m=r.Wap.complexWithOddIndex(i),g=m.real,b=m.imag,x=[g.length],y=a.makeTensorInfo(x,"float32",g),k=a.makeTensorInfo(x,"float32",b),v=(0,Ha.P)({inputs:{real:y,imag:k},backend:a}),w=qi(l,c,o,s,a),I=w.real,S=w.imag,C=[I.length],N=a.makeTensorInfo(C,"float32",I),T=a.makeTensorInfo(C,"float32",S),$=(0,Ha.P)({inputs:{real:N,imag:T},backend:a}),E=qi(g,b,o,s,a),A=E.real,D=E.imag,R=[A.length],F=a.makeTensorInfo(R,"float32",A),_=a.makeTensorInfo(R,"float32",D),O=(0,Ha.P)({inputs:{real:F,imag:_},backend:a}),M=r.Wap.exponents(n,s),B=[M.real.length],W=a.makeTensorInfo(B,"float32",M.real),L=a.makeTensorInfo(B,"float32",M.imag),U=(0,Ha.P)({inputs:{real:W,imag:L},backend:a}),z=(0,Ii.Jp)({inputs:{a:U,b:O},backend:a}),P=(0,Ys.IH)({inputs:{a:$,b:z},backend:a}),V=(0,Gi.lu)({inputs:{a:$,b:z},backend:a}),H=(0,Ka.k)({inputs:{input:P},backend:a}),G=(0,Ka.k)({inputs:{input:V},backend:a}),j=Xa({inputs:{input:P},backend:a}),X=Xa({inputs:{input:V},backend:a}),q=Qa({inputs:[H,G],backend:a,attrs:{axis:0}}),K=Qa({inputs:[j,X],backend:a,attrs:{axis:0}}),Q=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:Q,imag:Y}}const Ki={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.D5U.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=Zs({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),u=ji(o,!1,n),l=Zs({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};function Qi(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:i}=n,o=i||r.D5U.inferDtype(a),u=r.D5U.getArrayFromDType(o,r.D5U.sizeFromShape(s));return function(e,t,n){e.fill(t)}(u,a),t.makeTensorInfo(s,o,u)}const Yi={kernelName:r.deh,backendName:"cpu",kernelFunc:Qi};const Zi={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,a=n,i=r.D5U.getTypedArrayFromDType(s.dtype,r.D5U.sizeFromShape(s.shape)),[o,u,l,c]=s.shape,h=a.data.get(s.dataId).values;for(let r=0;r<o;r++){const e=r*l*u*c;for(let t=0;t<u;t++){const n=t*(l*c);for(let t=0;t<l;t++){const r=t*c;for(let s=0;s<c;s++){const a=Math.round(l-t-1),o=e+n+r+s;let u=h[o];if(a>=0&&a<l){u=h[e+n+a*c+s]}i[o]=u}}}}return{dataId:a.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};var Ji=n(76574),eo=n(44892);const to={kernelName:r._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Za({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Zs({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=(0,Ys.IH)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=(0,Ys.IH)({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=Zs({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Qs(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Qs(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const no={kernelName:r.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=fi({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=(0,Ys.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Qs(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var ro=n(31820);const so={kernelName:r.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=r.D5U.sizeFromShape(s.shape),o=a.shape,u=o[o.length-1],[l,c,h,d]=r.Wap.prepareAndValidate(s,a);if(0===c)return n.makeTensorInfo(l,s.dtype,[]);const p=n.data.get(a.dataId).values,f=n.bufferSync(s),m=(0,ro.m)(p,f,s.dtype,c,u,h,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,m.values)}};var ao=n(54468);const io={kernelName:r.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:u}=s;(0,Rs.H)([a,i],"gatherV2");const l=r.D5U.parseAxisParam(o,a.shape)[0],c=n.data.get(i.dataId).values,h=a.shape[l];for(let v=0;v<c.length;++v){const e=c[v];r.D5U.assert(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let d=u;null==u&&(d=0);const p=r.D5U.sizeFromShape(i.shape),f=r.Wap.segment_util.collectGatherOpShapeInfo(a,i,l,d),m=Zs({inputs:{x:a},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Zs({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),b=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],x=n.bufferSync(g),y=n.bufferSync(m),k=(0,ao.i)(y,x,b);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,k.dtype,k.values)}};var oo=n(36272),uo=n(26259);const lo={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.D5U.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=Zs({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),u=ji(o,!0,n),l=Zs({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}},co=(0,Os.A)(r.avt,(e=>Number.isFinite(e)?1:0),"bool"),ho={kernelName:r.avt,backendName:"cpu",kernelFunc:co},po=(0,Os.A)(r.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),fo={kernelName:r.iWB,backendName:"cpu",kernelFunc:po},mo=(0,Os.A)(r.r7n,(e=>Number.isNaN(e)?1:0),"bool"),go={kernelName:r.r7n,backendName:"cpu",kernelFunc:mo};var bo=n(88405),xo=n(40635),yo=n(61325);const ko={kernelName:r.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=(0,yo.b)(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}};var vo=n(55223);const wo=(0,Os.A)(r.kU,(e=>Math.log1p(e))),Io={kernelName:r.kU,backendName:"cpu",kernelFunc:wo},So=(0,zs.b)(((e,t)=>e&&t)),Co=(0,ka.j)(r.PYm,So,null,"bool"),No={kernelName:r.PYm,backendName:"cpu",kernelFunc:Co},To=(0,Os.A)(r.VfG,(e=>e?0:1),"bool"),$o={kernelName:r.VfG,backendName:"cpu",kernelFunc:To},Eo=(0,zs.b)(((e,t)=>e||t)),Ao=(0,ka.j)(r.MZg,Eo,null,"bool"),Do={kernelName:r.MZg,backendName:"cpu",kernelFunc:Ao};const Ro={kernelName:r.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=s;(0,Rs.H)(a,"LRN");const c=a.shape[3],h=c-1,d=n.data.get(a.dataId).values,p=r.D5U.sizeFromShape(a.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,h);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let r=0;r<p;r++){const e=m(r),t=d[r]*Math.pow(o+u*e,-l);f[r]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}};const Fo={kernelName:r.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:i,dy:o}=t,{depthRadius:u,bias:l,alpha:c,beta:h}=s;(0,Rs.H)(o,"LRNGrad");const d=r.D5U.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,b=new Float32Array(d),x=d;for(let r=0;r<x;r++){const e=r%p,t=r-e+Math.max(0,e-u),n=r-e+Math.min(p,e+u+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(m[r],2);s=c*s+l;for(let a=t;a<n;a++){let e=-2*c*h*m[a]*g[r]/s;r===a&&(e+=Math.pow(s,-h)),e*=f[r],b[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,b)}};var _o=n(55126),Oo=n(77107);function Mo(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,u=n;let l=a.shape;const c=l.length,h=r.D5U.parseAxisParam(i,l);let d=h;const p=r.Wap.getAxesPermutation(d,c);let f=u.data.get(a.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=(0,Oo.H)(f,l,a.dtype,p,e),d=r.Wap.getInnerMostAxes(d.length,c),l=e}(0,Rs.H)(a,"max"),r.Wap.assertAxesAreInnerMostDims("max",d,c);const[m,g]=r.Wap.computeOutAndReduceShapes(l,d),b=r.D5U.sizeFromShape(g),x=(0,_o.B)(f,b,m,a.dtype),y=u.write(x,m,a.dtype);let k=m;if(o){k=r.Wap.expandShapeToKeepDim(m,h)}return{dataId:y,shape:k,dtype:a.dtype}}const Bo={kernelName:r.YoZ,backendName:"cpu",kernelFunc:Mo};var Wo=n(71717);const Lo={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,Rs.H)(a,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))h=(0,Ws.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.D5U.computeStrides(a.shape),s=Na(e,a.shape,a.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}};const Uo={kernelName:r.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s;(0,Rs.H)(a,"maxPool3d");const h=r.Wap.computePool3DInfo(a.shape,i,o,1,u,l,c),d=$a(n.data.get(a.dataId).values,a.shape,a.dtype,r.D5U.computeStrides(a.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const zo={kernelName:r.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s;(0,Rs.H)([a,i],"maxPool3DGrad");const h=r.Wap.computePool3DInfo(i.shape,o,u,1,l,c),d=function(e,t){const n=(0,r.f3b)(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*s-p;let y=x;for(;y<0;)y+=o;const k=Math.min(t.inDepth,c+x);for(let s=0;s<t.outHeight;++s){const c=s*a-f;let p=c;for(;p<0;)p+=u;const v=Math.min(t.inHeight,h+c);for(let a=0;a<t.outWidth;++a){const f=a*i-m;let w=f;for(;w<0;)w+=l;const I=Math.min(t.inWidth,d+f);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=y;t<k;t+=o){const n=t-x;for(let s=p;s<v;s+=u){const a=s-c;for(let i=w;i<I;i+=l){const o=i-f,u=e.get(r,t,s,i,g);u>=S&&(S=u,C=n*h*d+a*h+o)}}}n.set(C,r,b,s,a,g)}}}return n}(n.bufferSync(i),h),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterDepth,k=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=y-1-h.padInfo.front,I=v-1-h.padInfo.left,S=k-1-h.padInfo.top,C=(0,r.f3b)(i.shape,"float32"),N=n.bufferSync(a);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const a=t-w,i=n-S,o=s-I;let u=0;for(let t=0;t<y;t+=g){const n=(a+t)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let s=0;s<k;s+=b){const a=(i+s)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=x){const l=(o+i)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const c=y*k*v-1-d.get(r,n,a,l,e)===t*k*v+s*v+i?1:0;if(0===c)continue;u+=N.get(r,n,a,l,e)*c}}}C.set(u,r,t,n,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Po={kernelName:r.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,u=i;(0,Rs.H)([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:d}=s,p=r.Wap.computePool2DInfo(u.shape,l,c,1,h,d),f=n.data.get(u.dataId).values,m=(0,r.f3b)(p.outShape,u.dtype,Ta(f,u.shape,u.dtype,p).values),g=p.strideHeight,b=p.strideWidth,x=p.dilationHeight,y=p.dilationWidth,k=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,I=k-1-p.padInfo.top,S=(0,r.f3b)(u.shape,"float32"),C=n.data.get(a.dataId).values,N=(0,r.f3b)(a.shape,"float32",C);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const s=t-I,a=n-w;let i=0;for(let t=0;t<k;t+=x){const n=(s+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let s=0;s<v;s+=y){const o=(a+s)/b;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=k*v-1-m.get(r,n,o,e)===t*v+s?1:0;if(0===u)continue;i+=N.get(r,n,o,e)*u}}S.set(i,r,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Vo={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;(0,Rs.H)(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,h=r.Wap.computePool2DInfo(s.shape,a,i,[1,1],o),[d,p]=function(e,t,n,s,a){const i=Na(e,0,n,r.D5U.computeStrides(t),a,"max"),o=Ta(e,t,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,u,h),f=l.write(d,h.outShape,s.dtype),m=l.write(p,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const Ho={kernelName:r.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=r.D5U.parseAxisParam(i,a.shape),l=r.Wap.computeOutAndReduceShapes(a.shape,u)[1],c=r.D5U.sizeFromShape(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=(0,Ua.pj)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=Vi({inputs:{a:p,b:d},backend:n});h.push(f);const m=Ci({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const Go={kernelName:r.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,Rs.H)(a,"min");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,la.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",l,h.shape.length);const[d,p]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(p),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,m);if(o){const e=Zs({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};var jo=n(612);const Xo={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,mode:o}=s;(0,Rs.H)(a,"mirrorPad");const u=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===o?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,f=r.D5U.computeStrides(a.shape),m=r.D5U.sizeFromShape(u),g=u.length,b=r.D5U.computeStrides(u),x=r.D5U.getTypedArrayFromDType(a.dtype,m);for(let y=0;y<m;y++){let e=r.D5U.indexToLoc(y,g,b);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-h:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+h);e=e.map(((e,t)=>e-l[t]));const t=r.D5U.locToIndex(e,p,f);x[y]=d[t]}return{dataId:n.write(x,u,a.dtype),shape:u,dtype:a.dtype}}},qo=(0,zs.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Ko=(0,ka.j)(r.Vbg,qo),Qo={kernelName:r.Vbg,backendName:"cpu",kernelFunc:Ko};function Yo(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=a.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const l=r.D5U.parseAxisParam([u],a.shape),c=Mo({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=r.Wap.expandShapeToKeepDim(c.shape,l),d=Zs({inputs:{x:c},backend:n,attrs:{shape:h}}),p=(0,Gi.lu)({inputs:{a:a,b:d},backend:n}),f=(0,Wi.Qq)({inputs:{x:p},backend:n}),m=Ci({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=Zs({inputs:{x:m},backend:n,attrs:{shape:h}}),b=Vi({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}const Zo={kernelName:r.Gcp,backendName:"cpu",kernelFunc:Yo};const Jo={kernelName:r.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:u}=s;(0,Rs.H)(a,"multinomial");const l=u?a:Yo({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=l.shape[0],h=l.shape[1],d=n.data.get(l.dataId).values,p=[c,i],f=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(p),"int32");for(let r=0;r<c;++r){const e=r*h,t=new Float32Array(h-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=ts.alea(o.toString()),s=r*i;for(let r=0;r<i;++r){const e=n();f[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[s+r]=n;break}}}return u||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};var eu=n(70854);const tu=r.GDt.GP;const nu={kernelName:r.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;(0,Rs.H)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=tu(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ru=r.GDt.qP;const su={kernelName:r.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;(0,Rs.H)(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=ru(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},au=r.GDt.pA;const iu={kernelName:r.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;(0,Rs.H)(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=au(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};var ou=n(98584);const uu={kernelName:r.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:i,depth:o,onValue:u,offValue:l}=s;(0,Rs.H)(a,"oneHot");const c=r.D5U.sizeFromShape(a.shape),h=new Float32Array(c*o);h.fill(l);const d=n.data.get(a.dataId).values;for(let r=0;r<c;++r)d[r]>=0&&d[r]<o&&(h[r*o+d[r]]=u);return n.makeTensorInfo([...a.shape,o],i,h)}};function lu(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,Ka.k)({inputs:{input:r},backend:n}),t=lu({inputs:{x:e},backend:n}),s=Xa({inputs:{input:r},backend:n}),a=lu({inputs:{x:s},backend:n}),i=(0,Ha.P)({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Qi({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const cu={kernelName:r.RuY,backendName:"cpu",kernelFunc:lu};const hu={kernelName:r.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=(0,Ka.k)({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Xa({inputs:{input:s},backend:r}),i=lu({inputs:{x:a},backend:r}),o=(0,Ha.P)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Qi({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function du(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return Li({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Qa({inputs:t.map((e=>{const t=Li({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const pu={kernelName:r.QiL,backendName:"cpu",kernelFunc:du};const fu={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;(0,Rs.H)(a,"pad");const u=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=i.map((e=>e[0])),c=n.data.get(a.dataId).values,h=r.D5U.sizeFromShape(a.shape),d=a.shape.length,p=r.D5U.computeStrides(a.shape),f=r.D5U.sizeFromShape(u),m=u.length,g=r.D5U.computeStrides(u),b=r.D5U.getTypedArrayFromDType(a.dtype,f);0!==o&&b.fill(o);for(let x=0;x<h;x++){const e=r.D5U.indexToLoc(x,d,p).map(((e,t)=>e+l[t]));b[r.D5U.locToIndex(e,m,g)]=c[x]}return{dataId:n.write(b,u,a.dtype),shape:u,dtype:a.dtype}}},mu=(0,zs.b)(((e,t)=>Math.pow(e,t))),gu=(0,ka.j)(r.pe_,mu),bu={kernelName:r.pe_,backendName:"cpu",kernelFunc:gu};var xu=n(29560),yu=n(59885);const ku={kernelName:r.dDz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=(0,yu.c)(u,l,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};var vu=n(36486);const wu={kernelName:r.CQl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,vu.S)(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};var Iu=n(8306);const Su={kernelName:r.BiW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=(0,Iu.p)(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}};var Cu=n(99230);const Nu={kernelName:r.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=(0,Cu.b)(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},Tu=(0,Os.A)(r.$HU,(e=>1/e)),$u={kernelName:r.$HU,backendName:"cpu",kernelFunc:Tu};const Eu={kernelName:r._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s;(0,Rs.H)(a,"resizeBilinear");const l=r.D5U.computeStrides(a.shape),[c,h]=u,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,b=new Float32Array(r.D5U.sizeFromShape([d,c,h,m])),x=[i&&c>1?p-1:p,i&&h>1?f-1:f],y=[i&&c>1?c-1:c,i&&h>1?h-1:h];let k=0;const v=x[0]/y[0],w=x[1]/y[1];for(let r=0;r<d;r++)for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),i=r*l[0]+n*l[1],u=r*l[0]+a*l[1];for(let e=0;e<h;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=i+n*l[2],h=u+n*l[2],d=i+a*l[2],p=u+a*l[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[p+e]-n)*r-a)*s;b[k++]=i}}}return n.makeTensorInfo([d,c,h,m],"float32",b)}};const Au={kernelName:r.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;(0,Rs.H)([i,a],"resizeBilinearGrad");const u=r.D5U.computeStrides(a.shape),[l,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=[o&&p>1?c-1:c,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=g[0]/b[0],y=g[1]/b[1],k=n.data.get(i.dataId).values;let v=0;for(let r=0;r<l;r++){const e=r*u[0];for(let t=0;t<p;t++){const n=t*x,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*u[1],i=e+s*u[1],o=n-r,l=1-o;for(let e=0;e<f;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),s=t-n,c=1-s,p=a+n*u[2],f=a+r*u[2],g=i+n*u[2],b=i+r*u[2],x=l*c,w=l*s,I=o*c,S=o*s;for(let e=0;e<d;e++){const t=k[v++];m[p+e]+=t*x,m[f+e]+=t*w,m[g+e]+=t*I,m[b+e]+=t*S}}}}return n.makeTensorInfo([l,h,c,d],"float32",m)}};const Du={kernelName:r.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s;(0,Rs.H)(a,"resizeNearestNeighbor");const l=r.D5U.computeStrides(a.shape),[c,h]=u,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,b=new Float32Array(d*c*h*m),x=[i&&c>1?p-1:p,i&&h>1?f-1:f],y=[i&&c>1?c-1:c,i&&h>1?h-1:h],k=x[0]/y[0],v=x[1]/y[1];let w=0;for(let r=0;r<d;r++){const e=r*l[0];for(let t=0;t<c;t++){const n=o?k*(t+.5):k*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<h;e++){const t=o?v*(e+.5):v*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<m;e++){const t=g[r+e];b[w++]=t}}}}return n.makeTensorInfo([d,c,h,m],a.dtype,b)}};const Ru={kernelName:r.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;(0,Rs.H)([i,a],"resizeNearestNeighborGrad");const u=r.D5U.computeStrides(a.shape),l=r.D5U.computeStrides(i.shape),[c,h,d,p]=a.shape,[,f,m]=i.shape,g=new Float32Array(c*h*d*p),b=n.data.get(i.dataId).values,x=[o&&f>1?h-1:h,o&&m>1?d-1:d],y=[o&&f>1?f-1:f,o&&m>1?m-1:m],k=x[0]/y[0],v=x[1]/y[1],w=1/k,I=1/v,S=2*Math.ceil(w)+2,C=2*Math.ceil(I)+2;for(let r=0;r<c;r++){const e=r*u[0];for(let t=0;t<h;t++){const n=e+t*u[1],r=Math.floor(t*w),s=Math.floor(r-S/2);for(let a=0;a<d;a++){const r=n+a*u[2],i=Math.floor(a*I),c=Math.floor(i-C/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<S;r++){const u=r+s;if(u<0||u>=f)continue;const p=e+u*l[1],g=u*k;if(t===Math.min(h-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*l[2],s=t*v;a===Math.min(d-1,o?Math.round(s):Math.floor(s))&&(i+=b[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}};const Fu={kernelName:r.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s;(0,Rs.H)(a,"reverse");const o=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);if(0===o)return(0,Ws.y)({inputs:{x:a},backend:n});const l=new r.YDk(a.shape,a.dtype),c=n.bufferSync(a);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();u.forEach((e=>t[e]=a.shape[e]-1-t[e])),l.set(c.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},_u={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,u=n,l=r.D5U.getTypedArrayFromDType(s.dtype,r.D5U.sizeFromShape(s.shape)),[c,h,d,p]=s.shape,[f,m]=r.Wap.getImageCenter(o,h,d),g=Math.sin(a),b=Math.cos(a),x=u.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=r*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let r=0;r<d;r++){const s=r*p;for(let a=0;a<p;a++){const o=[c,t,r,a],u=o[2],y=o[1];let k=(u-f)*b-(y-m)*g,v=(u-f)*g+(y-m)*b;k=Math.round(k+f),v=Math.round(v+m);let w=i;if("number"!==typeof i&&(w=3===a?255:i[a]),k>=0&&k<d&&v>=0&&v<h){w=x[e+v*(d*p)+k*p+a]}l[e+n+s+a]=w}}}}return{dataId:u.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ou=(0,Os.A)(r.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Mu={kernelName:r.e07,backendName:"cpu",kernelFunc:Ou};var Bu=n(7742),Wu=n(60001);const Lu={kernelName:r.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=r.Wap.calculateShapes(i,a,o),p=n.bufferSync(a),f=n.bufferSync(i),m=(0,Wu.N)(p,f,o,d,c,l,u,h,0,!0);return n.makeTensorInfo(o,m.dtype,m.values)}};function Uu(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function zu(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const Pu={kernelName:r.nr8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:a,values:i}=t,{side:o}=s,u=function(e,t,n,s,a,i){const o=r.D5U.getArrayFromDType("int32",n*a);for(let r=0;r<n;++r){const n=e.slice(r*s,(r+1)*s),u=r*a;for(let e=0;e<a;++e)o[u+e]="left"===i?Uu(n,t[e+u]):zu(n,t[e+u])}return o}(n.data.get(a.dataId).values,n.data.get(i.dataId).values,a.shape[0],a.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",u)}};const Vu={kernelName:r.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t;(0,Rs.H)([s,a,i],"select");const o=s.shape.length,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=(0,r.x8V)(a.dtype,i.dtype),d=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(a.shape),h);let p=0;const f=0===o||o>1||1===a.shape.length?1:r.D5U.sizeFromShape(a.shape.slice(1));for(let r=0;r<u.length;r++)for(let e=0;e<f;e++)1===u[r]?d[p++]=l[r]:d[p++]=c[r];return n.makeTensorInfo(a.shape,h,d)}},Hu=r.Wap.SELU_SCALEALPHA,Gu=r.Wap.SELU_SCALE,ju=(0,Os.A)(r.oFR,(e=>e>=0?Gu*e:Hu*(Math.exp(e)-1))),Xu={kernelName:r.oFR,backendName:"cpu",kernelFunc:ju},qu=(0,Os.A)(r.i5y,(e=>e<0?-1:e>0?1:0)),Ku={kernelName:r.i5y,backendName:"cpu",kernelFunc:qu},Qu=(0,Os.A)(r.RQH,(e=>Math.sin(e))),Yu={kernelName:r.RQH,backendName:"cpu",kernelFunc:Qu},Zu=(0,Os.A)(r.wYB,(e=>Math.sinh(e))),Ju={kernelName:r.wYB,backendName:"cpu",kernelFunc:Zu},el=Math.log(1.1920928955078125e-7)+2,tl=(0,Os.A)(r.MRv,(e=>{const t=e>-el,n=e<el,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),nl={kernelName:r.MRv,backendName:"cpu",kernelFunc:tl};const rl={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;(0,Rs.H)([a],"spaceToBatchND");const u=r.D5U.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let r=1+i.length;r<a.shape.length;++r)l.push([0,0]);const c=fu.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.Wap.getReshaped(c.shape,i,u,!1),d=r.Wap.getPermuted(h.length,i.length,!1),p=r.Wap.getReshapedPermuted(c.shape,i,u,!1),f=Zs({inputs:{x:c},backend:n,attrs:{shape:h}}),m={x:f},g={perm:d},b=(0,la.p)({inputs:m,backend:n,attrs:g}),x=Zs({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),x}};var sl=n(42123);const al={kernelName:r.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=(0,sl.c)(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var il=n(3849);const ol={kernelName:r.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=(0,il.U)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};var ul=n(13989);const ll={kernelName:r.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,ul.V)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const cl={kernelName:r.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,ul.V)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const hl={kernelName:r.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:d,outputSize:p}=r.Wap.calculateShapes(i,a,u),f=!1,m=n.bufferSync(a);let g;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(o.dataId).values[0]);g=(0,Wu.N)(m,e,u,p,h,c,l,d,t,f);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];g=(0,Wu.N)(m,e,u,p,h,c,l,d,t,f);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];g=(0,Wu.N)(m,e,u,p,h,c,l,d,t,f);break}case"string":{const e=n.bufferSync(i),t=r.D5U.decodeString(n.data.get(o.dataId).values[0]);g=(0,Wu.N)(m,e,u,p,h,c,l,d,t,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(u,g.dtype,g.values)}};const dl={kernelName:r.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],l=r.Wap.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=(0,_a.tP)({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r}))}};var pl=n(10440);const fl={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,Rs.H)(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var ml=n(40212),gl=n(27693);const bl=(0,Os.A)(r.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),xl={kernelName:r.h8e,backendName:"cpu",kernelFunc:bl};var yl=n(62210);const kl={kernelName:r.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s;(0,Rs.H)(a,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:k,strides:v}=r.kuN.sliceInfo(a.shape,i,o,u,l,c,h,d,p);let w;if(g)w=Zs({inputs:{x:a},backend:n,attrs:{shape:m}});else if(b||x){r.D5U.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=r.kuN.computeOutShape(y,k,v),t=(0,_a.tP)({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=Zs({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(a),t=(0,yl.t)(f,e,v,y);w=n.makeTensorInfo(m,t.dtype,t.values)}return w}};var vl=n(66841);const wl={kernelName:r._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=(0,vl.A)(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var Il=n(38639);const Sl={kernelName:r.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=(0,Il.Q)(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var Cl=n(26626);const Nl={kernelName:r.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(a.dataId).values,o=(0,Cl.h)(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},Tl=(0,Os.A)(r.sEM,(e=>Math.tan(e))),$l={kernelName:r.sEM,backendName:"cpu",kernelFunc:Tl},El=(0,Os.A)(r.MIZ,(e=>Math.tanh(e))),Al={kernelName:r.MIZ,backendName:"cpu",kernelFunc:El};const Dl={kernelName:r.SIB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:a,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=r.Wap.calculateShapes(i,a,s.shape),d=n.bufferSync(a),p=n.bufferSync(i),f=n.bufferSync(s),m=(0,Wu.N)(d,p,s.shape,h,l,u,o,c,f,!1);return n.makeTensorInfo(s.shape,m.dtype,m.values)}};var Rl=n(27723);const Fl={kernelName:r.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;(0,Rs.H)(s,"tile");const i=(0,Rl.R)(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var _l=n(69556);const Ol={kernelName:r.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;(0,Rs.H)(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=(0,_l.W)(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Ml={kernelName:r.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:a,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=n,[h,d,p,f]=a.shape,[m,g]=null!=c?c:[d,p],b=[h,m,g,f],x=r.D5U.computeStrides(a.shape),y=x[0],k=x[1],v=x[2],w=r.D5U.computeStrides(b),I=w[0],S=w[1],C=w[2],N=r.D5U.getTypedArrayFromDType(a.dtype,r.D5U.sizeFromShape(b));N.fill(l);const T=s.data.get(a.dataId).values,$=s.data.get(i.dataId).values;for(let r=0;r<h;++r){const e=1===i.shape[0]?$:$.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let s=0;s<f;++s){let a;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const c=(e[0]*n+e[1]*t+e[2])/i,h=(e[3]*n+e[4]*t+e[5])/i,f=Bl(c,p,u),m=Bl(h,d,u);switch(o){case"nearest":a=Ll(T,d,p,y,k,v,r,m,f,s,l);break;case"bilinear":a=Ul(T,d,p,y,k,v,r,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}N[r*I+t*S+n*C+s]=a}return s.makeTensorInfo(b,a.dtype,N)}return{dataId:s.write(N,b,a.dtype),shape:a.shape,dtype:a.dtype}}};function Bl(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Wl(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function Ll(e,t,n,r,s,a,i,o,u,l,c){return Wl(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function Ul(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*Wl(e,t,n,r,s,a,i,h,d,l,c)+(u-d)*Wl(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*Wl(e,t,n,r,s,a,i,p,d,l,c)+(u-d)*Wl(e,t,n,r,s,a,i,p,f,l,c))}var zl=n(75638);const Pl={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;(0,Rs.H)(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,zl.S)(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const Vl={kernelName:r.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let p=0;p<i;p++)p!==a&&(u[l++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=(0,_a.tP)({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=Zs({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}};const Hl={kernelName:r.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s;(0,Rs.H)(a,"unsortedSegmentSum");const u=[],l=[],c=a.shape.length-i.shape.length;let h=i;for(let r=0;r<c;++r){const e=Li({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,l.push(e)}for(let p=0;p<o;++p){const e=r.D5U.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),s=(0,Ei.Dg)({inputs:{a:t,b:h},backend:n}),i=(0,Ua.pj)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=(0,Ii.Jp)({inputs:{a:i,b:a},backend:n}),c=Ci({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});u.push(c),l.push(t),l.push(s),l.push(i),l.push(o),l.push(c)}const d=du({inputs:u,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Gl=[na,ra.fC,aa,oa,Ys.j4,ua,ca,ha,da,pa,ma,ba,ya,Ia,Ca,Ea,Aa,Da,Ra,ta,Fa,Oa,Ba,Wa.T0,La,Ua.Mq,za.y2,Va,Ha.z,Ga,Ya,Ja,ei,ti,ni,ri,si,ii,ui,li,ci,hi,di,pi,mi,gi,bi,xi,yi,ki,vi,wi,Ti,Bs,$i,Ei.Kx,Bi,Wi.SX,Ui,zi.Vu,Ki,Yi,Zi,Ji.Ao,eo.EE,to,no,so,io,oo.Ce,uo.V,Ws.I,lo,qa,ho,fo,go,Us,bo.zh,xo.m3,ko,vo.xM,Io,No,$o,Do,Ro,Fo,Bo,Wo.eJ,Lo,Uo,zo,Po,Vo,Ho,Go,jo.u0,Xo,Qo,Jo,Ii.f$,eu.AF,nu,su,iu,ou.nP,uu,hu,pu,fu,bu,Hs,xu.Iz,ku,wu,Su,Nu,Ka.O,Hi,$u,js,qs,Js,Eu,Au,Du,Ru,Fu,_u,Mu,Bu.FY,Lu,Pu,Vu,Xu,Ks.BP,Ku,Yu,Ju,_a.C6,Zo,nl,rl,al,ol,ll,cl,hl,dl,pl.cz,fl,ml.MS,gl.j,xl,kl,wl,Sl,Nl,Gi.GR,Ni,$l,Al,Dl,Fl,Ol,Ml,la.b,Pl,Vl,Hl,cu];for(const Xg of Gl)(0,r.wCN)(Xg);var jl=n(94739);r.C2$.isBrowser()&&(0,r.jqO)("webgl",(()=>new jl.QC),2);var Xl=n(16697);class ql{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}var Kl=n(21034),Ql=n(55156);const Yl="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Zl{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=(0,Xl.C9)(a);let i="";if(s)if(0===a||1===r.D5U.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${(0,Ql.kW)(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=(0,Kl.Ky)("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function Jl(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ec={kernelName:r.iJz,backendName:"webgl",kernelFunc:Jl};function tc(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=Jl({inputs:{x:r},backend:n}),u=Jl({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const nc={kernelName:r.Zz9,backendName:"webgl",kernelFunc:tc},rc="return (a < 0.) ? b * a : a;",sc="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ac={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(i,"float32")),u=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(sc,a.shape,o.shape):new ql(rc,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},ic="return (a < 0.) ? b * a : a;",oc="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const uc={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(oc,s.shape,a.shape):new ql(ic,s.shape,a.shape);return n.runWebGLProgram(i,[s,a],"float32")}};var lc=n(84518),cc=n(29365);function hc({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:i})=>{const{x:o}=a,u=i,l=s||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new cc.cc(o.shape,t):new lc.l(o.shape,e),u.runWebGLProgram(c,[o],l)}}function dc({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,h=u;if(s&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[s,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new ql(e,l.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,r.x8V)(n.dtype,s.dtype))})),i=tc({inputs:{real:s,imag:a},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(a),i}const d=i||(0,r.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([l,c]))&&null!=a){const e=h.texData.get(l.dataId).values,t=h.texData.get(c.dataId).values,n="string"===l.dtype?r.Wap.fromUint8ToStringArray(e):e,s="string"===l.dtype?r.Wap.fromUint8ToStringArray(t):t,[i,o]=a(l.shape,c.shape,n,s,d),u=h.makeTensorInfo(o,d);return h.texData.get(u.dataId).values=i,u}let p;return p=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Zl(t,l.shape,c.shape,n):new ql(e,l.shape,c.shape),h.runWebGLProgram(p,[l,c],d)}}function pc(e,t=!1){if("linear"===e)return t?cc.t$:lc.t$;if("relu"===e)return t?cc.RX:lc.RX;if("elu"===e)return t?cc.Cv:lc.Cv;if("relu6"===e)return t?cc.eW:lc.eW;if("prelu"===e)return t?oc:ic;if("leakyrelu"===e)return t?sc:rc;if("sigmoid"===e)return t?cc.Tq:lc.Tq;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class fc{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const mc="return areal * breal - aimag * bimag;",gc="return areal * bimag + aimag * breal;";class bc{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}var xc=n(22023);const yc="return a * b;";function kc(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=r.Wap.upcastType(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new bc(mc,s.shape,a.shape),i=new bc(gc,s.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(r,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=tc({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[r,o]=(0,xc.Th)(s.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=r,u}let o;return o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(yc,s.shape,a.shape):new ql(yc,s.shape,a.shape),n.runWebGLProgram(o,[s,a],i)}const vc={kernelName:r.wYn,backendName:"webgl",kernelFunc:kc};var wc=n(28831),Ic=n(91906);function Sc(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,u=r.D5U.sizeFromShape(a.shape),l=r.D5U.inferFromImplicitShape(i,u),c=r.D5U.sizeFromShape(l);r.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||(0,Ic.oT)(a.shape,l)||null!==h.texture&&(0,Ic.oT)(h.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[(0,Ic.Cp)(e.shape),...(0,Ic.W8)(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[(0,Ic.Cp)(t),...(0,Ic.W8)(t)],i=new wc.v(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,l,o)}const Cc={kernelName:r.HZH,backendName:"webgl",kernelFunc:Sc};class Nc{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${r.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Tc{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function $c(e,t,n,s){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=r.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let i=e;for(let r=0;r<a.length;r++){const{inSize:o,windowSize:u,outSize:l}=a[r];let c,h;c="mean"===n?0===r?new Nc({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Nc({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Tc({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class Ec{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=(0,Ql.kW)(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Ac{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=(0,Ql.kW)(this.rank),s=(0,Kl.k6)("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Dc(e,t,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ac(e.shape,t):new Ec(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Rc(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=t,i=e.shape.length,o=r.D5U.parseAxisParam(a,e.shape);let u=o;const l=r.Wap.getAxesPermutation(u,i),c=null!=l;let h=e;c&&(h=Dc(e,l,s),u=r.Wap.getInnerMostAxes(u.length,i)),r.Wap.assertAxesAreInnerMostDims("sum",u,i);const[d,p]=r.Wap.computeOutAndReduceShapes(h.shape,u);let f=d;n&&(f=r.Wap.expandShapeToKeepDim(d,o));const m=r.D5U.sizeFromShape(p),g=Sc({inputs:{x:h},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/m,m]},backend:s}),b=$c(g,(0,r.z4k)(e.dtype),"sum",s),x=Sc({inputs:{x:b},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),c&&s.disposeIntermediateTensorInfo(h),x}(a,i,o,n)}const Fc={kernelName:r.GBy,backendName:"webgl",kernelFunc:Rc};function _c(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=s.shape[a[c]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=(0,xc.Fv)(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype);i.texData.get(l.dataId).values=t}else l=Dc(s,a,i);return l}const Oc={kernelName:r.G3Y,backendName:"webgl",kernelFunc:_c};function Mc({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,h=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),x=r.D5U.sizeFromShape(g),y=r.D5U.sizeFromShape(b),k=r.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.D5U.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[x,d,f]:[x,f,d],w=s?[y,m,p]:[y,p,m],I=Sc({inputs:{x:e},backend:a,attrs:{shape:v}}),S=Sc({inputs:{x:t},backend:a,attrs:{shape:w}}),C=[I,S],N=Math.max(x,y),T=n?I.shape[1]:I.shape[2],$=null!=i,E=null!=o,A="leakyrelu"===l,D=null!=l?pc(l,!0):null;let R;if((1===f||1===m)&&T>1e3&&!1===($||E||A||null!=D)){let e=I,t=S;n&&(e=_c({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),s&&(t=_c({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const r=1===m;let i=e;1!==m&&(i=Sc({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),C.push(i));const o=1===m?2:1;let u=t;r&&(u=Sc({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),C.push(u));const l=kc({inputs:{a:i,b:u},backend:a});R=Rc({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const l=(0,r.x8V)(e.dtype,t.dtype),c=new fc(v,w,[N,f,m],n,s,$,D,E,A),h=[I,S];if(null!=i&&h.push(i),E&&h.push(o),A){const e=a.makeTensorInfo([],"float32",r.D5U.createScalarValue(u,"float32"));h.push(e),C.push(e)}R=a.runWebGLProgram(c,h,l)}const F=Sc({inputs:{x:R},backend:a,attrs:{shape:k}});C.push(R);for(const r of C)a.disposeIntermediateTensorInfo(r);return F}const Bc={kernelName:r.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Mc({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Wc="return abs(x);";const Lc={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=(0,xc.CJ)(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cc.cc(s.shape,Wc):new lc.l(s.shape,Wc),n.runWebGLProgram(a,[s],s.dtype)}},Uc=hc({opSnippet:lc.D1+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),zc={kernelName:r.VGw,backendName:"webgl",kernelFunc:Uc},Pc=hc({opSnippet:lc.D1+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Vc={kernelName:r.SpW,backendName:"webgl",kernelFunc:Pc},Hc="return a + b;",Gc=dc({opSnippet:Hc,packedOpSnippet:Hc,supportsComplex:!0,cpuKernelImpl:xc.cK}),jc={kernelName:r.mm_,backendName:"webgl",kernelFunc:Gc};class Xc{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class qc{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Kc={kernelName:r.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,a=n;if(1===a.length)return Jl({inputs:{x:a[0]},backend:s});if(a.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:s}),r=e({inputs:a.slice(t),backend:s});return e({inputs:[n,r],backend:s})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,r.x8V)(e,t))),o=a.map((e=>e.shape)),u=(0,r.OBj)().getBool("WEBGL_PACK")?new qc(a[0].shape,o):new Xc(a[0].shape,o);return s.runWebGLProgram(u,a,i)}};const Qc={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let d=a;null!=h&&(d=_c({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,u)),r.Wap.assertAxesAreInnerMostDims("all",c,u);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,c),m=Sc({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$c(m,m.dtype,"all",n);let b;if(o){b=Sc({inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}})}else b=Sc({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),b}};const Yc={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let d=a;null!=h&&(d=_c({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,u)),r.Wap.assertAxesAreInnerMostDims("any",c,u);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,c),m=Sc({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$c(m,m.dtype,"any",n);let b;if(o){b=Sc({inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}})}else b=Sc({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),b}};class Zc{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Jc{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=(0,Ql.kW)(u),c=(0,Kl.Ky)("coords",u);let h,d;if(1===i){d=u+1;const e=(0,Ql.kW)(d);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else d=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((e=>"int "+e)),g=(0,Kl.Ky)("sourceLocR",d-1).concat("inIdx.r"),b=(0,Kl.Ky)("sourceLocG",d-1).concat("inIdx.g"),x=(0,Kl.Ky)("sourceLocB",d-1).concat("inIdx.b"),y=(0,Kl.Ky)("sourceLocA",d-1).concat("inIdx.a"),k="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function eh(e,t,n,s=null){let a=t.shape[0],i=t.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=r.Wap.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},l=new Zc(u,n,null==s),c=[t];null!=s&&c.push(s);const h=e.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const d=eh(e,t,n,h);return e.disposeIntermediateTensorInfo(h),d}function th(e,t,n,s=null){const a=null!=s?s.shape:t.shape,i=a[a.length-1],o=r.Wap.computeOptimalWindowSize(i),u=new Jc(a,o,n,null==s),l=null==s?[t]:[t,s],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=th(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function nh(e,t,n,s){const a=[n];if(r.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,l]=r.Wap.computeOutAndReduceShapes(o.shape,a),c=r.D5U.sizeFromShape(l),h=Sc({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=eh(e,h,s);n.push(d);const p=Sc({inputs:{x:d},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return th(e,t,s)}const rh={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=_c({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=nh(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const sh={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=_c({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=nh(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ah=hc({opSnippet:lc.D1+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ih={kernelName:r.M2y,backendName:"webgl",kernelFunc:ah},oh=hc({opSnippet:lc.D1+"return log(x + sqrt(x * x + 1.0));"}),uh={kernelName:r.qw7,backendName:"webgl",kernelFunc:oh},lh=hc({opSnippet:lc.D1+"\n  return atan(x);\n"}),ch={kernelName:r.jMg,backendName:"webgl",kernelFunc:lh},hh=dc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),dh={kernelName:r.QCc,backendName:"webgl",kernelFunc:hh},ph=hc({opSnippet:lc.D1+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),fh={kernelName:r.Oyi,backendName:"webgl",kernelFunc:ph};class mh{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(a/4),k=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class gh{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),w=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${k});\n      }\n    `}}const bh={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,Ic.HS)(a,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return Jl({inputs:{x:a},backend:n});const h=new mh(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};const xh={kernelName:r._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],u,l,c),d=new gh(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class yh{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kh{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vh={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=r.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),p=new kh(d);return n.runWebGLProgram(p,[a],o.dtype)}};const wh={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;(0,Ic.HS)([a,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,u,l,1,c),d=new yh(h);return n.runWebGLProgram(d,[a],o.dtype)}};const Ih={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Mc({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class Sh{constructor(e,t,n,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ch{constructor(e,t,n,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Nh={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:u}=e;r.D5U.assert(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=u&&(d=u.shape,c.push(u));const p=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ch(s.shape,a.shape,i.shape,h,d,l):new Sh(s.shape,a.shape,i.shape,h,d,l);return t.runWebGLProgram(p,c,c[0].dtype)}};class Th{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,Ql.kW)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return $h.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${$h[t]} = start[${t}] + coords.${$h[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const $h=["x","y","z","w","u","v"];class Eh{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,Ql.kW)(this.rank),n=(0,Kl.Ky)("coords",this.rank),r=(0,Kl.Ky)("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Ah(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[u,l]=r.kuN.parseSliceParams(a,i,o);if(r.kuN.assertParamsValid(a,u,l),0===r.D5U.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=(0,xc.nT)(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=r.kuN.isSliceContinous(a.shape,u,l);if(c||!h){const e=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eh(l):new Th(l),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=r.kuN.computeFlatOffset(t,r.D5U.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}(a,u,l,n)}const Dh={kernelName:r.p2w,backendName:"webgl",kernelFunc:Ah},Rh={kernelName:r.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=r.Wap.getReshaped(a.shape,i,u),c=r.Wap.getPermuted(l.length,i.length),h=r.Wap.getReshapedPermuted(a.shape,i,u),d=r.Wap.getSliceBeginCoords(o,i.length),p=r.Wap.getSliceSize(h,o,i.length),f=[],m=Sc({inputs:{x:a},backend:n,attrs:{shape:l}}),g=_c({inputs:{x:m},backend:n,attrs:{perm:c}}),b=Sc({inputs:{x:g},backend:n,attrs:{shape:h}}),x=Ah({inputs:{x:b},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const Fh={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=(0,xc.qO)(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};const _h={kernelName:r.hCO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,r.OBj)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||1===o){const e=n.texData.get(s.dataId).values,t=n.texData.get(a.dataId).values,[r,i]=(0,xc.XM)(s.shape,a.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype);return n.texData.get(o.dataId).values=r,o}let u;return u=i?new Zl("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,a.shape,!1):new ql("\n  return float(int(a.r) & int(b.r));\n",s.shape,a.shape),n.runWebGLProgram(u,[s,a],s.dtype)}};const Oh={kernelName:r.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,i=n.readSync(s.dataId),o=n.readSync(a.dataId),u=r.Wap.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Mh=dc({opSnippet:"return float(a != b);",cpuKernelImpl:xc.cZ,dtype:"bool"}),Bh={kernelName:r.yQU,backendName:"webgl",kernelFunc:Mh};function Wh(e){const{inputs:t,backend:n}=e,{input:r}=t;return Jl({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Lh={kernelName:r.xJR,backendName:"webgl",kernelFunc:Wh};const Uh={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return Jl({inputs:{x:i},backend:s});const t=r.lls(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),a=tc({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Wh({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.D5U.hasEncodingLoss(i.dtype,o)){const e=Jl({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(s.shouldExecuteOnCPU([i])){const e=s.texData.get(i.dataId).values,[t,n,r]=(0,xc.cm)(e,i.shape,i.dtype,o);return s.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new lc.l(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.D5U.getTypedArrayFromDType("bool",1)),t=Mh({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},zh="return ceil(x);",Ph=hc({opSnippet:zh,packedOpSnippet:zh,cpuKernelImpl:xc.pk}),Vh={kernelName:r.gJX,backendName:"webgl",kernelFunc:Ph};class Hh{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Gh{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jh={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=s;let u;u=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new Gh(a.shape):new Hh(a.shape);const l=[[i],[o]];return n.runWebGLProgram(u,[a],a.dtype,l)}};class Xh{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function qh(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Kh={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Xh(r.shape),i=[qh(r,s.complexTensorInfos.real),qh(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class Qh{constructor(e){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++){const e=t[r-1];n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${e}));`)}const s=t.length,a=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Yh{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,a=(0,Ql.kW)(s),i=(0,Kl.Ky)("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let r=1;r<u.length;r++)u[r]=u[r-1]+e[r][t];const l=o[t],c=o.slice(-2),h=o.join();let d=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let r=1;r<u.length;r++){const e=u[r-1];d+=`\n        if (${l} < ${u[r]}  && ${l} >= ${u[r-1]}) {\n          return getChannel(\n            getT${r}(${Zh(o,l,e)}),\n            vec2(${Zh(c,l,e)}));\n        }`}const p=u.length,f=u[u.length-1];d+=`\n        return getChannel(\n          getT${p}(${Zh(o,l,f)}),\n          vec2(${Zh(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Zh(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Jh(e){const{inputs:t,backend:n}=e,{input:r}=t;return Jl({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ed={kernelName:r.J_u,backendName:"webgl",kernelFunc:Jh};function td(e,t,n){const s=e[0].dtype;if("complex64"===s){const r=e.map((e=>Wh({inputs:{input:e},backend:n}))),s=e.map((e=>Jh({inputs:{input:e},backend:n}))),a=td(r,t,n),i=td(s,t,n),o=tc({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=r.D5U.sizeFromShape(e.shape.slice(t));return Sc({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.Wap.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],l=(0,xc.n7)(i,o,s,u),c=r.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,s,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const i=e.filter((e=>r.D5U.sizeFromShape(e.shape)>0)),o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=o?new lc.l(e[0].shape,lc.bl):new cc.cc(e[0].shape,lc.bl);return n.runWebGLProgram(t,e,s)}const u=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>u){const e=[];for(let s=0;s<i.length;s+=u){const r=i.slice(s,s+u);e.push(td(r,t,n))}const r=td(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new Yh(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,s)}const{tensors2D:l,outShape:c}=function(e,t,n){const s=r.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Sc({inputs:{x:e},attrs:{shape:[-1,r.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(i,t,n),h=new Qh(l.map((e=>e.shape))),d=n.runWebGLProgram(h,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=Sc({inputs:{x:d},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(d),p}function nd(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0],o=t.map((e=>e.shape));r.Wap.assertParamsConsistent(o,i);const u=r.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));return 1===l.length?Jl({inputs:{x:l[0]},backend:n}):td(l,i,n)}const rd={kernelName:r.Eh3,backendName:"webgl",kernelFunc:nd};class sd{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",k="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${k}\n        setOutput(result);\n      }\n    `}}class ad{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class id{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<c;r++)d+=`\n           vec4 xTexelC${2*r};\n           int xTexelC${2*r}Ready;\n           vec4 xTexelC${2*r+1};\n           int xTexelC${2*r+1}Ready;\n           vec4 xC${r};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let r=0;r<c;r++)d+=`\n           xTexelC${2*r} = vec4(0.0);\n           xTexelC${2*r}Ready = 0;\n           xTexelC${2*r+1} = vec4(0.0);\n           xTexelC${2*r+1}Ready = 0;\n           xC${r} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(h+1)/2;g++){const t=2*g;if(d+=`\n           xC = xCCorner + ${t*u};\n           `,1===o){if(t<c&&(i%2===1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,d+=1===u&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=i%2===0?r.D5U.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,d+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):d+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(i%2===1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(d+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(d+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(d+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}var od=n(29610);class ud{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const{dataFormat:n}=t,r=(0,od.A)(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function ld(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function cd({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=i){const e=ld(i.shape,f);null!=e&&(i=Sc({inputs:{x:i},backend:s,attrs:{shape:e}}),g.push(i))}if(null!=a){const e=ld(a.shape,f);null!=e&&(a=Sc({inputs:{x:a},backend:s,attrs:{shape:e}}),g.push(a))}if(!((1===d||1===p)&&h>1e3)&&c.isPacked&&f&&null!=c.texture&&l[2]%2!==0&&r.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const h=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.D5U.assert(Ic.oT(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const f=Sc({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const b=Mc({a:d,b:f,backend:s,transposeA:false,transposeB:false,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),x=s.texData.get(b.dataId);r.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,x.shape=n.outShape,m=Jl({inputs:{x:b},backend:s}),m.shape=n.outShape,g.push(b)}else{const r=n.outHeight*n.outWidth,l=Sc({inputs:{x:e},backend:s,attrs:{shape:f?[n.batchSize,r,n.inChannels]:[n.batchSize,n.inChannels,r]}}),c=Sc({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Mc({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:false,backend:s,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=Sc({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const r of g)s.disposeIntermediateTensorInfo(r);return m}function hd({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=l*c*h,b=p*d,x=[n.batchSize,g,b],y=[];if(null!=i){const e=ld(i.shape,m);null!=e&&(i=Sc({inputs:{x:i},backend:s,attrs:{shape:e}}),y.push(i))}if(null!=a){const e=ld(a.shape,m);null!=e&&(a=Sc({inputs:{x:a},backend:s,attrs:{shape:e}}),y.push(a))}const k=Sc({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.D5U.sizeFromShape(t.shape)/g]}});y.push(k);const v=new ud(x,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(v,[e],"float32",w),S=Sc({inputs:{x:I},backend:s,attrs:{shape:x}});y.push(I),y.push(S);const C=null!=a,N=null!=i,T="leakyrelu"===u,$=u?pc(u,!0):null,E=new fc(m?S.shape:k.shape,m?k.shape:S.shape,m?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,C,$,N,T),A=m?[S,k]:[k,S];if(a&&A.push(a),N&&A.push(i),T){const e=s.makeTensorInfo([],"float32",r.D5U.createScalarValue(o,"float32"));A.push(e),y.push(e)}const D=s.runWebGLProgram(E,A,"float32"),R=Sc({inputs:{x:D},backend:s,attrs:{shape:n.outShape}});y.push(D);for(const r of y)s.disposeIntermediateTensorInfo(r);return R}const dd={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s,d=r.Wap.convertConv2DDataFormat(l),p=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,u,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===d&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=new id(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[a,i],"float32",t)}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))f=hd({x:a,filter:i,convInfo:p,backend:n});else{const e=new sd(p);f=n.runWebGLProgram(e,[a,i],"float32")}else f=cd({x:a,filter:i,convInfo:p,backend:n});const m=Sc({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class pd{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fd{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class md{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gd{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bd={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s,d=r.Wap.convertConv2DDataFormat(l),p=r.Wap.computeConv2DInfo(a.shape,h,o,1,u,c,!1,d),f=new pd(p);return n.runWebGLProgram(f,[a,i],"float32")}};class xd{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const yd={kernelName:r.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s,d=r.Wap.convertConv2DDataFormat(c),p=r.Wap.computeConv2DInfo(o,i.shape,u,1,l,h,!1,d);if((0,r.OBj)().getBool("WEBGL_PACK")&&"channelsLast"===d){const e=[[p.strideHeight,p.strideWidth]],t=new xd(p);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new fd(p);return n.runWebGLProgram(e,[a,i],"float32")}}};const kd={kernelName:r.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,l,u),h=new ad(c);return n.runWebGLProgram(h,[a,i],"float32")}};const vd={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=s,c=r.Wap.computeConv3DInfo(a.shape,l,o,1,u),h=new md(c);return n.runWebGLProgram(h,[a,i],"float32")}};const wd={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=s,c=r.Wap.computeConv3DInfo(l,i.shape,u,1,o),h=new gd(c);return n.runWebGLProgram(h,[a,i],"float32")}},Id=hc({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Yl}\n  return result;\n`}),Sd={kernelName:r.mc4,backendName:"webgl",kernelFunc:Id},Cd=hc({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Nd={kernelName:r.TR1,backendName:"webgl",kernelFunc:Cd};class Td{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,k]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const $d={kernelName:r.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new Td(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var Ed;!function(e){e.Prod="*",e.Sum="+"}(Ed||(Ed={}));class Ad{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===Ed.Prod?"1.0":"0.0",i=n?a:`getX(${Dd(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,Ql.kW)(s)} coords = getOutputCoords();\n        int end = ${Rd(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${Rd(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Dd(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Dd(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Rd(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Fd(e,t,n,s,a,i){const o=t.shape.length,u=r.Wap.getAxesPermutation([s],o);let l=t;null!=u&&(l=_c({inputs:{x:t},backend:n,attrs:{perm:u}}));const c=r.Wap.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const h=l.shape[c];let d=Jl({inputs:{x:l},backend:n});for(let r=0;r<=Math.ceil(Math.log2(h))-1;r++){const t=new Ad(e,l.shape,!1,i),s=[[r]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,s),n.disposeIntermediateTensorInfo(a)}if(a){const t=new Ad(e,l.shape,a,i),r=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=_c({inputs:{x:d},backend:n,attrs:{perm:r.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}const _d={kernelName:r.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return Fd(Ed.Prod,s,n,a,i,o)}};const Od={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return Fd(Ed.Sum,s,n,a,i,o)}};const Md={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=(0,xc.qO)(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=(0,xc.cx)(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class Bd{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Wd={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new Bd("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class Ld{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Ud{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,Xl.C9)(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<h;r++)p+=`\n          vec4 xTexelC${2*r};\n          int xTexelC${2*r}Ready;\n          vec4 xTexelC${2*r+1};\n          int xTexelC${2*r+1}Ready;\n          vec4 xC${r};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let r=0;r<h;r++)p+=`\n          xTexelC${2*r} = vec4(0.0);\n          xTexelC${2*r}Ready = 0;\n          xTexelC${2*r+1} = vec4(0.0);\n          xTexelC${2*r+1}Ready = 0;\n          xC${r} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(d+1)/2;b++){const e=2*b;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===u){if(e<h&&(o%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){const t=o%2===0?r.D5U.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(o%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const zd={kernelName:r.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;let h=l;null==h&&(h=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=r.Wap.computeConv2DInfo(a.shape,i.shape,o,h,u,c,!0);let p;p=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new Ud(d):new Ld(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,i],"float32",f)}};class Pd{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vd{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Hd={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s,d=r.Wap.computeConv2DInfo(a.shape,h,o,u,l,c,!0),p=new Pd(d);return n.runWebGLProgram(p,[a,i],"float32")}};const Gd={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s,d=r.Wap.computeConv2DInfo(h,i.shape,o,u,l,c,!0),p=new Vd(d);return n.runWebGLProgram(p,[a,i],"float32")}};class jd{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Xd={kernelName:r.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.D5U.sizeFromShape(s.shape),o=Sc({inputs:{x:s},backend:n,attrs:{shape:[i]}}),u=new jd(i),l=n.runWebGLProgram(u,[o],o.dtype),c=Sc({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class qd{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Kd={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.Wap.computeDilation2DInfo(a.shape,i.shape,o,u,"NHWC",l);let h;const d=new qd(c);h=n.runWebGLProgram(d,[a,i],"float32");const p=Sc({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),p}};const Qd={kernelName:r.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:u,idDims:l}=r.Wap.decodeEinsumEquation(a,i.length);r.Wap.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:h}=r.Wap.getEinsumComputePath(u,l),d=h.length;let p=null,f=o.length;const m=[];for(let g=0;g<d;++g){for(const e of h[g]){const{permutationIndices:t,expandDims:s}=r.Wap.getEinsumPermutation(f,l[e]);let a;r.Wap.isIdentityPermutation(t)?a=i[e]:(a=_c({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=Sc({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===p?p=a:(p=kc({inputs:{a:a,b:p},backend:n}),m.push(p))}g<d-1&&(c[g]>=0&&(p=Rc({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},Yd=hc({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Zd={kernelName:r.SX0,backendName:"webgl",kernelFunc:Yd},Jd={kernelName:r.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,a.shape):new ql("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}},ep=dc({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xc.gv}),tp={kernelName:r.hdR,backendName:"webgl",kernelFunc:ep},np=hc({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),rp={kernelName:r.Omj,backendName:"webgl",kernelFunc:np},sp=hc({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xc.aX,dtype:"float32"}),ap={kernelName:r.NEP,backendName:"webgl",kernelFunc:sp};function ip(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let l=a;return a<0&&(r.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),Sc({inputs:{x:i},backend:s,attrs:{shape:u}})}const op={kernelName:r.YFo,backendName:"webgl",kernelFunc:ip},up="return exp(x) - 1.0;",lp=hc({opSnippet:up,packedOpSnippet:up,cpuKernelImpl:xc.tx}),cp={kernelName:r.Y0y,backendName:"webgl",kernelFunc:lp};class hp{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function dp(e,t,n){const s=n.texData.get(e.dataId),a=r.D5U.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=Sc({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),u=o.shape,l=new hp("real",u,t),c=new hp("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=tc({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=Sc({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const pp={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dp(r,!1,n)}};class fp{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function mp(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.D5U.inferDtype(a),"string"===i){const e=r.D5U.getArrayFromDType(i,r.D5U.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new fp(s,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const gp={kernelName:r.deh,backendName:"webgl",kernelFunc:mp};class bp{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const xp={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new bp(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},yp="return floor(x);",kp=hc({opSnippet:yp,packedOpSnippet:yp,cpuKernelImpl:xc.MZ}),vp={kernelName:r.OR,backendName:"webgl",kernelFunc:kp},wp=dc({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ip={kernelName:r.jeX,backendName:"webgl",kernelFunc:wp};var Sp=n(18378);class Cp{constructor(e){this.variableNames=["A"];const t=(0,od.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Np{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,od.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Tp={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:i}=s,o="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[c,l],d=[c,l,i];if(u||o){const e=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=$p&&e===Ep||(Ep=e,$p=document.createElement("canvas").getContext("2d",{willReadFrequently:Ep})),$p.canvas.width=l,$p.canvas.height=c,$p.drawImage(a,0,0,l,c),a=$p.canvas}const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Sp.v2.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=(0,r.OBj)().getBool("WEBGL_PACK")?new Np(d):new Cp(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let $p,Ep=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Ap={kernelName:r._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=r.Wap.convertConv2DDataFormat(h),b=r.Wap.computeConv2DInfo(a.shape,i.shape,l,d,c,p,!1,g);let x;const y=[],k=null!=o,v=null!=u,w="leakyrelu"===f,I=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Sc({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(k&&e.push(t(o,h)),v&&e.push(t(u,h)),w){const t=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(m,"float32"));e.push(t),y.push(t)}return e};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(b.strideWidth<=2&&"channelsLast"===g&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=f?pc(f,!0):null,t=new id(b,k,e,v,w),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],s=I();x=n.runWebGLProgram(t,s,"float32",r)}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))x=hd({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=f?pc(f,!1):null,t=new sd(b,k,e,v,w),r=I();x=n.runWebGLProgram(t,r,"float32")}else x=cd({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const S=Sc({inputs:{x:x},backend:n,attrs:{shape:b.outShape}});return y.push(x),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Dp={kernelName:r.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=r.Wap.computeConv2DInfo(a.shape,i.shape,l,g,c,d,!0),x=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,y=p?pc(p,x):null,k=[a,i],v=null!=o,w=null!=u,I="leakyrelu"===p;if(v&&k.push(o),w&&k.push(u),I){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(f,"float32"));k.push(e),m.push(e)}let S;S=x?new Ud(b,v,y,w,I):new Ld(b,v,y,w,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,k,"float32",C);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class Rp{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=(0,Ql.kW)(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Fp={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],u=r.D5U.sizeFromShape(s.shape),[l,c,h,d]=r.Wap.prepareAndValidate(s,a),p=Sc({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=Sc({inputs:{x:s},backend:n,attrs:{shape:[r.D5U.sizeFromShape(s.shape)/h,h]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=(0,xc.TD)(e,t,s.dtype,c,o,h,d,s.shape,u);return n.makeTensorInfo(l,s.dtype,r.values)}const m=new Rp(o,d,[c,h],s.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),b=Sc({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),b}};class _p{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,Ql.kW)(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Op(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:u}=s,l=r.D5U.parseAxisParam(o,a.shape)[0];if((0,r.OBj)().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){const s=e[n];r.D5U.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const c=r.Wap.segment_util.collectGatherOpShapeInfo(a,i,l,u),h=r.D5U.sizeFromShape(i.shape),d=[],p=Sc({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Sc({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});d.push(p),d.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=(0,xc.m$)(t,e,m);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new _p(p.shape,m),b=n.runWebGLProgram(g,[p,f],p.dtype);d.push(b);const x=Sc({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const Mp={kernelName:r.qi_,backendName:"webgl",kernelFunc:Op},Bp=dc({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:xc.B_,dtype:"bool"}),Wp={kernelName:r.iZT,backendName:"webgl",kernelFunc:Bp},Lp=dc({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:xc.ji}),Up={kernelName:r.Acj,backendName:"webgl",kernelFunc:Lp};const zp={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dp(r,!0,n)}},Pp=hc({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Vp={kernelName:r.avt,backendName:"webgl",kernelFunc:Pp},Hp=hc({opSnippet:"return float(isinf(x));",dtype:"bool"}),Gp={kernelName:r.iWB,backendName:"webgl",kernelFunc:Hp},jp=hc({opSnippet:"return float(isnan(x));",dtype:"bool"}),Xp={kernelName:r.r7n,backendName:"webgl",kernelFunc:jp},qp=dc({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:xc.kY,dtype:"bool"}),Kp={kernelName:r.vtC,backendName:"webgl",kernelFunc:qp},Qp=dc({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:xc.Rn,dtype:"bool"}),Yp={kernelName:r.CAk,backendName:"webgl",kernelFunc:Qp};const Zp={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=(0,xc.PQ)(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Jp=hc({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:xc.Sd}),ef={kernelName:r.ZbH,backendName:"webgl",kernelFunc:Jp},tf=hc({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),nf={kernelName:r.kU,backendName:"webgl",kernelFunc:tf},rf=dc({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),sf={kernelName:r.PYm,backendName:"webgl",kernelFunc:rf},af=hc({opSnippet:"return float(!(x >= 1.0));"}),of={kernelName:r.VfG,backendName:"webgl",kernelFunc:af},uf=dc({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),lf={kernelName:r.MZg,backendName:"webgl",kernelFunc:uf};class cf{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class hf{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const df={kernelName:r.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=s,c=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new hf(a.shape,i,o,u,l):new cf(a.shape,i,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class pf{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ff={kernelName:r.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new pf(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function mf(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u),d=null!=h,p=n.shouldExecuteOnCPU([a]);let f=a;if(d){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];const r=(0,xc.Fv)(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=Dc(a,h,n);c=r.Wap.getInnerMostAxes(c.length,u)}r.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=r.Wap.computeOutAndReduceShapes(f.shape,c);let b,x=m;if(o&&(x=r.Wap.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=(0,xc.$O)(e,r.D5U.sizeFromShape(g),x,a.dtype);b=n.makeTensorInfo(x,a.dtype);n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=Sc({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=$c(i,e.dtype,"max",s),u=Sc({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(f,g,x,n);return d&&n.disposeIntermediateTensorInfo(f),b}const gf={kernelName:r.YoZ,backendName:"webgl",kernelFunc:mf},bf=dc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:xc.nL}),xf={kernelName:r.BMI,backendName:"webgl",kernelFunc:bf};const yf={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,Ic.HS)(a,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return Jl({inputs:{x:a},backend:n});const h=new mh(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};const kf={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],u,c,l),d=new gh(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class vf{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wf{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const If={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=r.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),p=new gh(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new wf(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Sf={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,u=i;(0,Ic.HS)([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:d}=s,p=r.Wap.computePool2DInfo(u.shape,l,c,1,h,d),f=new mh(p,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new vf(p),b=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),b}};const Cf={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;r.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=r.Wap.computePool2DInfo(s.shape,a,i,c,o),[d,p]=function(e,t,n,r){let s=new mh(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new mh(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,u,h,l);return[d,p]}};const Nf={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,u=s.shape.length,l=r.D5U.parseAxisParam(i,s.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u),d=null!=h,p=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=(0,xc.Fv)(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype);o.texData.get(m.dataId).values=n}else m=Dc(s,h,o);f.push(m),c=r.Wap.getInnerMostAxes(c.length,u)}r.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,b]=r.Wap.computeOutAndReduceShapes(m.shape,c);let x=g;a&&(x=r.Wap.expandShapeToKeepDim(g,l));const y=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=Sc({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=$c(i,"float32","mean",s),u=Sc({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(m,b,x,o);for(const r of f)o.disposeIntermediateTensorInfo(r);return y}};const Tf={kernelName:r.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let d=a;null!=h&&(d=_c({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",c,u);const[p,f]=r.Wap.computeOutAndReduceShapes(d.shape,c),m=Sc({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$c(m,m.dtype,"min",n);let b;if(o){b=Sc({inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,l)}})}else b=Sc({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),b}},$f=dc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:xc.r}),Ef={kernelName:r.q8u,backendName:"webgl",kernelFunc:$f};class Af{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,Ql.kW)(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Df{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,Ql.kW)(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=(0,Kl.Ky)("rc",r),u=(0,Kl.Ky)("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Rf={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:a,mode:i}=n,o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Df(s.shape,a,i):new Af(s.shape,a,i);return t.runWebGLProgram(o,[s],s.dtype)}},Ff=dc({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),_f={kernelName:r.Vbg,backendName:"webgl",kernelFunc:Ff};class Of{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Mf=dc({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Bf={kernelName:r.oHH,backendName:"webgl",kernelFunc:Mf},Wf="return a - b;",Lf=dc({opSnippet:Wf,packedOpSnippet:Wf,supportsComplex:!0,cpuKernelImpl:xc.kI}),Uf={kernelName:r.Tr8,backendName:"webgl",kernelFunc:Lf};function zf(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.D5U.parseAxisParam([i],a.shape),u=mf({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=r.Wap.expandShapeToKeepDim(u.shape,o),c=Sc({inputs:{x:u},backend:n,attrs:{shape:l}}),h=Lf({inputs:{a:a,b:c},backend:n}),d=sp({inputs:{x:h},backend:n}),p=Rc({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),f=Sc({inputs:{x:p},backend:n,attrs:{shape:l}}),m=Mf({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const Pf={kernelName:r.Gcp,backendName:"webgl",kernelFunc:zf};const Vf={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:zf({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Of(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},Hf=lc.D1+"\n  return -x;\n";const Gf={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=(0,xc.Bo)(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cc.cc(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new lc.l(s.shape,Hf),n.runWebGLProgram(a,[s],s.dtype)}},jf=r.GDt.GP;const Xf={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=s,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:d}=jf(c,h,o,u,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},qf=r.GDt.qP;const Kf={kernelName:r.cye,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=s,h=n.readSync(a.dataId),d=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=qf(h,d,o,u,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Qf=r.GDt.pA;const Yf={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=s,h=n.readSync(a.dataId),d=n.readSync(i.dataId),p=o,f=u,m=l,g=c,{selectedIndices:b,selectedScores:x}=Qf(h,d,p,f,m,g);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class Zf{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Jf={kernelName:r.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:i,depth:o,onValue:u,offValue:l}=s,c=r.D5U.sizeFromShape(a.shape),h=new Zf(c,o,u,l),d=Sc({inputs:{x:a},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(h,[d],i);n.disposeIntermediateTensorInfo(d);const f=Sc({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(p),f}};function em(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Wh({inputs:{input:r},backend:n}),t=em({inputs:{x:e},backend:n}),s=Jh({inputs:{input:r},backend:n}),a=em({inputs:{x:s},backend:n}),i=tc({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return mp({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const tm={kernelName:r.RuY,backendName:"webgl",kernelFunc:em};const nm={kernelName:r.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Wh({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Jh({inputs:{input:s},backend:r}),i=em({inputs:{x:a},backend:r}),o=tc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return mp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const rm={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return ip({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=nd({inputs:t.map((e=>{const t=ip({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class sm{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,Ql.kW)(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class am{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,Ql.kW)(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=(0,Kl.Ky)("rc",r),u=(0,Kl.Ky)("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const im=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;if(0===r.D5U.sizeFromShape(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return mp({backend:n,attrs:{shape:e,value:o,dtype:a.dtype}})}const u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new am(a.shape,i,o):new sm(a.shape,i,o),l=[[o]];return n.runWebGLProgram(u,[a],a.dtype,l)},om={kernelName:r.lyA,backendName:"webgl",kernelFunc:im},um=dc({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),lm={kernelName:r.pe_,backendName:"webgl",kernelFunc:um};const cm={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=[],c=r.D5U.parseAxisParam(i,a.shape);let h=c;const d=r.Wap.getAxesPermutation(h,u);let p,f=a;if(null!=d&&(f=_c({inputs:{x:a},backend:n,attrs:{perm:d}}),h=r.Wap.getInnerMostAxes(h.length,u),l.push(f)),r.Wap.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:s}=(0,xc.Tg)(f.shape,f.dtype,e,h);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=r.Wap.computeOutAndReduceShapes(f.shape,h),s=r.D5U.sizeFromShape(t),i=Sc({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),o=$c(i,(0,r.z4k)(a.dtype),"prod",n);p=Sc({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(o){l.push(p);const e=r.Wap.expandShapeToKeepDim(p.shape,c);p=Sc({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const hm={kernelName:r.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=(0,xc.Qs)(u,l,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const dm={kernelName:r.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=(0,xc.M8)(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};const pm={kernelName:r.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=(0,xc.fy)(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},fm=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=(0,xc.hO)(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},mm={kernelName:r.e6w,backendName:"webgl",kernelFunc:fm},gm=hc({opSnippet:"return 1.0 / x;"}),bm={kernelName:r.$HU,backendName:"webgl",kernelFunc:gm},xm=hc({opSnippet:lc.D1+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ym={kernelName:r.qkr,backendName:"webgl",kernelFunc:xm},km=hc({opSnippet:lc.D1+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vm={kernelName:r.SbG,backendName:"webgl",kernelFunc:km};class wm{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Im{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Sm={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Im(a.shape,l,c,i,o):new wm(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],"float32")}};class Cm{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Nm={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new Cm(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Tm{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class $m{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Em={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $m(a.shape,l,c,i,o):new Tm(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],a.dtype)}};class Am{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Dm={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new Am(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Rm{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=(0,Ql.kW)(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Fm{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=(0,Kl.Ky)("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=(0,Ql.kW)(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const _m={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);if(0===o)return Jl({inputs:{x:a},backend:n});const l=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fm(a.shape,u):new Rm(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class Om{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Mm={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,u=n,l=new Om(s.shape,i),[c,h]=r.Wap.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,h,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[s],s.dtype,d)}},Bm=hc({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Wm={kernelName:r.e07,backendName:"webgl",kernelFunc:Bm},Lm=hc({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xc.St}),Um={kernelName:r.bV0,backendName:"webgl",kernelFunc:Lm};class zm{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=(0,Ql.kW)(s.length),l=(0,Ql.kW)(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class Pm{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=(0,Ql.kW)(s.length),l=(0,Ql.kW)(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const Vm={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=r.Wap.calculateShapes(i,a,o),p=[d/c,c];if(0===d)return n.makeTensorInfo(o,a.dtype);const f=Sc({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=Sc({inputs:{x:i},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let b;b=(0,r.OBj)().getBool("WEBGL_PACK")?new Pm(l,u,f.shape.length,m.shape.length,h,p):new zm(l,u,f.shape.length,m.shape.length,h,p);const x=n.runWebGLProgram(b,[m,f,g],m.dtype),y=Sc({inputs:{x:x},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(g),y}};class Hm{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===(0,r.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":a,o="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Gm={kernelName:r.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new Hm(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class jm{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=(0,Ql.kW)(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Xm={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t,o=new jm(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[s,a,i],(0,r.x8V)(a.dtype,i.dtype))}},qm=hc({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Km={kernelName:r.oFR,backendName:"webgl",kernelFunc:qm},Qm=hc({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xc.UN}),Ym={kernelName:r.a5O,backendName:"webgl",kernelFunc:Qm},Zm=hc({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Jm={kernelName:r.i5y,backendName:"webgl",kernelFunc:Zm},eg=hc({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Yl}\n  return result;\n`}),tg={kernelName:r.RQH,backendName:"webgl",kernelFunc:eg},ng=hc({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),rg={kernelName:r.wYB,backendName:"webgl",kernelFunc:ng},sg=hc({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),ag={kernelName:r.MRv,backendName:"webgl",kernelFunc:sg},ig={kernelName:r.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let r=1+i.length;r<a.shape.length;++r)l.push([0,0]);const c=[],h=im({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=r.Wap.getReshaped(h.shape,i,u,!1),p=r.Wap.getPermuted(d.length,i.length,!1),f=r.Wap.getReshapedPermuted(h.shape,i,u,!1),m=Sc({inputs:{x:h},backend:n,attrs:{shape:d}}),g=_c({inputs:{x:m},backend:n,attrs:{perm:p}}),b=Sc({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const og={kernelName:r.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=(0,xc.X8)(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const ug={kernelName:r.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=(0,xc.LS)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const lg={kernelName:r.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=(0,xc.AR)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const cg={kernelName:r.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=(0,xc.AR)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const hg={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:d,outputSize:p}=r.Wap.calculateShapes(i,a,u);if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),s=r.D5U.decodeString(n.readSync(o.dataId)[0]),f=(0,xc.Y1)(e,t,u,p,h,c,l,d,s,false);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new zm(c,l,a.shape.length,i.shape.length,d,[p,1],false),m=n.runWebGLProgram(f,[i,a,o],i.dtype),g=Sc({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),g}};const dg={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],l=r.Wap.prepareSplitSize(a,i,u),c=a.shape.length,h=new Array(c).fill(0),d=a.shape.slice();return l.map((e=>{const t=[...d];t[u]=e;const r=Ah({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[u]+=e,r}))}},pg="return sqrt(x);",fg=hc({opSnippet:pg,packedOpSnippet:pg,cpuKernelImpl:xc.Bk}),mg={kernelName:r.FKq,backendName:"webgl",kernelFunc:fg},gg=hc({opSnippet:"return x * x;"}),bg={kernelName:r.bK0,backendName:"webgl",kernelFunc:gg},xg="return (a - b) * (a - b);",yg=dc({opSnippet:xg,packedOpSnippet:xg}),kg={kernelName:r._tC,backendName:"webgl",kernelFunc:yg};const vg={kernelName:r.e0R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(a.dataId),o=r.Wap.fromUint8ToStringArray(i),u=(0,xc.F1)(o,"string",s);return n.makeTensorInfo(a.shape,"string",u)}};const wg={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=lc.D1+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new lc.l(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Ig{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=(0,Ql.kW)(n.length),a=(0,Ql.kW)(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Sg={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:k,strides:v}=r.kuN.sliceInfo(a.shape,i,o,u,l,c,h,d,p);let w;if(g)w=Sc({inputs:{x:a},backend:n,attrs:{shape:m}});else if(b||x){r.D5U.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=r.kuN.computeOutShape(y,k,v),t=Ah({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=Sc({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,r.f3b)(a.shape,a.dtype,e),s=(0,xc.$u)(f,t,v,y);w=n.makeTensorInfo(m,a.dtype,s.values)}else{const e=new Ig(y,v,f);w=n.runWebGLProgram(e,[a],a.dtype)}}const I=Sc({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),I}};const Cg={kernelName:r._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=(0,xc.$j)(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const Ng={kernelName:r.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=(0,xc.A0)(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const Tg={kernelName:r.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=(0,xc._9)(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},$g=hc({opSnippet:"return tan(x);"}),Eg={kernelName:r.sEM,backendName:"webgl",kernelFunc:$g},Ag=hc({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Dg={kernelName:r.MIZ,backendName:"webgl",kernelFunc:Ag};const Rg={kernelName:r.SIB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:a,indices:i,updates:o}=t,{}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=r.Wap.calculateShapes(o,i,a.shape),p=[d/c,c];if(0===d)return n.makeTensorInfo(a.shape,i.dtype);const f=Sc({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=Sc({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=Sc({inputs:{x:a},backend:n,attrs:{shape:p}}),b=new zm(l,u,f.shape.length,m.shape.length,h,p,!1,!0),x=n.runWebGLProgram(b,[m,f,g],g.dtype),y=Sc({inputs:{x:x},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),y}};class Fg{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=(0,Ql.kW)(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function _g(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>r.D5U.decodeString(e))):e,s=(0,r.f3b)(a.shape,a.dtype,t),o=(0,xc.KX)(s,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Fg(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const Og={kernelName:r.n9L,backendName:"webgl",kernelFunc:_g};class Mg{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Bg{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Wg(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Lg(e){let t=1;for(;t<e;)t*=2;return t}const Ug={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:i,sorted:o}=s,u=(0,r.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,r.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([a])||h<u||i>l){const e=n.readSync(a.dataId),[t,r]=(0,xc.oC)(e,c,a.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[a,mp({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(a):a,m=r.D5U.sizeFromShape(c)/h,g=Sc({inputs:{x:f},attrs:{shape:[m,h]},backend:n});p&&Wg(n,f);const b=Lg(i),x=Lg(h);let y=null;const k=()=>null===y?[g,g]:[g,y],v=(e,t,r)=>{const s=k(),a=new Mg(r),i=[[h],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(a,s,"int32",i),Wg(n,o)};for(let r=1;r<b;r*=2){const e=2*r;for(let t=r;t>=1;t/=2)v(e,t,[m,x])}for(let r=x;r>b;r/=2){const e=k(),t=new Bg([m,r/2]),s=[[h],[null===y?1:0],[b]],a=y;y=n.runWebGLProgram(t,e,"int32",s),Wg(n,a);const i=b/2,o=2*i;for(let n=i;n>=1;n/=2)v(o,n,y.shape)}let w=y;y=Ah({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,i]}}),Wg(n,w);let I=Op({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Wg(n,g);const S=c.slice(0,-1);S.push(i),w=y,y=Sc({inputs:{x:y},attrs:{shape:S},backend:n}),Wg(n,w);const C=I;return I=Sc({inputs:{x:I},attrs:{shape:S},backend:n}),Wg(n,C),[I,y]}};class zg{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Pg={kernelName:r.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new zg(h,d,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}};const Vg={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;(0,Ic.HS)(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=(0,xc.CV)(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const Hg={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;const e=Ah({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=Sc({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Gg{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const jg=[Bc,Lc,zc,Vc,jc,Kc,Qc,Yc,rh,sh,ih,uh,ch,dh,fh,bh,xh,vh,wh,Ih,Nh,Rh,Fh,_h,Oh,Uh,Vh,jh,nc,Kh,rd,dd,bd,yd,kd,vd,wd,Sd,Nd,$d,_d,Od,Md,Wd,zd,Hd,Gd,Xd,Kd,Qd,Zd,Jd,tp,rp,ap,op,cp,pp,gp,xp,vp,Ip,Tp,Ap,Dp,Fp,Mp,Wp,Up,ec,zp,ed,Vp,Gp,Xp,ac,Kp,Yp,Zp,ef,nf,sf,of,lf,df,ff,gf,xf,yf,kf,If,Sf,Cf,Nf,Tf,Ef,Rf,_f,Vf,vc,Gf,Xf,Kf,Yf,Bh,Jf,nm,rm,om,lm,uc,cm,hm,dm,pm,mm,Lh,Bf,bm,ym,vm,Cc,Sm,Nm,Em,Dm,_m,Mm,Wm,Um,Vm,Gm,Xm,Km,Ym,Jm,tg,rg,Dh,Pf,ag,ig,og,ug,lg,cg,hg,dg,mg,bg,kg,vg,wg,Sg,Cg,Ng,Tg,Uf,Fc,Eg,Dg,Rg,Og,Ug,Pg,Oc,Vg,Hg,{kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,u=a.shape.length,l=[];let c=0;const h=r.Wap.getAxesPermutation([c],u);let d=a;null!=h&&(d=_c({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(d),c=r.Wap.getInnerMostAxes(1,u)[0]);const p=r.Wap.segment_util.computeOutShape(d.shape,c,o),f=r.D5U.sizeFromShape([d.shape[c]]),m=Sc({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,r.z4k)(a.dtype),b=(e,t,s,a,i)=>{const o=e.shape[0],u=e.shape[1],c=r.Wap.segment_util.segOpComputeOptimalWindowSize(u,i),h=new Gg({windowSize:c,inSize:u,batchSize:o,numSegments:i},t),d=n.compileAndRun(h,[e,s],a);if(l.push(d),d.shape[1]===i)return d;const p=fm({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=_g({inputs:{x:p},backend:n,attrs:{reps:[u/c]}});l.push(p),l.push(f);return b(d,t,f,a,i)},x=Sc({inputs:{x:b(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:p}});let y=x;if(null!=h){l.push(x);const e=r.Wap.getUndoAxesPermutation(h);y=_c({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},tm];for(const Xg of jg)(0,r.wCN)(Xg);r.jTM,Yr.i},43720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return w}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var k=i(-1);n.NEG_ONE=k;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var w=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+a*c+i*l,u((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(k)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:k:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),s=s.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},36377:function(e,t,n){var r=n(84832),s=n(68652),a=n(90801),i=n(92030),o=n(3618),u=n(89049),l=n(51971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},84832:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},89049:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},68652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},92030:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},90801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},51971:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),x(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,x(a)]}}():e,3),r),p=new f(r),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(y,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),a),e.exports){e.exports=p;try{o=n(75042)}catch(y){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)}}]);